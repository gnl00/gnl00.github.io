import{_ as s,c as a,b as p,a as e,r as t,o}from"./app.d8a09d34.js";const g='{"title":"TypeScript","description":"","frontmatter":{"sidebarDepth":1},"headers":[{"level":2,"title":"\u5B89\u88C5","slug":"\u5B89\u88C5"},{"level":2,"title":"\u57FA\u672C\u7C7B\u578B\u548C\u6269\u5C55\u7C7B\u578B","slug":"\u57FA\u672C\u7C7B\u578B\u548C\u6269\u5C55\u7C7B\u578B"},{"level":3,"title":"\u57FA\u672C\u7C7B\u578B","slug":"\u57FA\u672C\u7C7B\u578B"},{"level":3,"title":"\u7279\u6B8A\u7C7B\u578B","slug":"\u7279\u6B8A\u7C7B\u578B"},{"level":2,"title":"\u51FD\u6570","slug":"\u51FD\u6570"},{"level":3,"title":"\u53EF\u9009\u53C2\u6570\u548C\u975E\u7A7A\u65AD\u8A00\u64CD\u4F5C\u7B26","slug":"\u53EF\u9009\u53C2\u6570\u548C\u975E\u7A7A\u65AD\u8A00\u64CD\u4F5C\u7B26"},{"level":2,"title":"\u7C7B","slug":"\u7C7B"},{"level":2,"title":"\u4FEE\u9970\u7B26/\u88C5\u9970\u5668 @","slug":"\u4FEE\u9970\u7B26-\u88C5\u9970\u5668"},{"level":3,"title":"\u56DB\u79CD\u88C5\u9970\u5668","slug":"\u56DB\u79CD\u88C5\u9970\u5668"},{"level":3,"title":"\u88C5\u9970\u5668\u6267\u884C\u65F6\u671F","slug":"\u88C5\u9970\u5668\u6267\u884C\u65F6\u671F"},{"level":3,"title":"\u81EA\u5B9A\u4E49\u88C5\u9970\u5668","slug":"\u81EA\u5B9A\u4E49\u88C5\u9970\u5668"},{"level":2,"title":"\u63A5\u53E3","slug":"\u63A5\u53E3"},{"level":2,"title":"Type \u7C7B\u578B\u522B\u540D","slug":"type-\u7C7B\u578B\u522B\u540D"},{"level":3,"title":"Type \u4E0E Interface","slug":"type-\u4E0E-interface"},{"level":2,"title":"\u679A\u4E3E","slug":"\u679A\u4E3E"},{"level":2,"title":"\u6CDB\u578B","slug":"\u6CDB\u578B"},{"level":2,"title":"\u58F0\u660E\u6587\u4EF6\u4E0E\u547D\u540D\u7A7A\u95F4","slug":"\u58F0\u660E\u6587\u4EF6\u4E0E\u547D\u540D\u7A7A\u95F4"}],"relativePath":"posts/fe/TypeScript.md"}',c={},l=e(`<h1 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-hidden="true">#</a></h1><h2 id="\u5B89\u88C5" tabindex="-1">\u5B89\u88C5 <a class="header-anchor" href="#\u5B89\u88C5" aria-hidden="true">#</a></h2><div class="language-shell line-numbers-mode"><pre><code><span class="token comment"># \u5B89\u88C5</span>
<span class="token function">npm</span> <span class="token function">install</span> -g typescript
<span class="token comment"># \u4F7F\u7528ts-node\u8FD0\u884Cts\u6587\u4EF6</span>
<span class="token function">npm</span> <span class="token function">install</span> -g ts-node
<span class="token comment"># \u9879\u76EE\u4E2D or \u5168\u5C40\u52A0-g</span>
<span class="token function">npm</span> <span class="token function">install</span> @types/node
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u57FA\u672C\u7C7B\u578B\u548C\u6269\u5C55\u7C7B\u578B" tabindex="-1">\u57FA\u672C\u7C7B\u578B\u548C\u6269\u5C55\u7C7B\u578B <a class="header-anchor" href="#\u57FA\u672C\u7C7B\u578B\u548C\u6269\u5C55\u7C7B\u578B" aria-hidden="true">#</a></h2><h3 id="\u57FA\u672C\u7C7B\u578B" tabindex="-1">\u57FA\u672C\u7C7B\u578B <a class="header-anchor" href="#\u57FA\u672C\u7C7B\u578B" aria-hidden="true">#</a></h3><blockquote><p>5\u4E2A\u57FA\u672C\u7C7B\u578B</p></blockquote><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// number | Number</span>
<span class="token keyword">let</span> my_num<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">100</span>
<span class="token keyword">let</span> my_big_num<span class="token operator">:</span> Number <span class="token operator">=</span> <span class="token number">200</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_num<span class="token punctuation">,</span> my_big_num<span class="token punctuation">)</span>

<span class="token comment">// string | String</span>
<span class="token keyword">let</span> my_str<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;aaa&#39;</span>
<span class="token keyword">let</span> my_big_str<span class="token operator">:</span> String <span class="token operator">=</span> <span class="token string">&#39;AAA&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_str<span class="token punctuation">,</span> my_big_str<span class="token punctuation">)</span>

<span class="token comment">// boolean | Boolean</span>
<span class="token keyword">let</span> my_boo<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">let</span> my_big_boo<span class="token operator">:</span> Boolean <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_boo<span class="token punctuation">,</span> my_big_boo<span class="token punctuation">)</span>

<span class="token comment">// undefined</span>
<span class="token keyword">let</span> my_undefined<span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_undefined<span class="token punctuation">,</span> <span class="token keyword">typeof</span> my_undefined<span class="token punctuation">)</span><span class="token comment">// undefined undefined</span>

<span class="token comment">// null</span>
<span class="token keyword">let</span> my_nul<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token comment">/*
 typeof null === object\uFF0C\u4E0D\u540C\u7684\u5BF9\u8C61\u5728\u5E95\u5C42\u90FD\u8868\u793A\u4E3A\u4E8C\u8FDB\u5236\uFF0C\u5728 JavaScript \u4E2D\u4E8C\u8FDB\u5236\u524D\u4E09\u4F4D\u90FD\u4E3A 0 \u7684\u8BDD\u4F1A\u88AB\u5224\u65AD\u4E3A object \u7C7B\u578B\uFF0C
 null \u7684\u4E8C\u8FDB\u5236\u8868\u793A\u662F\u5168 0\uFF0C\u81EA\u7136\u524D\u4E09\u4F4D\u4E5F\u662F 0\uFF0C\u6240\u4EE5\u6267\u884C typeof \u65F6\u4F1A\u8FD4\u56DE \u201Cobject\u201D
*/</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_nul<span class="token punctuation">,</span> <span class="token keyword">typeof</span> my_nul<span class="token punctuation">)</span> <span class="token comment">// null object</span>
<span class="token comment">// Number(null) === 0</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 0</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p><strong>\u5B57\u9762\u91CF</strong></p><blockquote><p>\u5B9A\u4E49\u4EC0\u4E48\u503C\u5C31\u53EA\u80FD\u8D4B\u4EC0\u4E48\u503C</p></blockquote><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">let</span> dog<span class="token operator">:</span> <span class="token string">&#39;dog&#39;</span>

<span class="token comment">// dog = &#39;cat&#39; // error: &#39;&quot;cat&quot;&#39; is not assignable to type &#39;&quot;dog&quot;&#39;.</span>
dog <span class="token operator">=</span> <span class="token string">&#39;dog&#39;</span>

<span class="token comment">// \u540C\u65F6\u8D4B\u4E88\u591A\u4E2A\u4E0D\u540C\u7C7B\u578B\u7684\u53EF\u9009\u503C\uFF0C\u7528&quot;|&quot;\u5206\u5F00</span>
<span class="token keyword">let</span> my_var<span class="token operator">:</span> <span class="token string">&#39;cat&#39;</span><span class="token operator">|</span><span class="token string">&#39;dog&#39;</span><span class="token operator">|</span><span class="token boolean">false</span><span class="token operator">|</span><span class="token number">100</span>
my_var <span class="token operator">=</span> <span class="token string">&#39;cat&#39;</span>
my_var <span class="token operator">=</span> <span class="token string">&#39;dog&#39;</span>
my_var <span class="token operator">=</span> <span class="token boolean">false</span>
my_var <span class="token operator">=</span> <span class="token number">100</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>\u8054\u5408\u7C7B\u578B</strong></p><blockquote><p>\u5BF9\u4E8E\u4E00\u4E2A\u53D8\u91CF\u7684\u7C7B\u578B\u53EF\u80FD\u662F\u51E0\u79CD\u7C7B\u578B\u7684\u65F6\u5019\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 any \uFF0C\u4F46\u662F any \u7684\u8303\u56F4\u6709\u70B9\u5927\uFF0C\u4E0D\u5230\u4E07\u4E0D\u5F97\u5DF2\u4E0D\u4F7F\u7528\uFF1B\u5982\u679C\u77E5\u9053\u662F\u5176\u4E2D\u7684\u54EA\u51E0\u79CD\u7C7B\u578B\u7684\u8BDD\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528 \u8054\u5408\u7C7B\u578B \u7528 | \u5206\u9694</p></blockquote><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u8054\u5408\u7C7B\u578B union types</span>
<span class="token keyword">let</span> union_var<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span>

<span class="token comment">// \u6CE8\u610F\uFF1A\u5728\u6CA1\u6709\u8D4B\u503C\u4E4B\u524D\uFF0C\u53EA\u80FD\u8BBF\u95EE\u5171\u540C\u7684\u65B9\u6CD5\u3001\u5C5E\u6027\uFF0C\u6BD4\u5982\u4E0B\u9762\u7684\u4F8B\u5B50\uFF0Cnumber \u6CA1\u6709length \u5C5E\u6027</span>
<span class="token comment">// union_var.valueOf()</span>

union_var <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>union_var<span class="token punctuation">)</span>

union_var <span class="token operator">=</span> <span class="token string">&#39;union_var_str&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>union_var<span class="token punctuation">,</span> union_var<span class="token punctuation">.</span>length<span class="token punctuation">)</span>

union_var <span class="token operator">=</span> <span class="token number">100</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>union_var<span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>\u7C7B\u578B\u5B88\u536B</strong></p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u7C7B\u578B\u5B88\u536B type guard</span>
<span class="token comment">// typeof\u3001instanceof\u3001 in</span>
<span class="token comment">// \u9047\u5230\u8054\u5408\u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u4F7F\u7528 \u7C7B\u578B\u5B88\u536B\u53EF\u4EE5 \u7F29\u5C0F\u8303\u56F4</span>
<span class="token keyword">function</span> <span class="token function">getLenGuard</span><span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> param <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> param<span class="token punctuation">.</span>length
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> param<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getLen</span><span class="token punctuation">(</span><span class="token number">122222</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>\u7C7B\u578B\u65AD\u8A00</strong></p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u7C7B\u578B\u65AD\u8A00</span>
<span class="token comment">// \u5728\u4E0A\u9762\u8054\u5408\u7C7B\u578B\u7684\u53D8\u91CF\u4F20\u5165\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u58F0\u660E\u4E86\u8FD9\u4E2A\u7C7B\u578B\u4E3A number | string \u5B83\u4E0D\u80FD\u4E0D\u80FD\u8C03\u7528 length \u65B9\u6CD5</span>
<span class="token comment">// \u673A\u5668\u6CA1\u6CD5\u5224\u65AD\u8FD9\u4E2A\u7C7B\u578B\uFF0C\u53EF\u4EE5\u4EBA\u4E3A\u6307\u5B9A\u7C7B\u578B string \u8FD9\u91CC\u6211\u4EEC\u5C31\u53EF\u4EE5\u7528\u5230 \u7C7B\u578B\u65AD\u8A00</span>
<span class="token keyword">function</span> <span class="token function">getLen</span><span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1\u3001\u7528 as \u6765\u8FDB\u884C\u65AD\u8A00</span>
    <span class="token comment">// const str = param as string</span>
    <span class="token comment">// 2\u3001\u7528 \u8303\u578B \u6765\u8FDB\u884C\u65AD\u8A00</span>
    <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> param
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> str<span class="token punctuation">.</span>length
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getLen</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u7279\u6B8A\u7C7B\u578B" tabindex="-1">\u7279\u6B8A\u7C7B\u578B <a class="header-anchor" href="#\u7279\u6B8A\u7C7B\u578B" aria-hidden="true">#</a></h3><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// any</span>
<span class="token keyword">let</span> my_any<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token string">&quot;aaa&quot;</span> <span class="token operator">+</span> <span class="token number">100</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_any<span class="token punctuation">,</span> <span class="token keyword">typeof</span> my_any<span class="token punctuation">)</span>

<span class="token comment">// \u65B9\u6CD5\u4E00\uFF1A\u5E26\u6709any\u53C2\u6570\u7684\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">any_func</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65B9\u6CD5\u4E8C\uFF1AArray\u6CDB\u578B\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">array_func</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
\u65B9\u6CD5\u4E00\uFF0C\u6253\u5370\u4E86arg\u53C2\u6570\u7684length\u5C5E\u6027\u3002\u56E0\u4E3Aany\u53EF\u4EE5\u4EE3\u66FF\u4EFB\u610F\u7C7B\u578B\uFF0C\u6240\u4EE5\u8BE5\u65B9\u6CD5\u5728\u4F20\u5165\u53C2\u6570\u4E0D\u662F\u6570\u7EC4\u6216\u8005\u5E26\u6709length\u5C5E\u6027\u5BF9\u8C61\u65F6\uFF0C\u4F1A\u629B\u51FA\u5F02\u5E38\u3002
\u65B9\u6CD5\u4E8C\uFF0C\u5B9A\u4E49\u4E86\u53C2\u6570\u7C7B\u578B\u662FArray\u7684\u6CDB\u578B\u7C7B\u578B\uFF0C\u80AF\u5B9A\u4F1A\u6709length\u5C5E\u6027\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38\u3002
*/</span>

<span class="token comment">// unknown</span>
<span class="token keyword">let</span> my_unknown<span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token operator">+</span> <span class="token string">&quot;aaa&quot;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_unknown<span class="token punctuation">,</span> <span class="token keyword">typeof</span> my_unknown<span class="token punctuation">)</span>

<span class="token comment">// never</span>

<span class="token comment">// void</span>
<span class="token keyword">function</span> <span class="token function">my_fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_fun<span class="token punctuation">,</span> <span class="token keyword">typeof</span> my_fun<span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">my_fun1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_fun1<span class="token punctuation">,</span> <span class="token keyword">typeof</span> my_fun1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p><strong>\u6570\u7EC4</strong></p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u6570\u7EC4 Array</span>
<span class="token keyword">let</span> my_arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token comment">// typeof my_arr === object</span>
<span class="token comment">// my_arr.constructor === Array</span>
<span class="token comment">// my_arr instanceof  Array === true</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;=== my_arr ===&quot;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_arr<span class="token punctuation">,</span> <span class="token keyword">typeof</span> my_arr<span class="token punctuation">,</span> my_arr<span class="token punctuation">.</span>constructor <span class="token operator">===</span> <span class="token builtin">Array</span><span class="token punctuation">,</span> my_arr <span class="token keyword">instanceof</span>  <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">)</span>

<span class="token comment">// array \u8BBE\u7F6E\u6570\u7EC4\u7684\u7C7B\u578B \u6BD4\u5982\u8FD9\u4E2A\u4F8B\u5B50 true \u8FD9\u4E2A\u5C31\u4F1A\u62A5\u9519\uFF0C\u4E0D\u5C5E\u4E8Enumber\uFF0C\u6570\u7EC4\u7684\u5143\u7D20\u5FC5\u987B\u662F\u89C4\u5B9A\u597D\u7684\u7C7B\u578B \u5176\u4ED6\u7C7B\u578B\u540C\u7406</span>
<span class="token keyword">let</span> my_num_arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;=== my_num_arr ===&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_num_arr<span class="token punctuation">,</span> <span class="token keyword">typeof</span> my_num_arr<span class="token punctuation">,</span> my_num_arr<span class="token punctuation">.</span>constructor <span class="token operator">===</span> <span class="token builtin">Array</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> my_mix_arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> Object<span class="token punctuation">]</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;=== my_mix_arr ===&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_mix_arr<span class="token punctuation">,</span> <span class="token keyword">typeof</span> my_mix_arr<span class="token punctuation">)</span>

<span class="token comment">// instanceof \u5224\u65AD\u662FArray\u8FD8\u662FObject\u6216\u8005null</span>
<span class="token keyword">const</span> isObjectArray <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>params <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>params <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Object
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isObjectArray</span><span class="token punctuation">(</span>my_num_arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><strong>\u5143\u7EC4</strong></p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u5143\u7EC4\u6570\u636E\u7C7B\u578B\u9700\u8981\u8DDF\u7ED9\u5B9A\u7684\u53D8\u91CF\u7C7B\u578B\u4E00\u81F4</span>
<span class="token keyword">let</span> my_tuple<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_tuple<span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>\u5BF9\u8C61</strong></p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u76F4\u63A5 let a: object; \u6CA1\u6709\u4EC0\u4E48\u610F\u4E49\uFF0C\u56E0\u4E3A js \u4E2D\u5BF9\u8C61\u592A\u591A</span>
<span class="token keyword">let</span> my_obj<span class="token operator">:</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    isEnable<span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">}</span>

my_obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
    isEnable<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>my_obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u51FD\u6570" tabindex="-1">\u51FD\u6570 <a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a></h2><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u51FD\u6570 function</span>
<span class="token comment">// \u8981\u89C4\u5B9A\u51FD\u6570\u7684 \u8F93\u5165\u7C7B\u578B \u548C \u8FD4\u56DE\u7C7B\u578B</span>
<span class="token comment">// \u5728\u5F62\u53C2\u540E\u9762\u63A5\u5192\u53F7\u58F0\u660E \u5F62\u53C2\u7684\u7C7B\u578B\uFF0C\u5728 ()\u540E\u9762\u5192\u53F7\u58F0\u660E \u8FD4\u56DE\u503C\u7C7B\u578B</span>
<span class="token comment">// \u4E5F\u53EF\u4EE5\u4E3A\u51FD\u6570\u6DFB\u52A0\u53EF\u9009\u53C2\u6570 \u8FD9\u91CC\u7528 ? \u5373\u53EF\uFF0C\u8FD9\u6837\u6211\u4EEC\u5C31\u53EF\u4EE5\u8C03\u7528\u4E24\u4E2A\u53C2\u6570\u6216\u8005\u4E09\u4E2A\u53C2\u6570\u4E0D\u62A5\u9519</span>
<span class="token keyword">function</span> <span class="token function">myFun1</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> c<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>

<span class="token comment">// \u6CE8\u610F\uFF1A\u53EF\u9009\u53C2\u6570\u4E4B\u540E\u4E0D\u80FD\u518D\u52A0\u89C4\u5B9A\u7C7B\u578B\u7684\u5F62\u53C2 error: A required parameter cannot follow an optional parameter.</span>
<span class="token comment">// function myFun2 (a: number, b: number, c?: number, d: number): void {}</span>
<span class="token comment">// \u53EF\u4EE5\u628A\u5B83\u6DFB\u52A0\u4E2A \uFF1F\u53D8\u4E3A\u53EF\u9009\u53C2\u6570</span>
<span class="token keyword">function</span> <span class="token function">myFun3</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> c<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> d<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">myFun1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u9664\u4E86\u4E0A\u9762\u8FD9\u79CD\u58F0\u660E\u5F0F\u5199\u6CD5\u8FD8\u6709\u4E00\u79CD\u8868\u8FBE\u5F0F\u5199\u6CD5</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">-</span> b
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">ISum</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> mysum<span class="token operator">:</span> ISum <span class="token operator">=</span> res

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mysum<span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p><code>function.length</code>\uFF0C\u5C31\u662F==\u7B2C\u4E00\u4E2A\u5177\u6709\u9ED8\u8BA4\u503C\u4E4B\u524D\u7684\u53C2\u6570\u4E2A\u6570==</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">fun0</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">fun1</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">fun2</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// fun0.length === 0</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fun0&#39;</span><span class="token punctuation">,</span> fun0<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token comment">// fun1.length === 1</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fun1&#39;</span><span class="token punctuation">,</span> fun1<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token comment">// fun2.length === 2</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fun2&#39;</span><span class="token punctuation">,</span> fun2<span class="token punctuation">.</span>length<span class="token punctuation">)</span>

<span class="token comment">// 123[&#39;toString&#39;] === 1</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">[</span><span class="token string">&#39;toString&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">fn1</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">fn2</span> <span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">fn3</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">fn4</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">fn5</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn1<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 1</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 0</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn3<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 1</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn4<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 1</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn5<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="\u53EF\u9009\u53C2\u6570\u548C\u975E\u7A7A\u65AD\u8A00\u64CD\u4F5C\u7B26" tabindex="-1">\u53EF\u9009\u53C2\u6570\u548C\u975E\u7A7A\u65AD\u8A00\u64CD\u4F5C\u7B26 <a class="header-anchor" href="#\u53EF\u9009\u53C2\u6570\u548C\u975E\u7A7A\u65AD\u8A00\u64CD\u4F5C\u7B26" aria-hidden="true">#</a></h3><p><strong>\u53EF\u9009\u53C2\u6570</strong></p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">buildName</span><span class="token punctuation">(</span>firstName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> lastName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName
<span class="token punctuation">}</span>

<span class="token comment">// \u9519\u8BEF\u6F14\u793A</span>
<span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&quot;firstName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lastName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lastName&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// \u6B63\u786E\u6F14\u793A</span>
<span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&quot;firstName&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// \u6B63\u786E\u6F14\u793A</span>
<span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&quot;firstName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lastName&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>\u975E\u7A7A\u65AD\u8A00\u64CD\u4F5C\u7B26</strong></p><blockquote><p>\u80FD\u786E\u5B9A\u53D8\u91CF\u503C\u4E00\u5B9A\u4E0D\u4E3A\u7A7A\u65F6\u4F7F\u7528\u3002\u4E0E\u53EF\u9009\u53C2\u6570\u4E0D\u540C\u7684\u662F\uFF0C\u975E\u7A7A\u65AD\u8A00\u64CD\u4F5C\u7B26\u4E0D\u4F1A\u9632\u6B62\u51FA\u73B0 null \u6216 undefined</p></blockquote><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">let</span> s <span class="token operator">=</span> e<span class="token operator">!</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>  <span class="token comment">// \u65AD\u8A00e\u662F\u975E\u7A7A\u5E76\u8BBF\u95EEname\u5C5E\u6027</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="\u7C7B" tabindex="-1">\u7C7B <a class="header-anchor" href="#\u7C7B" aria-hidden="true">#</a></h2><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u5728 ES6 \u4E2D\u5C31\u6709 \u7C7B\u7684\u6982\u5FF5\u4E86\uFF0C\u5728 TS \u4E2D\u5BF9\u7C7B\u6DFB\u52A0\u4E00\u4E9B\u529F\u80FD</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> name<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token keyword">static</span> money<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">100</span>
    <span class="token keyword">static</span> <span class="token keyword">readonly</span> slogan<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;new bee&#39;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token punctuation">}</span>

    <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u5728\u5403\u996D</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> zs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span>
zs<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
zs<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&#39;lisi&#39;</span><span class="token punctuation">)</span>
zs<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 1\u30013\u4E2A\u8BBF\u95EE\u4FEE\u9970\u7B26\uFF0C\u548C Java \u4E00\u6837</span>
<span class="token comment">// Public: \u4FEE\u9970\u7684\u5C5E\u6027\u6216\u65B9\u6CD5\u662F\u5171\u6709\u7684 \u5728 \u4EFB\u4F55\u5730\u65B9 \u90FD\u80FD\u8BBF\u95EE</span>
<span class="token comment">// Protected: \u4FEE\u9970\u7684\u5C5E\u6027\u6216\u65B9\u6CD5\u662F\u53D7\u4FDD\u62A4\u7684 \u5728 \u672C\u7C7B \u548C \u5B50\u7C7B\u4E2D \u80FD\u591F\u8BBF\u95EE</span>
<span class="token comment">// Private: \u4FEE\u9970\u7684\u5C5E\u6027\u6216\u65B9\u6CD5\u662F\u79C1\u6709\u7684 \u53EA\u6709 \u672C\u7C7B \u4E2D\u8BBF\u95EE</span>

<span class="token comment">// 2\u3001\u9759\u6001\u5C5E\u6027 static</span>
<span class="token comment">// \u4F7F\u7528 static \u4FEE\u9970\u7684\u5C5E\u6027\u662F\u901A\u8FC7 \u7C7B \u53BB\u8BBF\u95EE\uFF0C\u662F\u6BCF\u4E2A\u5B9E\u4F8B\u5171\u6709\u7684</span>
<span class="token comment">// \u540C\u6837 static \u53EF\u4EE5\u4FEE\u9970 \u65B9\u6CD5\uFF0C\u7528 static \u4FEE\u9970\u7684\u65B9\u6CD5\u79F0\u4E3A \u7C7B\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u4F7F\u7528\u7C7B\u76F4\u63A5\u8C03\u7528</span>
Person<span class="token punctuation">.</span>money <span class="token operator">=</span> <span class="token number">99</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>money<span class="token punctuation">)</span>

<span class="token comment">// 3\u3001\u53EA\u8BFB readonly</span>
<span class="token comment">// \u7ED9\u5C5E\u6027\u6DFB\u52A0\u4E0A readonly \u5C31\u80FD\u4FDD\u8BC1\u8BE5\u5C5E\u6027\u53EA\u8BFB\uFF0C\u4E0D\u80FD\u4FEE\u6539\uFF0C\u5982\u679C\u5B58\u5728 static \u4FEE\u9970\u7B26\uFF0C\u5199\u5728\u5176\u540E</span>
<span class="token comment">// error: Cannot assign to &#39;slogan&#39; because it is a read-only property.</span>
<span class="token comment">// Person.slogan = &#39;old bee&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>slogan<span class="token punctuation">)</span>

<span class="token comment">// 4\u3001\u62BD\u8C61\u7C7B abstract</span>
<span class="token comment">// TS \u65B0\u589E\u7684\u62BD\u8C61\u7C7B \u5199\u4E00\u4E2A\u7C7B\u7684\u65F6\u5019\uFF0C\u4E0D\u5E0C\u671B\u76F4\u63A5\u4F7F\u7528\u8BE5\u7C7B\u521B\u5EFA\u5B9E\u4F8B**\uFF08\u4E0D\u80FD\u88AB new \uFF09**\u90A3\u4E48\u6211\u4EEC\u628A\u5B83\u8BBE\u7F6E\u4E3A\u62BD\u8C61\u7C7B\uFF0C\u8BA9\u5B83\u4E0D\u80FD\u88AB\u5B9E\u4F8B\u5316 \u53EA\u80FD\u88AB\u7EE7\u627F</span>


<span class="token comment">// \u5728 class \u524D\u9762 \u6DFB\u52A0 abstract \u4FEE\u9970\u7B26</span>
<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> name<span class="token operator">:</span> <span class="token builtin">string</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5728\u62BD\u8C61\u7C7B\u4E2D \u53EF\u4EE5\u5199 \u62BD\u8C61\u65B9\u6CD5 \uFF0C\u62BD\u8C61\u7C7B\u6CA1\u6709\u65B9\u6CD5\u4F53</span>
    <span class="token keyword">abstract</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token keyword">abstract</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> eating...fish</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;miao miao miao&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> m_cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token string">&#39;lmao&#39;</span><span class="token punctuation">)</span>
m_cat<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m_cat<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><h2 id="\u4FEE\u9970\u7B26-\u88C5\u9970\u5668" tabindex="-1">\u4FEE\u9970\u7B26/\u88C5\u9970\u5668 @ <a class="header-anchor" href="#\u4FEE\u9970\u7B26-\u88C5\u9970\u5668" aria-hidden="true">#</a></h2><blockquote><p>\u88C5\u9970\u5668\u662F\u4E00\u79CD\u7279\u6B8A\u7C7B\u578B\u7684\u58F0\u660E\uFF0C\u5B83\u80FD\u591F\u88AB\u9644\u52A0\u5230\u7C7B\u58F0\u660E\uFF0C\u65B9\u6CD5\uFF0C \u8BBF\u95EE\u7B26\uFF0C\u5C5E\u6027\u6216\u53C2\u6570\u4E0A\uFF0C\u53EF\u4EE5\u4FEE\u6539\u7C7B\u7684\u884C\u4E3A\u3002 \u88C5\u9970\u5668\u4F7F\u7528 @expression\u8FD9\u79CD\u5F62\u5F0F\uFF0Cexpression\u6C42\u503C\u540E\u5FC5\u987B\u4E3A\u4E00\u4E2A\u51FD\u6570\uFF0C\u5B83\u4F1A\u5728\u8FD0\u884C\u65F6\u88AB\u8C03\u7528\uFF0C\u88AB\u88C5\u9970\u7684\u58F0\u660E\u4FE1\u606F\u505A\u4E3A\u53C2\u6570\u4F20\u5165\u3002\u7C7B\u4F3CSpring AOP\u4E2D\u7684\u73AF\u7ED5\u901A\u77E5\uFF1B\u624B\u5199\u4E00\u4E2A\u6A21\u7248\u65B9\u6CD5\u4E5F\u53EF\u8D77\u5230\u540C\u6837\u7684\u4F5C\u7528\u3002</p></blockquote><h3 id="\u56DB\u79CD\u88C5\u9970\u5668" tabindex="-1">\u56DB\u79CD\u88C5\u9970\u5668 <a class="header-anchor" href="#\u56DB\u79CD\u88C5\u9970\u5668" aria-hidden="true">#</a></h3><blockquote><p>\u5728TypeScript\u4E2D\u88C5\u9970\u5668\u53EF\u4EE5\u4FEE\u9970\u56DB\u79CD\u8BED\u53E5\uFF1A\u7C7B\uFF0C\u5C5E\u6027\uFF0C\u8BBF\u95EE\u5668\uFF0C\u65B9\u6CD5\u4EE5\u53CA\u65B9\u6CD5\u53C2\u6570\u3002</p></blockquote><p>1\u3001<strong>\u7C7B\u88C5\u9970\u5668</strong>\uFF0C\u5E94\u7528\u4E8E\u7C7B\u6784\u9020\u51FD\u6570\uFF0C\u5176\u53C2\u6570\u662F\u7C7B\u7684\u6784\u9020\u51FD\u6570\u3002\u6CE8\u610F<code>class</code>\u5E76\u4E0D\u662F\u50CF Java \u90A3\u79CD\u5F3A\u7C7B\u578B\u8BED\u8A00\u4E2D\u7684\u7C7B\uFF0C\u800C\u662F JavaScript \u6784\u9020\u51FD\u6570\u7684\u8BED\u6CD5\u7CD6</p><p>2\u3001<strong>\u65B9\u6CD5\u88C5\u9970\u5668</strong>\uFF0C\u4F1A\u88AB\u5E94\u7528\u5230\u65B9\u6CD5\u7684\u5C5E\u6027\u63CF\u8FF0\u7B26\u4E0A\uFF0C\u53EF\u4EE5\u7528\u6765\u76D1\u89C6/\u4FEE\u6539/\u66FF\u6362\u65B9\u6CD5\u5B9A\u4E49\u3002 \u65B9\u6CD5\u88C5\u9970\u4F1A\u5728\u8FD0\u884C\u65F6\u4F20\u5165\u4E0B\u52173\u4E2A\u53C2\u6570\uFF1A</p><p>a\uFF09\u5BF9\u4E8E\u9759\u6001\u6210\u5458\u6765\u8BF4\u662F\u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5BF9\u4E8E\u5B9E\u4F8B\u6210\u5458\u662F\u7C7B\u7684\u539F\u578B\u5BF9\u8C61</p><p>b\uFF09\u6210\u5458\u7684\u540D\u5B57</p><p>c\uFF09\u6210\u5458\u7684\u5C5E\u6027\u63CF\u8FF0\u7B26</p><p>3\u3001<strong>\u65B9\u6CD5\u53C2\u6570\u88C5\u9970\u5668</strong>\uFF0C\u53C2\u6570\u88C5\u9970\u5668\u8868\u8FBE\u5F0F\u4F1A\u5728\u8FD0\u884C\u65F6\u5F53\u4F5C\u51FD\u6570\u88AB\u8C03\u7528\uFF0C\u4F20\u5165\u4E0B\u52173\u4E2A\u53C2\u6570\uFF1A</p><p>a\uFF09\u5BF9\u4E8E\u9759\u6001\u6210\u5458\u6765\u8BF4\u662F\u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5BF9\u4E8E\u5B9E\u4F8B\u6210\u5458\u662F\u7C7B\u7684\u539F\u578B\u5BF9\u8C61\u3002</p><p>b\uFF09\u53C2\u6570\u7684\u540D\u5B57\u3002</p><p>c\uFF09\u53C2\u6570\u5728\u51FD\u6570\u53C2\u6570\u5217\u8868\u4E2D\u7684\u7D22\u5F15\u3002</p><p>4\u3001<strong>\u5C5E\u6027\u88C5\u9970\u5668</strong></p><p>\u5C5E\u6027\u88C5\u9970\u5668\u8868\u8FBE\u5F0F\u4F1A\u5728\u8FD0\u884C\u65F6\u5F53\u4F5C\u51FD\u6570\u88AB\u8C03\u7528\uFF0C\u4F20\u5165\u4E0B\u52172\u4E2A\u53C2\u6570\uFF1A</p><p>a\uFF09\u5BF9\u4E8E\u9759\u6001\u6210\u5458\u6765\u8BF4\u662F\u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5BF9\u4E8E\u5B9E\u4F8B\u6210\u5458\u662F\u7C7B\u7684\u539F\u578B\u5BF9\u8C61\u3002</p><p>b\uFF09\u6210\u5458\u7684\u540D\u5B57\u3002</p><h3 id="\u88C5\u9970\u5668\u6267\u884C\u65F6\u671F" tabindex="-1">\u88C5\u9970\u5668\u6267\u884C\u65F6\u671F <a class="header-anchor" href="#\u88C5\u9970\u5668\u6267\u884C\u65F6\u671F" aria-hidden="true">#</a></h3><p>\u4FEE\u9970\u5668\u5BF9\u7C7B\u7684\u884C\u4E3A\u7684\u6539\u53D8\uFF0C\u662F\u4EE3\u7801\u7F16\u8BD1\u65F6\u53D1\u751F\u7684\uFF08JS \u5728\u6267\u884C\u673A\u4E2D\u7F16\u8BD1\u7684\u9636\u6BB5\uFF09\uFF0C\u800C\u4E0D\u662F\u5728\u8FD0\u884C\u65F6\u3002\u8FD9\u610F\u5473\u7740\uFF0C\u4FEE\u9970\u5668\u80FD\u5728\u7F16\u8BD1\u9636\u6BB5\u8FD0\u884C\u4EE3\u7801\u3002<strong>\u4FEE\u9970\u5668\u672C\u8D28\u5C31\u662F\u7F16\u8BD1\u65F6\u6267\u884C\u7684\u51FD\u6570</strong>\u3002\u5728 Node.js \u73AF\u5883\u4E2D\u6A21\u5757\u4E00\u52A0\u8F7D\u65F6\u5C31\u4F1A\u6267\u884C\u3002</p><h3 id="\u81EA\u5B9A\u4E49\u88C5\u9970\u5668" tabindex="-1">\u81EA\u5B9A\u4E49\u88C5\u9970\u5668 <a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u88C5\u9970\u5668" aria-hidden="true">#</a></h3><p>\u5728<code>TypeScript</code>\u4E2D\u88C5\u9970\u5668\u8FD8\u5C5E\u4E8E\u5B9E\u9A8C\u6027\u8BED\u6CD5\uFF0C\u6240\u4EE5\u8981\u60F3\u4F7F\u7528\u5FC5\u987B\u5728\u914D\u7F6E\u6587\u4EF6\u4E2D<code>tsconfig.json</code>\u7F16\u8BD1\u9009\u9879\u4E2D\u5F00\u542F</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;experimentalDecorators&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span>f<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;function run...&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">test</span></span>
<span class="token keyword">class</span> <span class="token class-name">HelloClazz</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u63A5\u53E3" tabindex="-1">\u63A5\u53E3 <a class="header-anchor" href="#\u63A5\u53E3" aria-hidden="true">#</a></h2><blockquote><p>\u63A5\u53E3 interface \u5B83\u80FD\u5F88\u65B9\u4FBF\u7684\u5E2E\u6211\u4EEC\u5B9A\u4E49 Object \u7C7B\u578B\uFF0C\u5B83\u662F\u975E\u5E38\u7684\u7075\u6D3B\u53EF\u4EE5\u63CF\u8FF0\u5BF9\u8C61\u7684\u5404\u79CD\u7C7B\u578B\u3002\u4E0E java \u7684 interface \u6709\u4E9B\u533A\u522B</p></blockquote><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u4E3A\u4E86\u89E3\u51B3 \u7EE7\u627F \u7684\u56F0\u5883(\u4E0D\u80FD\u5B9E\u73B0\u591A\u7EE7\u627F)</span>
<span class="token comment">// \u63A5\u53E3\u53EF\u4EE5\u591A\u5B9E\u73B0</span>
<span class="token comment">// \u63A5\u53E3\u4E4B\u95F4\u53EF\u4EE5\u591A\u7EE7\u627F</span>
<span class="token keyword">interface</span> <span class="token class-name">IAnimal</span> <span class="token punctuation">{</span>
    <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">IBeing</span> <span class="token punctuation">{</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">People</span> <span class="token keyword">extends</span> <span class="token class-name">IAnimal</span><span class="token punctuation">,</span> IBeing<span class="token punctuation">{</span>

    <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Men</span> <span class="token keyword">implements</span> <span class="token class-name">People</span> <span class="token punctuation">{</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Device</span> <span class="token punctuation">{</span>
    <span class="token comment">// readonly \u4E0D\u53EF\u6539\u53D8\u7684\uFF0C\u5B9A\u4E49\u5B8C\u540E\u5C31\u4E0D\u80FD\u4FEE\u6539\uFF0C\u662F\u4E0D\u662F\u548C const \u6709\u70B9\u50CF\uFF0C\u4E0D\u8FC7 const \u662F\u9488\u5BF9\u53D8\u91CF\uFF0C readonly \u662F\u9488\u5BF9\u5C5E\u6027</span>
    <span class="token keyword">readonly</span> id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
    brand<span class="token operator">:</span> <span class="token builtin">string</span>
    type<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token comment">// \u53EF\u9009\u4FEE\u9970\u7B26\u201D?\u201C\uFF0C\u53EF\u9009\u4FEE\u9970\u7B26\u4EE5?\u5B9A\u4E49\uFF0C\u4E3A\u4EC0\u4E48\u9700\u8981\u53EF\u9009\u4FEE\u9970\u7B26\u5462\uFF0C\u56E0\u4E3A\u5982\u679C\u6211\u4EEC\u4E0D\u5199\u53EF\u9009\u4FEE\u9970\u7B26\uFF0C\u90A3interface\u91CC\u9762\u7684\u5C5E\u6027\u90FD\u662F\u5FC5\u586B\u7684</span>
    <span class="token comment">// \u5728 interface \u5C5E\u6027\u4E2D\u6DFB\u52A0 \u201D\uFF1F\u201C\uFF0C \u5219\u8BE5\u5C5E\u6027\u5728\u8D4B\u503C\u7684\u65F6\u5019\u53EF\u4EE5\u7701\u7565</span>
    price<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> MiPhone<span class="token operator">:</span> Device <span class="token operator">=</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token number">1111</span><span class="token punctuation">,</span>
    brand<span class="token operator">:</span> <span class="token string">&#39;xiaomi&#39;</span><span class="token punctuation">,</span>
    type<span class="token operator">:</span> <span class="token string">&#39;mi-phone&#39;</span><span class="token punctuation">,</span>
    price<span class="token operator">:</span> <span class="token number">1999.0</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> HWPhone<span class="token operator">:</span> Device <span class="token operator">=</span> <span class="token punctuation">{</span>
    brand<span class="token operator">:</span> <span class="token string">&#39;huawei&#39;</span><span class="token punctuation">,</span>
    type<span class="token operator">:</span> <span class="token string">&#39;hw-phone&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>MiPhone<span class="token punctuation">)</span>
MiPhone<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;mix&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>MiPhone<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>HWPhone<span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><h2 id="type-\u7C7B\u578B\u522B\u540D" tabindex="-1">Type \u7C7B\u578B\u522B\u540D <a class="header-anchor" href="#type-\u7C7B\u578B\u522B\u540D" aria-hidden="true">#</a></h2><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// Type</span>
<span class="token comment">// \u58F0\u660E\u7C7B\u578B\u522B\u540D\u4F7F\u7684\uFF0C\u522B\u540D\u7C7B\u578B\u53EA\u80FD\u5B9A\u4E49\u662F\uFF1A\u57FA\u7840\u9759\u6001\u7C7B\u578B\u3001\u5BF9\u8C61\u9759\u6001\u7C7B\u578B\u3001\u5143\u7EC4\u3001\u8054\u5408\u7C7B\u578B</span>
<span class="token comment">// type\u522B\u540D\u4E0D\u53EF\u4EE5\u5B9A\u4E49interface</span>

<span class="token comment">// type\u7C7B\u578B\u522B\u540D\u548Cinterface\u63A5\u53E3\u7684\u533A\u522B</span>

<span class="token comment">// 1.Types \u4E0D\u53EF\u4EE5\u51FA\u73B0\u91CD\u590D\u7C7B\u578B\u540D\u79F0</span>
<span class="token comment">// \u62A5\u9519 Duplicate identifier &#39;Types&#39;.</span>
<span class="token comment">// type Types = string</span>
<span class="token comment">// type Types = number</span>

<span class="token comment">// interface \u63A5\u53E3\u53EF\u4EE5\u51FA\u73B0\u91CD\u590D\u7C7B\u578B\u540D\u79F0\uFF0C\u5982\u679C\u91CD\u590D\u51FA\u73B0\u5219\u662F\uFF0C\u5408\u5E76\u8D77\u6765\u4E5F\u5C31\u662F\u53D8\u6210 { name\uFF1Astring, age: number }</span>
<span class="token keyword">interface</span> <span class="token class-name">Types1</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Types1</span> <span class="token punctuation">{</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> myTypes1<span class="token operator">:</span> Types1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">10</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="type-\u4E0E-interface" tabindex="-1">Type \u4E0E Interface <a class="header-anchor" href="#type-\u4E0E-interface" aria-hidden="true">#</a></h3><p><strong>\u76F8\u540C\u70B9</strong>\uFF1A</p><p>1\u3001<strong>\u90FD\u53EF\u4EE5\u7528\u6765\u63CF\u8FF0\u4E00\u4E2A\u5BF9\u8C61\u6216\u51FD\u6570</strong></p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// interface</span>
<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">SetUser</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// type</span>
<span class="token class-name"><span class="token keyword">type</span></span> User <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">SetUser</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>2\u3001<strong>\u90FD\u5141\u8BB8\u7EE7\u627F\uFF08extends\uFF09</strong>\uFF0Cinterface \u548C type \u90FD\u53EF\u4EE5\u62D3\u5C55\uFF0C\u5E76\u4E14\u4E24\u8005\u5E76\u4E0D\u662F\u76F8\u4E92\u72EC\u7ACB\u7684\u3002\u4E5F\u5C31\u662F\u8BF4 interface \u53EF\u4EE5 extends type\uFF0Ctype \u4E5F\u53EF\u4EE5 extends interface \u3002 \u867D\u7136\u6548\u679C\u5DEE\u4E0D\u591A\uFF0C\u4F46\u662F\u4E24\u8005\u8BED\u6CD5\u4E0D\u540C\u3002</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// interface extends interface</span>
<span class="token keyword">interface</span> <span class="token class-name">Name</span> <span class="token punctuation">{</span> 
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Name</span> <span class="token punctuation">{</span> 
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>

<span class="token comment">// type extends type</span>
<span class="token keyword">type</span> <span class="token class-name">Name</span> <span class="token operator">=</span> <span class="token punctuation">{</span> 
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> Name <span class="token operator">&amp;</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token builtin">number</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// interface extends type</span>
<span class="token keyword">type</span> <span class="token class-name">Name</span> <span class="token operator">=</span> <span class="token punctuation">{</span> 
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Name</span> <span class="token punctuation">{</span> 
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>

<span class="token comment">// type extends interface</span>
<span class="token keyword">interface</span> <span class="token class-name">Name</span> <span class="token punctuation">{</span> 
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> Name <span class="token operator">&amp;</span> <span class="token punctuation">{</span> 
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><strong>\u4E0D\u540C\u70B9</strong>\uFF1A</p><p>1\u3001<code>type</code> \u53EF\u4EE5\u58F0\u660E\u57FA\u672C\u7C7B\u578B\u522B\u540D\uFF0C\u8054\u5408\u7C7B\u578B\uFF0C\u5143\u7EC4\u7B49\u7C7B\u578B</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u57FA\u672C\u7C7B\u578B\u522B\u540D</span>
<span class="token keyword">type</span> <span class="token class-name">Name</span> <span class="token operator">=</span> <span class="token builtin">string</span>

<span class="token comment">// \u8054\u5408\u7C7B\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token punctuation">{</span>
    <span class="token function">wang</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Cat</span> <span class="token punctuation">{</span>
    <span class="token function">miao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Pet</span> <span class="token operator">=</span> Dog <span class="token operator">|</span> Cat

<span class="token comment">// \u5177\u4F53\u5B9A\u4E49\u6570\u7EC4\u6BCF\u4E2A\u4F4D\u7F6E\u7684\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">PetList</span> <span class="token operator">=</span> <span class="token punctuation">[</span>Dog<span class="token punctuation">,</span> Pet<span class="token punctuation">]</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>2\u3001<code>type</code> \u8BED\u53E5\u4E2D\u8FD8\u53EF\u4EE5\u4F7F\u7528 <code>typeof</code>\u83B7\u53D6\u5B9E\u4F8B\u7684 \u7C7B\u578B\u8FDB\u884C\u8D4B\u503C</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u5F53\u4F60\u60F3\u83B7\u53D6\u4E00\u4E2A\u53D8\u91CF\u7684\u7C7B\u578B\u65F6\uFF0C\u4F7F\u7528 typeof</span>
<span class="token keyword">let</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> <span class="token keyword">typeof</span> div

<span class="token comment">// \u5176\u4ED6\u9A9A\u64CD\u4F5C</span>
<span class="token keyword">type</span> <span class="token class-name">StringOrNumber</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>  
<span class="token keyword">type</span> <span class="token class-name">Text</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  
<span class="token keyword">type</span> <span class="token class-name">NameLookup</span> <span class="token operator">=</span> Dictionary<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> Person<span class="token operator">&gt;</span><span class="token punctuation">;</span>  
<span class="token keyword">type</span> <span class="token class-name">Callback<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>  
<span class="token keyword">type</span> <span class="token class-name">Pair<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token keyword">type</span> <span class="token class-name">Coordinates</span> <span class="token operator">=</span> Pair<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  
<span class="token keyword">type</span> <span class="token class-name">Tree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token punctuation">{</span> left<span class="token operator">:</span> Tree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> right<span class="token operator">:</span> Tree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>3\u3001<code>interface</code> \u80FD\u591F\u58F0\u660E\u5408\u5E76</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  sex<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
User \u63A5\u53E3\u4E3A {
  name: string
  age: number
  sex: string 
}
*/</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>4\u3001<code>interface</code> \u6709\u53EF\u9009\u5C5E\u6027\u548C\u53EA\u8BFB\u5C5E\u6027</p><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u53EF\u9009\u5C5E\u6027 ?</span>
<span class="token comment">// \u63A5\u53E3\u91CC\u7684\u5C5E\u6027\u4E0D\u5168\u90FD\u662F\u5FC5\u9700\u7684\u3002 \u6709\u4E9B\u662F\u53EA\u5728\u67D0\u4E9B\u6761\u4EF6\u4E0B\u5B58\u5728\uFF0C\u6216\u8005\u6839\u672C\u4E0D\u5B58\u5728\u3002 \u4F8B\u5982\u7ED9\u51FD\u6570\u4F20\u5165\u7684\u53C2\u6570\u5BF9\u8C61\u4E2D\u53EA\u6709\u90E8\u5206\u5C5E\u6027\u8D4B\u503C\u4E86\u3002\u5E26\u6709\u53EF\u9009\u5C5E\u6027\u7684\u63A5\u53E3\u4E0E\u666E\u901A\u7684\u63A5\u53E3\u5B9A\u4E49\u5DEE\u4E0D\u591A</span>

<span class="token comment">// \u53EA\u8BFB\u5C5E\u6027 readonly</span>
<span class="token comment">// readonly\u4FEE\u9970\u7684\u5C5E\u6027\u662F\u4E0D\u53EF\u5199\u7684\uFF0C\u5BF9\u8C61\u5C5E\u6027\u7684\u503C\u53EA\u80FD\u5728\u5BF9\u8C61\u521A\u521A\u521B\u5EFA\u7684\u65F6\u5019\u4FEE\u6539</span>
<span class="token keyword">interface</span> <span class="token class-name">Device</span> <span class="token punctuation">{</span>
    <span class="token comment">// readonly \u4E0D\u53EF\u6539\u53D8\u7684\uFF0C\u5B9A\u4E49\u5B8C\u540E\u5C31\u4E0D\u80FD\u4FEE\u6539\uFF0C\u662F\u4E0D\u662F\u548C const \u6709\u70B9\u50CF\uFF0C\u4E0D\u8FC7 const \u662F\u9488\u5BF9\u53D8\u91CF\uFF0C readonly \u662F\u9488\u5BF9\u5C5E\u6027</span>
    <span class="token keyword">readonly</span> id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
    brand<span class="token operator">:</span> <span class="token builtin">string</span>
    type<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token comment">// \u53EF\u9009\u4FEE\u9970\u7B26\u201D?\u201C\uFF0C\u53EF\u9009\u4FEE\u9970\u7B26\u4EE5?\u5B9A\u4E49\uFF0C\u4E3A\u4EC0\u4E48\u9700\u8981\u53EF\u9009\u4FEE\u9970\u7B26\u5462\uFF0C\u56E0\u4E3A\u5982\u679C\u6211\u4EEC\u4E0D\u5199\u53EF\u9009\u4FEE\u9970\u7B26\uFF0C\u90A3interface\u91CC\u9762\u7684\u5C5E\u6027\u90FD\u662F\u5FC5\u586B\u7684</span>
    <span class="token comment">// \u5728 interface \u5C5E\u6027\u4E2D\u6DFB\u52A0 \u201D\uFF1F\u201C\uFF0C \u5219\u8BE5\u5C5E\u6027\u5728\u8D4B\u503C\u7684\u65F6\u5019\u53EF\u4EE5\u7701\u7565</span>
    price<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u679A\u4E3E" tabindex="-1">\u679A\u4E3E <a class="header-anchor" href="#\u679A\u4E3E" aria-hidden="true">#</a></h2><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// 1\u3001\u6570\u5B57\u679A\u4E3E</span>
<span class="token comment">// \u9ED8\u8BA4\u503C\u4ECE 0 \u5F00\u59CB</span>
<span class="token keyword">enum</span> Week <span class="token punctuation">{</span>
    <span class="token comment">// \u81EA\u5B9A\u4E49\u9ED8\u8BA4\u503C Mon = a \u540E\uFF0C\u540E\u7EED\u7684\u679A\u4E3E\u4F9D\u6B21\u52A0 a</span>
    Mon <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
    Tue<span class="token punctuation">,</span>
    Wed<span class="token punctuation">,</span>
    Thu<span class="token punctuation">,</span>
    Fri<span class="token punctuation">,</span>
    Sat<span class="token punctuation">,</span>
    Sun
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Week<span class="token punctuation">.</span>Mon<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Week<span class="token punctuation">.</span>Tue<span class="token punctuation">)</span>

<span class="token comment">// \u4E5F\u53EF\u4EE5\u901A\u8FC7\u4E0B\u6807\u83B7\u53D6</span>
<span class="token comment">// concat() \u5728Week[4] \u7684\u503C\u540E\u9762\u62FC\u63A5&#39;a&#39;,&#39;b&#39;, &#39;c&#39; ==\u300B Thuabc</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Week<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token operator">/</span> <span class="token number">2</span>\u3001\u5B57\u7B26\u4E32\u679A\u4E3E
<span class="token keyword">enum</span> Week <span class="token punctuation">{</span>
    Mon <span class="token operator">=</span> <span class="token string">&quot;Mon&quot;</span><span class="token punctuation">,</span>
    Tue <span class="token operator">=</span> <span class="token string">&quot;Tue&quot;</span><span class="token punctuation">,</span>
    Wed <span class="token operator">=</span> <span class="token string">&quot;Wed&quot;</span><span class="token punctuation">,</span>
    Thu <span class="token operator">=</span> <span class="token string">&quot;Thu&quot;</span><span class="token punctuation">,</span>
    Fri <span class="token operator">=</span> <span class="token string">&quot;Fri&quot;</span><span class="token punctuation">,</span>
    Sat <span class="token operator">=</span> <span class="token string">&quot;Sat&quot;</span><span class="token punctuation">,</span>
    Sun <span class="token operator">=</span> <span class="token string">&quot;Sun&quot;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">enumCondition</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> val <span class="token operator">==</span> Week<span class="token punctuation">.</span>Wed<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">enumCondition</span><span class="token punctuation">(</span><span class="token string">&#39;Wed&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>

<span class="token comment">// 3\u3001\u5E38\u91CF\u679A\u4E3E</span>
<span class="token comment">// \u5728 enum \u524D\u9762\u6DFB\u52A0\u4E00\u4E2A const \u5373\u53EF\uFF0C\u5B83\u63D0\u9AD8\u4E86\u6027\u80FD</span>
<span class="token comment">// const enum Week</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="\u6CDB\u578B" tabindex="-1">\u6CDB\u578B <a class="header-anchor" href="#\u6CDB\u578B" aria-hidden="true">#</a></h2><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// \u6CDB\u578B\u5C31\u50CF\u4E00\u4E2A\u5360\u4F4D\u7B26\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5728\u4F7F\u7528\u7684\u65F6\u5019\u6211\u4EEC\u53EF\u4EE5\u5C06\u5B9A\u4E49\u597D\u7684\u7C7B\u578B\u50CF\u53C2\u6570\u4E00\u6837\u4F20\u5165\uFF0C\u539F\u5C01\u4E0D\u52A8\u7684\u8F93\u51FA\u3001</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getVal</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> param
<span class="token punctuation">}</span>

<span class="token comment">// \u591A\u4E2A\u6CDB\u578B</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getVals</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> param
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getVal</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getVals</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u53EF\u4EE5\u4F7F\u7528 interface \u6765\u7EA6\u675F \u6CDB\u578B</span>
<span class="token comment">// \u5728 T \u540E\u9762 extends Ilen \uFF0C\u5B9A\u4E49 Ilen \u91CC\u9762\u4EE3\u7801\u8868\u793A\uFF0CT \u5FC5\u987B\u8981\u6709 length \u5C5E\u6027</span>

<span class="token keyword">interface</span> <span class="token class-name">ILen</span> <span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> length<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getLen</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> ILen<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> param<span class="token punctuation">.</span>length
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getLen</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getLen</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="\u58F0\u660E\u6587\u4EF6\u4E0E\u547D\u540D\u7A7A\u95F4" tabindex="-1">\u58F0\u660E\u6587\u4EF6\u4E0E\u547D\u540D\u7A7A\u95F4 <a class="header-anchor" href="#\u58F0\u660E\u6587\u4EF6\u4E0E\u547D\u540D\u7A7A\u95F4" aria-hidden="true">#</a></h2><blockquote><p><code>declare</code> \u548C <code>namespace</code></p></blockquote><div class="language-typescript line-numbers-mode"><pre><code><span class="token comment">// shims-tsx.d.ts</span>
<span class="token keyword">import</span> Vue<span class="token punctuation">,</span> <span class="token punctuation">{</span> VNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// declare\uFF1A\u5F53\u4F7F\u7528\u7B2C\u4E09\u65B9\u5E93\u65F6\uFF0C\u6211\u4EEC\u9700\u8981\u5F15\u7528\u5B83\u7684\u58F0\u660E\u6587\u4EF6\uFF0C\u624D\u80FD\u83B7\u5F97\u5BF9\u5E94\u7684\u4EE3\u7801\u8865\u5168\u3001\u63A5\u53E3\u63D0\u793A\u7B49\u529F\u80FD</span>
<span class="token comment">// shims-tsx.d.ts\uFF0C \u5728\u5168\u5C40\u53D8\u91CF global \u4E2D\u6279\u91CF\u547D\u540D\u4E86\u6570\u4E2A\u5185\u90E8\u6A21\u5757\u3002</span>
<span class="token comment">/*
declare var \u58F0\u660E\u5168\u5C40\u53D8\u91CF
declare function \u58F0\u660E\u5168\u5C40\u65B9\u6CD5
declare class \u58F0\u660E\u5168\u5C40\u7C7B
declare enum \u58F0\u660E\u5168\u5C40\u679A\u4E3E\u7C7B\u578B
declare global \u6269\u5C55\u5168\u5C40\u53D8\u91CF
declare module \u6269\u5C55\u6A21\u5757
*/</span>
<span class="token keyword">declare</span> global <span class="token punctuation">{</span>
  <span class="token comment">// namespace\uFF1A\u201C\u5185\u90E8\u6A21\u5757\u201D\u73B0\u5728\u79F0\u505A\u201C\u547D\u540D\u7A7A\u95F4\u201D</span>
  <span class="token keyword">namespace</span> <span class="token constant">JSX</span> <span class="token punctuation">{</span>
    <span class="token comment">// tslint:disable no-empty-interface</span>
    <span class="token class-name"><span class="token keyword">interface</span></span> Element <span class="token keyword">extends</span> <span class="token class-name">VNode</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// tslint:disable no-empty-interface</span>
    <span class="token class-name"><span class="token keyword">interface</span></span> ElementClass <span class="token keyword">extends</span> <span class="token class-name">Vue</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">interface</span> <span class="token class-name">IntrinsicElements</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>elem<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// shims-vue.d.ts</span>
<span class="token comment">// shims-vue.d.ts\uFF0C\u610F\u601D\u662F\u544A\u8BC9 TypeScript *.vue \u540E\u7F00\u7684\u6587\u4EF6\u53EF\u4EE5\u4EA4\u7ED9 vue \u6A21\u5757\u6765\u5904\u7406</span>
<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;*.vue&#39;</span> <span class="token punctuation">{</span>
  <span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">default</span> Vue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><strong>\u53C2\u8003</strong></p><p><a href="https://juejin.cn/post/6844903749501059085" target="_blank" rel="noopener noreferrer">Vue3.0 \u524D\u7684 TypeScript \u6700\u4F73\u5165\u95E8\u5B9E\u8DF5</a></p><p><a href="https://www.cnblogs.com/winfred/p/8216650.html" target="_blank" rel="noopener noreferrer">TypeScript\u88C5\u9970\u5668\uFF08decorators\uFF09 - \u4E00\u7BAD\u4E2D\u7684 - \u535A\u5BA2\u56ED (cnblogs.com)</a></p>`,90);function r(u,i,k,b,m,d){const n=t("Catalog");return o(),a("div",null,[p(n),l])}var f=s(c,[["render",r]]);export{g as __pageData,f as default};
