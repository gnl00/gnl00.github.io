import{_ as s,c as a,b as p,a as t,r as e,o}from"./app.d8a09d34.js";var c="/assets/Java-collection-cheat-sheet.c599aa17.png",l="/assets/image-20211019155403691.7d82f09a.png",u="/assets/image-20211019160315355.13fc65a8.png",r="/assets/20200619133241266.cd92ee46.gif",i="/assets/image-20211018150544630.dd254a11.png",k="/assets/ace830df-9919-48ca-91b5-60b193f593d2.442b2278.png",b="/assets/image-20211019211623123.73536391.png",m="/assets/java-thread-x-key-schronized-2.a39dcbcf.png",d="/assets/java-thread-x-key-schronized-3.139ef61b.png",y="/assets/image-20211020135002480.61a85fe7.png",w="/assets/image-20211020135016242.147f1f99.png",g="/assets/java-thread-x-key-volatile-3.ddeab5eb.png",h="/assets/java-thread-x-key-volatile-4.73ca77f3.png",f="/assets/java-thread-x-atomicinteger-unsafe.9a0447c4.png",v="/assets/java-thread-x-juc-overview-lock.9a9a4b5b.png",C="/assets/image-20211021104637185.ee8744b7.png",A="/assets/java-thread-x-juc-reentrantlock-1.f74da930.png",T="/assets/java-thread-x-readwritelock-1.d01fed7d.png",S="/assets/java-thread-x-juc-overview-2.75569dfc.png",M="/assets/java-thread-x-juc-executors-1.0f3dbc92.png";const O='{"title":"Java","description":"","frontmatter":{"sidebarDepth":1},"headers":[{"level":3,"title":"\u96C6\u5408","slug":"\u96C6\u5408"},{"level":3,"title":"\u53CD\u5C04","slug":"\u53CD\u5C04"},{"level":3,"title":"\u8303\u578B","slug":"\u8303\u578B"},{"level":2,"title":"\u591A\u7EBF\u7A0B\u4E0E\u5E76\u53D1","slug":"\u591A\u7EBF\u7A0B\u4E0E\u5E76\u53D1"},{"level":3,"title":"\u591A\u7EBF\u7A0B","slug":"\u591A\u7EBF\u7A0B"},{"level":3,"title":"\u5E76\u53D1\u4E09\u8981\u7D20","slug":"\u5E76\u53D1\u4E09\u8981\u7D20"},{"level":3,"title":"Java \u5982\u4F55\u89E3\u51B3\u5E76\u53D1\u95EE\u9898","slug":"java-\u5982\u4F55\u89E3\u51B3\u5E76\u53D1\u95EE\u9898"},{"level":3,"title":"JUC \u5305\u4F53\u7CFB","slug":"juc-\u5305\u4F53\u7CFB"},{"level":2,"title":"\u53C2\u8003","slug":"\u53C2\u8003"}],"relativePath":"posts/be/Java.md"}',x={},q=t('<h1 id="java" tabindex="-1">Java <a class="header-anchor" href="#java" aria-hidden="true">#</a></h1><h3 id="\u96C6\u5408" tabindex="-1">\u96C6\u5408 <a class="header-anchor" href="#\u96C6\u5408" aria-hidden="true">#</a></h3><blockquote><p>\u96C6\u5408\u548C\u6570\u7EC4\u90FD\u662F\u5BF9\u591A\u4E2A\u6570\u636E\u8FDB\u884C\u5B58\u50A8\u64CD\u4F5C\u7684\u7ED3\u6784\uFF0C\u90FD\u76F8\u5F53\u4E8E<strong>\u5B58\u50A8\u6570\u636E\u7684\u5BB9\u5668</strong>\uFF08\u5185\u5B58\u65B9\u9762\u7684\u5B58\u50A8\uFF0C\u975E\u6301\u4E45\u5316\u5B58\u50A8\uFF09</p></blockquote><p><strong>\u4F53\u7CFB\u7ED3\u6784</strong></p><p><img src="'+c+`" alt=""></p><br><p><strong><u>1 - \u96C6\u5408\u4E0E\u6570\u7EC4</u></strong></p><p>1\u3001\u6570\u7EC4\u5B58\u50A8\u7684\u6570\u636E\u957F\u5EA6\u662F\u786E\u5B9A\u7684\uFF0C\u4E0D\u4FBF\u4E8E\u6269\u5C55\u3002\u96C6\u5408\u957F\u5EA6\u53EF\u53D8</p><p>2\u3001\u6570\u7EC4\u5B58\u50A8\u7684\u6570\u636E\u7C7B\u578B\u662F\u5355\u4E00\u7684\uFF0C\u6570\u7EC4\u58F0\u660E\u7684\u7C7B\u578B\uFF0C\u51B3\u5B9A\u4E86\u8FDB\u884C\u5143\u7D20\u521D\u59CB\u5316\u65F6\u7684\u7C7B\u578B\u3002</p><p>3\u3001\u6570\u7EC4\u4E2D\u63D0\u4F9B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u5C11\uFF0C\u4E0D\u4FBF\u4E8E\u8FDB\u884C\u589E\u5220\u548C\u63D2\u5165\u64CD\u4F5C\uFF0C\u4E14\u6548\u7387\u4E0D\u9AD8\uFF0C\u540C\u65F6\u65E0\u6CD5\u76F4\u63A5\u83B7\u53D6\u5B58\u50A8\u5143\u7D20\u7684\u4E2A\u6570</p><br><p><strong><u>2 - Iterator \u8FED\u4EE3\u5668</u></strong></p><blockquote><p>\u4F7F\u7528 <code>Iterator</code> \u63A5\u53E3\u904D\u5386\u96C6\u5408\u5143\u7D20\u3002Iterator \u5BF9\u8C61\u79F0\u4E3A\u8FED\u4EE3\u5668\uFF0C\u4E3B\u8981\u7528\u4E8E\u904D\u5386 <code>Collection</code> \u96C6\u5408\u4E2D\u7684\u5143\u7D20</p></blockquote><p><strong>\u8FED\u4EE3\u5668\u6A21\u5F0F</strong></p><p>1\u3001\u63D0\u4F9B\u4E00\u79CD\u65B9\u6CD5\uFF0C\u8BBF\u95EE\u4E00\u4E2A\u5BB9\u5668\uFF08Container\uFF09\u5BF9\u8C61\u4E2D\u7684\u5404\u4E2A\u5143\u7D20\uFF0C\u800C\u53C8\u4E0D\u9700\u66B4\u9732\u8BE5\u5BF9\u8C61\u7684\u5185\u90E8\u7EC6\u8282</p><p>2\u3001\u8FED\u4EE3\u5668\u6A21\u5F0F\u5C31\u662F\u4E3A\u5BB9\u5668\u800C\u751F</p><p><strong>\u8FED\u4EE3\u5668\u9519\u8BEF\u7528\u6CD5</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// 1\u3001iterator.next() \u5E94\u8BE5\u653E\u5728 while \u4F53\u5185</span>
<span class="token class-name">Iterator</span> iterator <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
<span class="token comment">// 2\u3001\u6B7B\u5FAA\u73AF</span>
<span class="token comment">// \u96C6\u5408\u5BF9\u8C61\u6BCF\u6B21\u8C03\u7528iterator()\u65B9\u6CD5\u90FD\u4F1A\u5F97\u5230\u4E00\u4E2A\u5168\u65B0\u7684\u8FED\u4EE3\u5668\u5BF9\u8C61</span>
<span class="token comment">// \u9ED8\u8BA4\u7684\u6E38\u6807\u90FD\u5728\u96C6\u5408\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E4B\u524D</span>
<span class="token comment">// \u6B64\u5904\u6BCF\u6B21\u5224\u65AD\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u5BF9\u8C61</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>collection<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collection<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><br><h4 id="list-\u63A5\u53E3" tabindex="-1">List \u63A5\u53E3 <a class="header-anchor" href="#list-\u63A5\u53E3" aria-hidden="true">#</a></h4><blockquote><p>\u7D20\u6709\u5E8F\uFF0C\u53EF\u91CD\u590D\u7684\u96C6\u5408\u3002==\u52A8\u6001==\u6570\u7EC4</p></blockquote><p><strong><u>1 - \u5E38\u89C1\u5B9E\u73B0\u7C7B</u></strong></p><p>1\uFF09<code>Vector</code></p><p>2\uFF09<code>ArrayList</code></p><p>3\uFF09<code>LinkedList</code></p><br><p><strong>\u5173\u4E8E ArrayList &amp; LinkedList &amp; Vector</strong></p><p>\u76F8\u540C\u70B9\uFF1A</p><p>1\uFF09\u4E09\u4E2A\u7C7B\u90FD\u5B9E\u73B0\u4E86<code>List</code>\u63A5\u53E3</p><p>2\uFF09\u5B58\u50A8\u7684\u6570\u636E\u7684\u7279\u70B9\u90FD\u662F\u6709\u5E8F\uFF0C\u53EF\u91CD\u590D</p><p>3\uFF09\u90FD\u652F\u6301\u5B58\u50A8 null \u503C</p><p>\u4E0D\u540C\u70B9\uFF1A</p><p>1\uFF09<code>ArrayList</code>\u7EBF\u7A0B\u4E0D\u5B89\u5168\uFF0C\u6548\u7387\u9AD8\uFF0C\u5E95\u5C42\u4F7F\u7528<code>Object []</code>\u5B58\u50A8\u6570\u636E</p><p>2\uFF09<code>LinkedList</code>\u7EBF\u7A0B\u4E0D\u5B89\u5168\uFF0C\u5BF9\u4E8E\u9891\u7E41\u7684\u63D2\u5165\u3001\u5220\u9664\u64CD\u4F5C\uFF0C\u6BD4\u4F7F\u7528<code>ArrayList</code>\u6548\u7387\u9AD8\u3002\u5E95\u5C42\u4F7F\u7528<mark>\u53CC\u5411\u94FE\u8868</mark>\u5B58\u50A8\uFF0C\u53EA\u80FD\u987A\u5E8F\u8BBF\u95EE\u3002\u5E95\u5C42\u4E0D\u662F\u6570\u7EC4\uFF0C\u4E0D\u6D89\u53CA\u5230\u6269\u5BB9\u3002LinkedList \u8FD8\u53EF\u4EE5\u7528\u4F5C\u6808\u3001\u961F\u5217\u548C\u53CC\u5411\u961F\u5217\u3002</p><p>3\uFF09<code>Vector</code>\u4F5C\u4E3A<code>List</code>\u63A5\u53E3\u7684\u4E00\u4E2A\u8001\u7684\u5B9E\u73B0\u7C7B\uFF0C\u65B9\u6CD5\u57FA\u672C\u4E0A\u90FD\u7528<code>synchronized</code>\u4FEE\u9970\uFF0C\u7EBF\u7A0B\u5B89\u5168\uFF0C\u6548\u7387\u4F4E\uFF0C\u5E95\u5C42\u4F7F\u7528<code>Object []</code>\u5B58\u50A8\u6570\u636E\u3002Java \u81EA\u5E26\u7684 <code>Stack</code> \u7C7B\u7EE7\u627F\u81EA <code>Vector</code></p><br><p><strong>2 - ArrayList</strong></p><p><strong>1\u3001 ArrayList \u5B9E\u4F8B\u5316\u7EC6\u8282</strong></p><p>1\uFF09JDK 1.7 \u4E2D\u9ED8\u8BA4\u521D\u59CB\u5316\u5E95\u5C42\u957F\u5EA6\u4E3A10\u7684<code>Object []</code></p><p>2\uFF09JDK 1.8 \u4E2D\u9ED8\u8BA4\u521D\u59CB\u5316\u5E95\u5C42\u6570\u7EC4\u4E3A\u7A7A\uFF0C\u6267\u884C<code>add()</code>\u65B9\u6CD5\u7684\u65F6\u5019\u624D\u521B\u5EFA\u957F\u5EA6\u4E3A10\u7684<code>Object []</code>\u6570\u7EC4\uFF0C\u82E5\u957F\u5EA6\u4E0D\u591F\u5219\u8FDB\u884C\u6269\u5BB9</p><p>3\uFF09JDK 1.7 \u4E2D\u7684\u521B\u5EFA\u7C7B\u4F3C\u4E8E\u5355\u4F8B\u6A21\u5F0F\u4E2D\u7684\u997F\u6C49\u5F0F\uFF0CJDK 1.8 \u5219\u7C7B\u4F3C\u4E8E\u61D2\u6C49\u5F0F\uFF0C\u5EF6\u8FDF\u6570\u7EC4\u7684\u521B\u5EFA\uFF0C\u8282\u7701\u5185\u5B58</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * \u9ED8\u8BA4\u521D\u59CB\u5316\u5BB9\u91CF
 * Default initial capacity.
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_CAPACITY <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>


<span class="token comment">/**
 * \u9ED8\u8BA4\u521D\u59CB\u5316\u7684\u7A7A\u6570\u7EC4\u5BF9\u8C61
 * Shared empty array instance used for default sized empty instances. We
 * distinguish this from EMPTY_ELEMENTDATA to know how much to inflate when
 * first element is added.
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>


<span class="token comment">/**
 * \u5E95\u5C42\u5B58\u50A8\u6570\u636E\u7684Object\u6570\u7EC4
 * The array buffer into which the elements of the ArrayList are stored.
 * The capacity of the ArrayList is the length of this array buffer. Any
 * empty ArrayList with elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA
 * will be expanded to DEFAULT_CAPACITY when the first element is added.
 */</span>
<span class="token keyword">transient</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData<span class="token punctuation">;</span> <span class="token comment">// non-private to simplify nested class access</span>

<span class="token comment">/**
 * ArrayList \u7684 size\uFF0C\u9ED8\u8BA4\u4E3A0
 * The size of the ArrayList (the number of elements it contains).
 */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>

<span class="token comment">/**
 * \u9ED8\u8BA4\u6784\u9020\u65B9\u6CD5\uFF0C\u5E95\u5C42\u521B\u5EFA\u4E00\u4E2A\u7A7A\u6570\u7EC4
 * Constructs an empty list with an initial capacity of ten.
 */</span>
<span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5E26\u81EA\u5B9A\u4E49 capacity \u7684\u6784\u9020\u65B9\u6CD5
 * Constructs an empty list with the specified initial capacity.
 *
 * @param  initialCapacity  the initial capacity of the list
 * @throws IllegalArgumentException if the specified initial capacity
 *         is negative
 */</span>
<span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>initialCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> EMPTY_ELEMENTDATA<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal Capacity: &quot;</span><span class="token operator">+</span>
                                           initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Returns the number of elements in this list.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> size<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * list \u88AB\u4FEE\u6539\u7684\u6B21\u6570
 * The number of times this list has been &lt;i&gt;structurally modified&lt;/i&gt;.
 * Structural modifications are those that change the size of the
 * list, or otherwise perturb it in such a fashion that iterations in
 * progress may yield incorrect results.
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">transient</span> <span class="token keyword">int</span> modCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * Returns true if this list contains no elements.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * contains \u65B9\u6CD5\u58F0\u660E\u4E8E List \u63A5\u53E3\uFF0C\u7531 AbstractList \u7C7B\u5B9E\u73B0
 * Returns true if this list contains the specified element.
 * More formally, returns true if and only if this list contains
 * at least one element &lt;tt&gt;e&lt;/tt&gt; such that
 * &lt;tt&gt;(o==null ? e==null : o.equals(e))&lt;/tt&gt;.
 *
 * @param o element whose presence in this list is to be tested
 * @return &lt;tt&gt;true&lt;/tt&gt; if this list contains the specified element
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">indexOf</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Returns the index of the first occurrence of the specified element
 * in this list, or -1 if this list does not contain the element.
 * More formally, returns the lowest index &lt;tt&gt;i&lt;/tt&gt; such that
 * &lt;tt&gt;(o==null ? get(i)==null : o.equals(get(i)))&lt;/tt&gt;,
 * or -1 if there is no such index.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5355\u4E2A\u5143\u7D20\u6DFB\u52A0\u64CD\u4F5C
 * Appends the specified element to the end of this list.
 *
 * @param e element to be appended to this list
 * @return true (as specified by {@link Collection#add})
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 1\u3001\u6DFB\u52A0\u4E4B\u524D\u5148\u8C03\u7528 ensureCapacityInternal \u65B9\u6CD5\u786E\u5B9A\u5185\u90E8\u6570\u7EC4\u5BB9\u91CF</span>
      <span class="token comment">// \u5F53\u524Dsize = 0\uFF0C \u5C06 size + 1 \u4F5C\u4E3A\u6700\u5C0F\u5BB9\u91CF\u4F20\u5165 ensureCapacityInternal \u65B9\u6CD5\uFF0C\u8BA1\u7B97\u51FA\u5408\u9002\u7684\u5BB9\u91CF</span>
    <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Increments modCount!!</span>
    elementData<span class="token punctuation">[</span>size<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 2\u3001\u6839\u636E\u5F53\u524D\u6570\u7EC4\u4E2D\u5143\u7D20\u7684\u4E2A\u6570\u548C\u4F20\u5165\u7684\u6700\u5C0F\u5BB9\u91CF\uFF0C\u8BA1\u7B97\u51FA\u5408\u9002\u7684\u5BB9\u91CF</span>
    <span class="token function">ensureExplicitCapacity</span><span class="token punctuation">(</span><span class="token function">calculateCapacity</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> minCapacity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">calculateCapacity</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData<span class="token punctuation">,</span> <span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 3\u3001\u53D6 DEFAULT_CAPACITY \u548C minCapacity \u4E2D\u7684\u6700\u5927\u503C\u8FD4\u56DE</span>
      <span class="token comment">// \u5982\u679C\u662F\u7B2C\u4E00\u6B21\u6267\u884Cadd\u65B9\u6CD5\uFF0C\u5219\u8FD4\u56DE\u7684\u662F DEFAULT_CAPACITY = 10</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>elementData <span class="token operator">==</span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>DEFAULT_CAPACITY<span class="token punctuation">,</span> minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> minCapacity<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">ensureExplicitCapacity</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>

      <span class="token comment">// 4\u3001\u6839\u636E\u8BA1\u7B97\u51FA\u6765\u5BB9\u91CF\u548C\u5F53\u524D\u6570\u7EC4\u4E2D\u5B9E\u9645\u652F\u6301\u7684\u5BB9\u91CF\u505A\u6BD4\u8F83\uFF0C\u82E5\u662F\u5927\u4E8E\u6570\u7EC4\u7684\u5BB9\u91CF\u5219\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C</span>
    <span class="token comment">// overflow-conscious code</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>minCapacity <span class="token operator">-</span> elementData<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token function">grow</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5E95\u5C42\u6570\u7EC4\u5141\u8BB8\u7684\u6700\u5927\u957F\u5EA6
 * The maximum size of array to allocate.
 * Some VMs reserve some header words in an array.
 * Attempts to allocate larger arrays may result in
 * OutOfMemoryError: Requested array size exceeds VM limit
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_ARRAY_SIZE <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * \u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C
 * Increases the capacity to ensure that it can hold at least the
 * number of elements specified by the minimum capacity argument.
 *
 * @param minCapacity the desired minimum capacity
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// overflow-conscious code</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      <span class="token comment">// capacity \u6269\u5927\u4E3A\u539F\u6765\u76841.5\u500D</span>
    <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">+</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u6269\u5BB9\u540E\u7684 newCapacity \u8FD8\u662F\u4E0D\u591F minCapacity \u5927</span>
      <span class="token comment">// \u90A3\u4E48\u4F7F\u7528 minCapacity \u4F5C\u4E3A\u6269\u5BB9\u540E\u7684\u5BB9\u91CF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> minCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> minCapacity<span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C newCapacity \u8D85\u8FC7\u5E95\u5C42\u6570\u7EC4\u5141\u8BB8\u7684\u6700\u5927\u957F\u5EA6\uFF0C\u8BBE\u7F6E\u4E3A Integer.MAX_VALUE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> MAX_ARRAY_SIZE <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// minCapacity is usually close to size, so this is a win:</span>
    elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>minCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// overflow</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">OutOfMemoryError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>minCapacity <span class="token operator">&gt;</span> MAX_ARRAY_SIZE<span class="token punctuation">)</span> <span class="token operator">?</span>
        <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">:</span>
        MAX_ARRAY_SIZE<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br></div></div><br><p><strong>2\u3001ArrayList \u7684 add() \u6267\u884C\u4E0E\u6269\u5BB9\u903B\u8F91</strong></p><p>1\uFF09\u8C03\u7528 add() \u65B9\u6CD5\u6DFB\u52A0\u4E4B\u524D\u5148\u8C03\u7528 ensureCapacityInternal() \u65B9\u6CD5\uFF0C\u786E\u5B9A\u4E00\u4E2A\u80FD\u6DFB\u52A0\u5F53\u524D\u5143\u7D20\u7684\u6700\u5C0F\u5BB9\u91CF minCapacity\u3002\u4E3A\u4EC0\u4E48\u662F\u6700\u5C0F\uFF1F\u90A3\u4E3B\u8981\u539F\u56E0\u5F53\u7136\u662F\u4E3A\u4E86\u8282\u7701\u7A7A\u95F4\uFF0C\u907F\u514D\u4E0D\u5FC5\u8981\u7684\u5B58\u50A8\u7A7A\u95F4\u5F00\u9500\u3002</p><p>2\uFF09\u5F53\u524D<code>size=0</code>\uFF0C \u5C06<code>size+1</code>\u4F5C\u4E3A\u6700\u5C0F\u5BB9\u91CF minCapacity \u4F20\u5165 ensureCapacityInternal() \u65B9\u6CD5\uFF0C\u8BA1\u7B97\u51FA\u5408\u9002\u7684\u5BB9\u91CF</p><p>3\uFF09\u5982\u679C\u662F\u7B2C\u4E00\u6B21\u6267\u884C add() \u65B9\u6CD5\uFF0C\u5219\u8FD4\u56DE<code>DEFAULT_CAPACITY = 10</code>\uFF0C\u6B64\u65F6\u786E\u5B9A\u7684\u6700\u5C0F\u5BB9\u91CF\u5373\u4E3A10\uFF1B\u5426\u5219\u6BD4\u8F83 minCapacity \u548C DEFAULT_CAPACITY\uFF0C\u5E76\u8FD4\u56DE\u4E8C\u8005\u4E2D\u7684\u6700\u5927\u503C\u3002</p><p>4\uFF09\u6839\u636E\u8BA1\u7B97\u51FA\u6765\u6700\u5C0F\u5BB9\u91CF minCapacity \u548C\u5F53\u524D\u6570\u7EC4\u4E2D\u5B9E\u9645\u652F\u6301\u7684\u5BB9\u91CF\u505A\u6BD4\u8F83\uFF0C\u82E5\u662F minCapacity \u5927\u4E8E\u6570\u7EC4\u7684\u5BB9\u91CF\u5219\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C</p><p>5\uFF09\u6267\u884C grow() \u65B9\u6CD5\uFF0C\u5BB9\u91CF\u6269\u5927\u4E3A\u539F\u6765\u76841.5\u500D\uFF0C<code>newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1)</code></p><p>6\uFF09\u5982\u679C\u6269\u5BB9\u540E\u7684 newCapacity \u8FD8\u662F\u4E0D\u591F minCapacity \u5927\uFF0C\u90A3\u4E48\u4F7F\u7528 minCapacity \u4F5C\u4E3A\u6269\u5BB9\u540E\u7684\u5BB9\u91CF</p><p>7\uFF09\u5982\u679C\u6700\u7EC8\u786E\u5B9A\u7684\u6269\u5BB9\u91CF\u8D85\u8FC7\u5E95\u5C42\u6570\u7EC4\u5141\u8BB8\u7684\u6700\u5927\u957F\u5EA6\uFF0C\u5219\u5C06\u6570\u7EC4\u5BB9\u91CF\u6269\u5BB9\u81F3<code>Integer.MAX_VALUE</code></p><br><p><strong>3\u3001ArrayList \u7EBF\u7A0B\u4E0D\u5B89\u5168</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * ArrayListTest
 * @author gnl
 */</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayListTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">/**
         * ArrayList\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\u8868\u73B0
         * \u62A5\u5F02\u5E38 java.util.ConcurrentModificationException
         * \u539F\u56E0 \u591A\u7EBF\u7A0B\u5E76\u53D1\u4E89\u62A2\u540C\u4E00\u4E2A\u8D44\u6E90\uFF0C\u5E76\u4E14\u6CA1\u6709\u52A0\u9501
         * \u89E3\u51B3\u529E\u6CD5
         * 1. Vector \u4E0D\u63A8\u8350
         * 2. new CopyOnWriteArrayList&lt;&gt;();
         *    \u5199\u65F6\u590D\u5236
         *    CopyOnWrite \u5BB9\u5668\u5373\u5199\u65F6\u590D\u5236\u5BB9\u5668
         *    \u5F80\u5199\u65F6\u590D\u5236\u5BB9\u5668\u6DFB\u52A0\u5143\u7D20\u7684\u65F6\u5019\uFF0C\u4E0D\u76F4\u63A5\u5F80\u5F53\u524D\u5BB9\u5668 Object[] \u6DFB\u52A0\uFF0C\u800C\u662F\u5BF9\u5F53\u524D\u5BB9\u5668\u4F7F\u7528Arrays.copy()\u590D\u5236\u51FA\u4E00\u4E2A\u65B0\u7684\u5BB9\u5668 Object[] newElement\uFF0C\u7136\u540E\u5411\u65B0\u5BB9\u5668\u91CC\u6DFB\u52A0\u5143\u7D20
         *    \u6DFB\u52A0\u5B8C\u5143\u7D20\u4E4B\u540E\uFF0C\u518D\u4F7F\u7528 setArray()\u65B9\u6CD5\u5C06\u539F\u5BB9\u5668\u7684\u5F15\u7528\u6307\u5411\u65B0\u5BB9\u5668
         *    \u8FD9\u6837\u505A\u7684\u597D\u5904\u662F\u53EF\u4EE5\u5BF9 CopyOnWrite \u5BB9\u5668\u8FDB\u884C\u5E76\u53D1\u7684\u8BFB\uFF0C\u800C\u4E0D\u9700\u8981\u52A0\u9501
         *    \u56E0\u4E3A\u539F\u5BB9\u5668\u4E0D\u4F1A\u6DFB\u52A0\u4EFB\u4F55\u5143\u7D20\uFF0C\u6240\u4EE5 CopyOnWrite \u5BB9\u5668\u4E5F\u662F\u4E00\u79CD\u8BFB\u5199\u5206\u79BB\u601D\u60F3\uFF0C\u8BFB\u539F\u5BB9\u5668\uFF0C\u5199\u65B0\u5BB9\u5668
         * 3. List&lt;String&gt; list = Collections.synchronizedList(new ArrayList&lt;&gt;());
         */</span> 

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><br><p><strong>4\u3001LinkedList \u5B9E\u73B0\u7EC6\u8282</strong></p><p>1\uFF09LinkedList \u540C\u65F6\u5B9E\u73B0\u4E86 List \u63A5\u53E3\u548C Deque \u63A5\u53E3\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5B83\u65E2\u53EF\u4EE5\u770B\u4F5C\u4E00\u4E2A\u987A\u5E8F\u5BB9\u5668\uFF0C\u53C8\u53EF\u4EE5\u770B\u4F5C\u4E00\u4E2A\u961F\u5217\uFF08Queue\uFF09\uFF0C\u540C\u65F6\u53C8\u53EF\u4EE5\u770B\u4F5C\u4E00\u4E2A\u6808\uFF08Stack\uFF09\u3002\u5F53\u9700\u8981\u4F7F\u7528\u6808\u6216\u8005\u961F\u5217\u65F6\uFF0C\u53EF\u4EE5\u8003\u8651\u4F7F\u7528 LinkedList\uFF0C\u4E00\u65B9\u9762\u662F\u56E0\u4E3A Java \u5B98\u65B9\u5DF2\u7ECF\u58F0\u660E\u4E0D\u5EFA\u8BAE\u4F7F\u7528 Stack \u7C7B\uFF1B\u53E6\u4E00\u65B9\u9762\u662F\uFF0CJava \u4E2D\u6CA1\u6709 Queue \u7C7B\uFF0C\u4EC5\u6709 Queue \u63A5\u53E3\u3002</p><blockquote><p>\u5173\u4E8E\u6808\u6216\u961F\u5217\uFF0C\u73B0\u5728\u7684\u9996\u9009 <code>ArrayDeque</code>\uFF0C\u5B83\u6709\u7740\u6BD4 LinkedList\uFF08\u5F53\u4F5C\u6808\u6216\u961F\u5217\u4F7F\u7528\u65F6\uFF09\u66F4\u597D\u7684\u6027\u80FD\u3002</p></blockquote><p>2\uFF09LinkedList \u7684\u5B9E\u73B0\u65B9\u5F0F\u51B3\u5B9A\u4E86\u6240\u6709\u8DDF\u4E0B\u6807\u76F8\u5173\u7684\u64CD\u4F5C\u90FD\u662F\u7EBF\u6027\u65F6\u95F4\uFF0C\u800C\u5728\u9996\u6BB5\u6216\u8005\u672B\u5C3E\u5220\u9664\u5143\u7D20\u53EA\u9700\u8981\u5E38\u6570\u65F6\u95F4\u3002\u4E3A\u8FFD\u6C42\u6548\u7387 LinkedList \u6CA1\u6709\u5B9E\u73B0\u540C\u6B65\uFF08synchronized\uFF09\uFF0C\u5982\u679C\u9700\u8981\u591A\u4E2A\u7EBF\u7A0B\u5E76\u53D1\u8BBF\u95EE\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>Collections.synchronizedList()</code>\u65B9\u6CD5\u5BF9\u5176\u8FDB\u884C\u5305\u88C5\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">transient</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * Pointer to first node.
 * Invariant: (first == null &amp;&amp; last == null) ||
 *            (first.prev == null &amp;&amp; first.item != null)
 */</span>
<span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">;</span>

<span class="token comment">/**
 * Pointer to last node.
 * Invariant: (first == null &amp;&amp; last == null) ||
 *            (last.next == null &amp;&amp; last.item != null)
 */</span>
<span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> last<span class="token punctuation">;</span>

<span class="token comment">/**
 * Constructs an empty list.
 */</span>
<span class="token keyword">public</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// Node \u4E3A\u9759\u6001\u5185\u90E8\u7C7B</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">E</span> item<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">;</span>

    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token operator">=</span> element<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><br><h4 id="queue-\u63A5\u53E3" tabindex="-1">Queue \u63A5\u53E3 <a class="header-anchor" href="#queue-\u63A5\u53E3" aria-hidden="true">#</a></h4><blockquote><p><em>Queue</em>\u63A5\u53E3\u7EE7\u627F\u81EA<em>Collection</em>\u63A5\u53E3\uFF0C\u9664\u4E86\u6700\u57FA\u672C\u7684<em>Collection</em>\u7684\u65B9\u6CD5\u4E4B\u5916\uFF0C\u5B83\u8FD8\u652F\u6301\u989D\u5916\u7684<em>insertion\uFF08\u63D2\u5165\uFF09</em>, *extraction\uFF08\u63D0\u53D6\uFF09<em>\u548C</em>inspection\uFF08\u68C0\u67E5\uFF09*\u64CD\u4F5C\u3002</p></blockquote><p>\u8FD9\u91CC\u6709\u4E24\u7EC4\u683C\u5F0F\uFF0C\u51716\u4E2A\u65B9\u6CD5\uFF0C\u4E00\u7EC4\u662F\u629B\u51FA\u5F02\u5E38\u7684\u5B9E\u73B0\uFF1B\u53E6\u5916\u4E00\u7EC4\u662F\u8FD4\u56DE\u503C\u7684\u5B9E\u73B0(\u6CA1\u6709\u5219\u8FD4\u56DE\uFF08null\uFF09\u3002</p><table><thead><tr><th></th><th>Throws exception</th><th><strong>Returns special value</strong></th></tr></thead><tbody><tr><td>Insert</td><td>add(e)</td><td>offer(e)</td></tr><tr><td>Remove</td><td>remove()</td><td>poll()</td></tr><tr><td>Examine\uFF08\u5143\u7D20\u68C0\u67E5\uFF09</td><td>element()</td><td>peek()</td></tr></tbody></table><blockquote><p>\u5173\u4E8E\u6808\u6216\u961F\u5217\uFF0C\u73B0\u5728\u7684\u9996\u9009\u662F<em><strong>ArrayDeque</strong></em>\uFF0C\u5B83\u6709\u7740\u6BD4<em>LinkedList</em>\uFF08\u5F53\u4F5C\u6808\u6216\u961F\u5217\u4F7F\u7528\u65F6\uFF09\u6709\u7740\u66F4\u597D\u7684\u6027\u80FD\u3002</p></blockquote><br><h4 id="set-\u63A5\u53E3" tabindex="-1">Set \u63A5\u53E3 <a class="header-anchor" href="#set-\u63A5\u53E3" aria-hidden="true">#</a></h4><blockquote><p>\u5143\u7D20\u65E0\u5E8F\uFF0C\u4E0D\u53EF\u91CD\u590D\u7684\u96C6\u5408</p></blockquote><p>\u7EE7\u627F\u81EA Collection \u63A5\u53E3\uFF0CSet \u63A5\u53E3\u548C\u5176\u5B9E\u73B0\u7C7B\u4E2D\u6CA1\u6709<code>set()</code>\u548C<code>get()</code>\u65B9\u6CD5\uFF0C\u56E0\u4E3A Set \u65E0\u5E8F\uFF0C\u65E0 index\uFF0C\u4E0D\u80FD\u7D22\u5F15\uFF0C\u6240\u4EE5\u4E0D\u80FD\u7528<code>get(index)</code>\uFF0C\u540C\u6837\u7684\u56E0\u4E3A\u65E0 index\uFF0C\u4E0D\u80FD\u8FDB\u884C\u5982<code>mySet.set(index, element)</code>\u7B49\u64CD\u4F5C</p><p>1\uFF09<code>HashSet</code>\uFF0C\u4F5C\u4E3A<code>Set</code>\u63A5\u53E3\u7684\u4E3B\u8981\u5B9E\u73B0\u7C7B\uFF0C\u7EBF\u7A0B\u4E0D\u5B89\u5168\uFF0C\u53EF\u4EE5\u5B58\u50A8<code>null</code>\u503C\uFF0C\u5E95\u5C42\u5B9E\u73B0\u5B9E\u9645\u4E0A\u662F\u7531<code>HashMap</code>\u5B9E\u73B0</p><p>2\uFF09<code>LinkedHashSet</code>\uFF0C\u4F5C\u4E3A<code>HashSet</code>\u7684\u5B50\u7C7B\uFF0C\u4E5F\u662F\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\uFF0C\u4E5F\u53EF\u5B58\u50A8<code>null</code>\u503C\uFF0C\u5185\u90E8\u4F7F\u7528\u53CC\u5411\u94FE\u8868\u7EF4\u62A4\u5143\u7D20\u7684\u63D2\u5165\u987A\u5E8F\u3002</p><ul><li>\u4F5C\u4E3A<code>HashSet</code>\u7684\u5B50\u7C7B\uFF0C\u5728\u6DFB\u52A0\u6570\u636E\u7684\u540C\u65F6\uFF0C\u6BCF\u4E2A\u6570\u636E\u8FD8\u7EF4\u62A4\u4E24\u4E2A\u5F15\u7528\uFF0C\u8BB0\u5F55\u6B64\u6570\u636E\u7684\u524D\u4E00\u4E2A\u6570\u636E\u548C\u540E\u4E00\u4E2A\u6570\u636E</li><li>\u904D\u5386\u5176\u5185\u90E8\u6570\u636E\u65F6\uFF0C\u53EF\u4EE5\u6309\u7167\u6DFB\u52A0\u7684\u987A\u5E8F\u904D\u5386\uFF0C\u5BF9\u4E8E\u904D\u5386\u9891\u7E41\u7684\u64CD\u4F5C\uFF0C<code>LinkedHashSet</code>\u6548\u7387\u9AD8\u4E8E<code>HashSet</code></li><li>\u5E95\u5C42\u540C\u6837\u7531<code>HashMap</code>\u5B9E\u73B0</li></ul><p>3\uFF09<code>TreeSet</code>\uFF0C\u5E95\u5C42\u7531<code>TreeMap</code>\u5B9E\u73B0\uFF0C\u57FA\u4E8E\u7EA2\u9ED1\u6811\u5B9E\u73B0\uFF0C\u7EBF\u7A0B\u4E0D\u5B89\u5168\u3002<code>TreeSet</code>\u4E2D<strong>\u6DFB\u52A0\u7684\u5143\u7D20\u5FC5\u987B\u662F\u540C\u4E00\u4E2A\u7C7B\u7684\u5B9E\u4F8B\u5BF9\u8C61</strong>\uFF0C\u5E76\u4E14\u53EF\u4EE5\u6309\u7167\u6DFB\u52A0\u5BF9\u8C61\u7684\u6307\u5B9A\u5C5E\u6027\u8FDB\u884C\u6392\u5E8F\u3002==\u7279\u70B9\u662F\u6709\u5E8F\uFF0C\u67E5\u8BE2\u901F\u5EA6\u6BD4<code>List</code>\u5FEB==\u3002\u652F\u6301\u6709\u5E8F\u6027\u64CD\u4F5C\uFF0C\u4F8B\u5982\u6839\u636E\u4E00\u4E2A\u8303\u56F4\u67E5\u627E\u5143\u7D20\u7684\u64CD\u4F5C\u3002\u4F46\u662F\u67E5\u627E\u6548\u7387\u4E0D\u5982 HashSet\uFF0CHashSet \u67E5\u627E\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\uFF0CTreeSet \u5219\u4E3A O(logN)\u3002</p><br><p><strong>Set \u63A5\u53E3\u7EC6\u8282</strong></p><p>1\uFF09\u65E0\u5E8F\u6027\uFF0C\u4F46\u4E0D\u7B49\u4E8E\u968F\u673A\u6027\uFF0C\u5B58\u50A8\u7684\u6570\u636E\u5728\u5E95\u5C42\u6570\u7EC4\u4E2D\u5E76\u975E\u6309\u7167\u6570\u7EC4\u7D22\u5F15\u987A\u5E8F\u6DFB\u52A0\uFF0C\u800C\u662F\u4F7F\u7528<code>hashCode()</code>\u65B9\u6CD5\uFF0C\u8BA1\u7B97\u51FA\u5B58\u50A8\u5143\u7D20\u7684\u952E\u7684\u54C8\u5E0C\u503C\uFF0C\u518D\u6839\u636E\u54C8\u5E0C\u503C\u51B3\u5B9A\u6570\u636E\u5B58\u653E\u7684\u4F4D\u7F6E</p><p>2\uFF09\u4E0D\u53EF\u91CD\u590D\u6027\uFF0C\u4FDD\u8BC1\u6DFB\u52A0\u7684\u5143\u7D20\u6309\u7167<code>equals()</code>\u65B9\u6CD5\u5224\u65AD\u65F6\uFF0C\u4E0D\u80FD\u8FD4\u56DE<code>true</code>\u3002\u5373\u76F8\u540C\u7684\u5143\u7D20\u53EA\u80FD\u6DFB\u52A0\u4E00\u4E2A\uFF0C\u5728\u8C03\u7528<code>equals()</code>\u65F6\uFF0C\u9700\u8981\u8C03\u7528\u6240\u5728\u7684\u7C7B\u7684<code>hashCode()</code>\u65B9\u6CD5\uFF0C\u8BA1\u7B97\u51FA\u54C8\u5E0C\u503C</p><p>3\uFF09<code>Set</code>\u63A5\u53E3\u4E2D\u6CA1\u6709\u5B9A\u4E49\u989D\u5916\u7684\u65B9\u6CD5\uFF0C\u4F7F\u7528\u7684\u90FD\u662F<code>Collection</code>\u63A5\u53E3\u4E2D\u58F0\u660E\u7684\u65B9\u6CD5</p><p>4\uFF09\u5411<code>Set</code>\u4E2D\u6DFB\u52A0\u6570\u636E\u7684\u7C7B\u4E00\u5B9A\u8981\u91CD\u5199<code>equals()</code>\u548C<code>hashCode()</code>\u65B9\u6CD5</p><p>5\uFF09\u91CD\u5199<code>equals()</code>\u548C<code>hashCode()</code>\u65B9\u6CD5\u5C3D\u53EF\u80FD\u4FDD\u6301\u4E00\u81F4\uFF0C\u5373\u76F8\u540C\u7684\u5BF9\u8C61\u5FC5\u987B\u5177\u6709\u76F8\u540C\u7684\u6563\u5217\u7801</p><p>\u91CD\u5199\u7684\u65B9\u6CD5\u4E2D\uFF0C\u5BF9\u8C61\u91CC\u7528\u4F5C<code>equals()</code>\u65B9\u6CD5\u6BD4\u8F83\u7684\u6210\u5458\u53D8\u91CF\u90FD\u5E94\u8BE5\u7528\u6765\u8BA1\u7B97<code>hashCode()</code>\u7684\u503C</p><br><p><strong>HashSet \u5B9E\u4F8B\u5316\u7EC6\u8282</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u5E95\u5C42\u7531 HashMap \u5B9E\u73B0</span>
<span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span>

<span class="token comment">// \u5411 Set \u4E2D add \u503C\u7684\u65F6\u5019\u662F\u5C06\u503C\u5B58\u653E\u5230HashMap\u7684key\u4F4D\u7F6E\uFF0Cvalue\u4F4D\u7F6E\u5219\u4F7F\u7528\u4E00\u4E2AObject\u6765\u586B\u5145</span>
<span class="token comment">// Dummy value to associate with an Object in the backing Map</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> PRESENT <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">/**
 * \u53EF\u4EE5\u770B\u5230\u521B\u5EFAHashSet\u5B9E\u9645\u4E0A\u662F\u521B\u5EFA\u4E00\u4E2AHashMap
 * Constructs a new, empty set; the backing &lt;tt&gt;HashMap&lt;/tt&gt; instance has
 * default initial capacity (16) and load factor (0.75).
 */</span>
<span class="token keyword">public</span> <span class="token class-name">HashSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">/**
 * Returns an iterator over the elements in this set.  The elements
 * are returned in no particular order.
 *
 * @return an Iterator over the elements in this set
 * @see ConcurrentModificationException
 */</span>
<span class="token keyword">public</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Returns the number of elements in this set (its cardinality).
 *
 * @return the number of elements in this set (its cardinality)
 */</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Returns &lt;tt&gt;true&lt;/tt&gt; if this set contains no elements.
 *
 * @return &lt;tt&gt;true&lt;/tt&gt; if this set contains no elements
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Returns &lt;tt&gt;true&lt;/tt&gt; if this set contains the specified element.
 * More formally, returns &lt;tt&gt;true&lt;/tt&gt; if and only if this set
 * contains an element &lt;tt&gt;e&lt;/tt&gt; such that
 * &lt;tt&gt;(o==null ? e==null : o.equals(e))&lt;/tt&gt;.
 *
 * @param o element whose presence in this set is to be tested
 * @return true if this set contains the specified element
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">/**
 * Adds the specified element to this set if it is not already present.
 * More formally, adds the specified element &lt;tt&gt;e&lt;/tt&gt; to this set if
 * this set contains no element &lt;tt&gt;e2&lt;/tt&gt; such that
 * &lt;tt&gt;(e==null ? e2==null : e.equals(e2))&lt;/tt&gt;.
 * If this set already contains the element, the call leaves the set
 * unchanged and returns &lt;tt&gt;false&lt;/tt&gt;.
 *
 * @param e element to be added to this set
 * @return &lt;tt&gt;true&lt;/tt&gt; if this set did not already contain the specified
 * element
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> PRESENT<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Removes the specified element from this set if it is present.
 * More formally, removes an element &lt;tt&gt;e&lt;/tt&gt; such that
 * &lt;tt&gt;(o==null ? e==null : o.equals(e))&lt;/tt&gt;,
 * if this set contains such an element.  Returns &lt;tt&gt;true&lt;/tt&gt; if
 * this set contained the element (or equivalently, if this set
 * changed as a result of the call).  (This set will not contain the
 * element once the call returns.)
 *
 * @param o object to be removed from this set, if present
 * @return &lt;tt&gt;true&lt;/tt&gt; if the set contained the specified element
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token operator">==</span>PRESENT<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6DFB\u52A0\u5143\u7D20\u548C\u6269\u5BB9\u903B\u8F91\u4E0E HashMap \u4E00\u81F4</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br></div></div><br><h4 id="map-\u63A5\u53E3" tabindex="-1">Map \u63A5\u53E3 <a class="header-anchor" href="#map-\u63A5\u53E3" aria-hidden="true">#</a></h4><blockquote><p>\u53CC\u5217\u6570\u636E\uFF0C\u4FDD\u5B58\u5177\u6709\u6620\u5C04\u5173\u7CFB <code>key-value</code> \u5BF9\u7684\u96C6\u5408</p></blockquote><p>1\uFF09<code>HashMap</code>\uFF0C\u57FA\u4E8E\u54C8\u5E0C\u8868\u5B9E\u73B0\uFF0C\u5E95\u5C42\u4F7F\u7528 HashMap \u7684\u9759\u6001\u5185\u90E8 Node \u7C7B\uFF0C<code>Node&lt;K, V&gt; []</code>\u7C7B\u578B\u7684\u6570\u7EC4\u8FDB\u884C\u5B58\u50A8\u3002HashMap \u7EBF\u7A0B\u4E0D\u5B89\u5168\uFF0C\u5728\u591A\u7EBF\u7A0B\u4E0B\u64CD\u4F5C HashMap \u53EF\u80FD\u4F1A\u51FA\u73B0<code>ConcurrentModificationException</code>\uFF08\u5E76\u53D1\u4FEE\u6539\u5F02\u5E38\uFF0C\u60C5\u51B5\u540C ArrayList \uFF09</p><ul><li><code>key</code>\uFF0C\u65E0\u5E8F\u4E0D\u53EF\u91CD\u590D\u3002\u4F7F\u7528<code>Set</code>\u5B58\u50A8\u6240\u6709\u7684<code>key</code>\uFF0C\u79F0\u4E3A<code>keySet</code></li><li><code>value</code>\uFF0C\u65E0\u5E8F\u53EF\u91CD\u590D\u3002\u4F7F\u7528<code>Collection</code>\u5B58\u50A8\u6240\u6709\u7684<code>value</code>\uFF0C\u79F0\u4E3A<code>values</code></li><li><code>entry</code>\uFF0C\u65E0\u5E8F\u4E0D\u53EF\u91CD\u590D\u3002\u4F7F\u7528<code>Set</code>\u7C7B\u578B\u7684<code>entrySet</code>\u4FDD\u5B58\u6240\u6709\u7684<code>key-value</code>\u5BF9</li></ul><p>2\uFF09<code>LinkedHashMap</code>\uFF0C\u4F7F\u7528\u53CC\u5411\u94FE\u8868\u6765\u7EF4\u62A4\u5143\u7D20\u7684\u987A\u5E8F\uFF0C\u987A\u5E8F\u4E3A\u63D2\u5165\u987A\u5E8F\u6216\u8005\u6700\u8FD1\u6700\u5C11\u4F7F\u7528(LRU)\u987A\u5E8F</p><p>3\uFF09<code>Hashtable</code>\uFF0C\u548C HashMap \u7C7B\u4F3C\uFF0C\u4F46\u5B83\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u8FD9\u610F\u5473\u7740\u540C\u4E00\u65F6\u523B\u591A\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u540C\u65F6\u5199\u5165 HashTable \u5E76\u4E14\u4E0D\u4F1A\u5BFC\u81F4\u6570\u636E\u4E0D\u4E00\u81F4\u3002\u5B83\u662F\u9057\u7559\u7C7B\uFF0C\u4E0D\u5E94\u8BE5\u53BB\u4F7F\u7528\u5B83\u3002\u73B0\u5728\u53EF\u4EE5\u4F7F\u7528 ConcurrentHashMap \u6765\u652F\u6301\u7EBF\u7A0B\u5B89\u5168\uFF0C\u5E76\u4E14 ConcurrentHashMap \u7684\u6548\u7387\u4F1A\u66F4\u9AD8\uFF0C\u56E0\u4E3A ConcurrentHashMap \u5F15\u5165\u4E86\u5206\u6BB5\u9501\u3002</p><p>4\uFF09<code>Properties</code>\uFF0C\u5E38\u7528\u6765\u5904\u7406\u914D\u7F6E\u6587\u4EF6\uFF0Ckey \u548C value \u90FD\u662F<code>String</code>\u7C7B\u578B\u7684</p><p>5\uFF09<code>SortedMap</code></p><p>5.1] <code>TreeMap</code>\uFF0C\u57FA\u4E8E\u7EA2\u9ED1\u6811\u5B9E\u73B0\uFF0C\u5411<code>TreeMap</code>\u4E2D\u6DFB\u52A0\u5143\u7D20\uFF0C\u8981\u6C42 key \u5FC5\u987B\u662F==\u540C\u4E00\u4E2A\u7C7B\u7684\u5B9E\u4F8B\u5BF9\u8C61==\uFF0C\u56E0\u4E3A\u8981\u6309\u7167 key \u8FDB\u884C\u6392\u5E8F\uFF0C\u9700\u8981\u76F8\u540C\u7684<code>equals()</code>\u548C<code>hashCode</code>\u65B9\u6CD5\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5982\u81EA\u7136\u6392\u5E8F</p><br><p><strong>HashMap &amp; Hashtable \u533A\u522B</strong></p><p>1\uFF09\u7236\u7C7B\u4E0D\u540C\u3002<code>HashMap</code>\u7236\u7C7B\u4E3A<code>AbstractMap</code>\u7C7B\uFF0C<code>Hashtable</code>\u7236\u7C7B\u4E3A<code>Dictionary</code>\u7C7B\u3002\u4E0D\u8FC7\u90FD\u5B9E\u73B0\u4E86<code>Map</code>\u3001<code>Cloneable</code>\u548C<code>Serializable</code>\u63A5\u53E3</p><p>2\uFF09\u521D\u59CB\u5927\u5C0F\u548C\u6BCF\u6B21\u6269\u5BB9\u5927\u5C0F\u4E0D\u540C\u3002HashMap \u521D\u59CB\u5927\u5C0F\u4E3A16\uFF0C\u6BCF\u6B21\u6269\u5BB9\u4E3A\u539F\u6765\u76842\u500D\uFF1BHashtable \u521D\u59CB\u5927\u5C0F\u4E3A11\uFF0C\u6BCF\u6B21\u6269\u5BB9\u4E3A\u539F\u6765\u76842\u500D\u518D\u52A01</p><p>3\uFF09\u8BA1\u7B97 hash \u503C\u7684\u65B9\u6CD5\u4E0D\u540C\u3002HashMap \u4F7F\u7528\u7684\u662F key \u6240\u5C5E\u7C7B\u7684 hashCode \u65B9\u6CD5\uFF1BHashtable \u4F7F\u7528\u7684\u662F<em>Object</em>\u7C7B\u7684 hashCode \u65B9\u6CD5</p><p>4\uFF09\u5BF9\u5916\u63D0\u4F9B\u7684\u65B9\u6CD5\u4E0D\u540C</p><p><code>Hashtable</code>\u6BD4<code>HashMap</code>\u591A\u63D0\u4F9B\u4E86<code>elements()</code>\u548C<code>contains()</code>\u65B9\u6CD5\u3002<code>elements()</code>\u7EE7\u627F\u81EA\u7236\u7C7B<code>Dictionary</code>\uFF0C\u7528\u4E8E\u8FD4\u56DE<code>Hashtable</code>\u4E2D\u7684 value \u679A\u4E3E\uFF1B<code>contains()</code>\u5224\u65AD<code>Hashtable</code>\u662F\u5426\u5305\u542B\u4F20\u5165\u7684 value\u3002\u5B83\u7684\u4F5C\u7528\u4E0E<code>containsValue()</code>\u4E00\u81F4\u3002\u4E8B\u5B9E\u4E0A\uFF0C<code>containsValue()</code>\u65B9\u6CD5\u53EA\u662F\u8C03\u7528\u4E86<code>contains()</code></p><p>5\uFF09\u5BF9<code>null</code>\u503C\u7684\u652F\u6301\u4E0D\u540C</p><ul><li>HashMap \u4E2D key \u548C value \u90FD\u53EF\u4EE5\u4E3A null\uFF0C\u4F46\u662F null \u503C\u5F97 key \u53EA\u80FD\u5B58\u5728\u4E00\u4E2A\uFF0Cnull \u503C\u7684 value \u53EF\u4EE5\u6709\u591A\u4E2A\uFF0C\u56E0\u4E3A\u5FC5\u987B\u4FDD\u8BC1 key \u503C\u7684\u552F\u4E00\u6027</li><li>Hashtable \u4E2D key \u548C value \u90FD\u4E0D\u80FD\u4E3A null</li></ul><p>6\uFF09\u5B89\u5168\u6027\u4E0D\u540C</p><ul><li>Hashtable \u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u5B83\u7684\u6BCF\u4E2A\u65B9\u6CD5\u90FD\u662F\u540C\u6B65\u65B9\u6CD5\u3001</li><li>HashMap \u662F\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\uFF0C\u591A\u7EBF\u7A0B\u60C5\u51B5\u4E0B\u53EF\u4EE5\u4F7F\u7528 ConcurrentHashMap \u6765\u4FDD\u8BC1\u7EBF\u7A0B\u7684\u5B89\u5168\u6027\uFF0CConcurrentHashMap \u4E2D\u7684\u65B9\u6CD5\u91C7\u7528\u4E86\u540C\u6B65\u5757\u7684\u65B9\u5F0F\u6765\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF0C\u4E0D\u9700\u8981\u5BF9\u6574\u4E2A\u65B9\u6CD5\u8FDB\u884C\u9501\u5B9A\uFF0C\u6548\u7387\u6BD4 HashTable \u9AD8</li></ul><br><p><strong>HashMap \u5B9E\u4F8B\u5316\u7EC6\u8282</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * \u5E95\u5C42Node[]\u6570\u7EC4\uFF0C\u9ED8\u8BA4\u521D\u59CB\u5316\u5927\u5C0F\u3002The default initial capacity - MUST be a power of two.
 */</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_INITIAL_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// aka 16</span>


<span class="token comment">/**
 * \u652F\u6301\u5B58\u50A8\u5143\u7D20\u7684\u6700\u5927\u5BB9\u91CF\u3002The maximum capacity, used if a higher value is implicitly specified
 * by either of the constructors with arguments.
 * MUST be a power of two &lt;= 1&lt;&lt;30.
 */</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAXIMUM_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span>


<span class="token comment">/**
 * \u9ED8\u8BA4\u52A0\u8F7D\u56E0\u5B50\u3002The load factor used when none specified in constructor.
 */</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> DEFAULT_LOAD_FACTOR <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span>


<span class="token comment">/**
 * \u5F53\u6570\u7EC4\u4E2D\u7684\u94FE\u8868\u5143\u7D20\u957F\u5EA6\u8D85\u8FC78\uFF0C\u7531\u94FE\u8868\u8F6C\u6210\u7EA2\u9ED1\u6811\u3002
 * The bin count threshold for using a tree rather than list for a
 * bin.  Bins are converted to trees when adding an element to a
 * bin with at least this many nodes. The value must be greater
 * than 2 and should be at least 8 to mesh with assumptions in
 * tree removal about conversion back to plain bins upon
 * shrinkage.
 */</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TREEIFY_THRESHOLD <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * \u5F53\u6570\u7EC4\u4E2D\u7684\u67D0\u4E2A\u4E0B\u6807\u7684\u5143\u7D20\u6811\u5316\u4E4B\u540E\uFF0C\u6811\u7ED3\u6784\u4E2D\u8282\u70B9\u6570\u5C0F\u4E8E6\uFF0C\u7531\u6811\u8F6C\u94FE\u8868
 * The bin count threshold for untreeifying a (split) bin during a
 * resize operation. Should be less than TREEIFY_THRESHOLD, and at
 * most 6 to mesh with shrinkage detection under removal.
 */</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UNTREEIFY_THRESHOLD <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * \u5F53\u94FE\u8868\u5143\u7D20 &gt;= 8 \u5E76\u4E14\u6570\u7EC4 &gt; 64 \u7684\u65F6\u5019\u8F6C\u5316\u7EA2\u9ED1\u6811\u3002
 * The smallest table capacity for which bins may be treeified.
 * (Otherwise the table is resized if too many nodes in a bin.)
 * Should be at least 4 * TREEIFY_THRESHOLD to avoid conflicts
 * between resizing and treeification thresholds.
 */</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MIN_TREEIFY_CAPACITY <span class="token operator">=</span> <span class="token number">64</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * The number of key-value mappings contained in this map.
 */</span>
<span class="token keyword">transient</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>

<span class="token comment">/**
 * \u8BB0\u5F55\u96C6\u5408\u4E2D\u5143\u7D20\u7684\u4FEE\u6539\u6B21\u6570\u3002
 * The number of times this HashMap has been structurally modified
 * Structural modifications are those that change the number of mappings in
 * the HashMap or otherwise modify its internal structure (e.g.,
 * rehash).  This field is used to make iterators on Collection-views of
 * the HashMap fail-fast.  (See ConcurrentModificationException).
 */</span>
<span class="token keyword">transient</span> <span class="token keyword">int</span> modCount<span class="token punctuation">;</span>

<span class="token comment">/**
 * \u80FD\u5BB9\u7EB3\u7684\u5143\u7D20\u4E2A\u6570\uFF0C\u5F53 size &gt; threshold \u7684\u65F6\u5019 \u5C31\u4F1A\u6269\u5BB9\u3002threshold = \u8D1F\u8F7D\u56E0\u5B50 * \u6570\u7EC4\u957F\u5EA6
 * The next size value at which to resize (capacity * load factor).
 */</span>
<span class="token comment">// (The javadoc description is true upon serialization.</span>
<span class="token comment">// Additionally, if the table array has not been allocated, this</span>
<span class="token comment">// field holds the initial array capacity, or zero signifying</span>
<span class="token comment">// DEFAULT_INITIAL_CAPACITY.)</span>
<span class="token keyword">int</span> threshold<span class="token punctuation">;</span>

<span class="token comment">/**
 * The load factor for the hash table.
 */</span>
<span class="token keyword">final</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">;</span>

<span class="token comment">/**
 * The table, initialized on first use, and resized as
 * necessary. When allocated, length is always a power of two.
 * (We also tolerate length zero in some operations to allow
 * bootstrapping mechanics that are currently not needed.)
 */</span>
<span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token punctuation">;</span>

<span class="token comment">/**
 * \u9759\u6001\u5185\u90E8 Node \u7C7B
 * Basic hash bin node, used for most entries.  (See below for
 * TreeNode subclass, and in LinkedHashMap for its Entry subclass.)
 */</span>
<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
    <span class="token class-name">V</span> value<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>

    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hash <span class="token operator">=</span> hash<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Holds cached entrySet(). Note that AbstractMap fields are used
 * for keySet() and values().
 */</span>
<span class="token keyword">transient</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> entrySet<span class="token punctuation">;</span>

<span class="token comment">/**
 * Constructs an empty &lt;tt&gt;HashMap&lt;/tt&gt; with the default initial capacity
 * (16) and the default load factor (0.75).
 */</span>
<span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5C06\u8D1F\u8F7D\u56E0\u5B50\u8BBE\u7F6E\u4E3A\u9ED8\u8BA4 = 0.75</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">;</span> <span class="token comment">// all other fields defaulted</span>
<span class="token punctuation">}</span>


<span class="token comment">/**
 * Associates the specified value with the specified key in this map.
 * If the map previously contained a mapping for the key, the old
 * value is replaced.
 *
 * @param key key with which the specified value is to be associated
 * @param value value to be associated with the specified key
 * @return the previous value associated with &lt;tt&gt;key&lt;/tt&gt;, or
 *         &lt;tt&gt;null&lt;/tt&gt; if there was no mapping for &lt;tt&gt;key&lt;/tt&gt;.
 *         (A &lt;tt&gt;null&lt;/tt&gt; return can also indicate that the map
 *         previously associated &lt;tt&gt;null&lt;/tt&gt; with &lt;tt&gt;key&lt;/tt&gt;.)
 */</span>
<span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u8BA1\u7B97\u5B58\u653E\u7684 key \u7684\u54C8\u5E0C\u503C
 * Computes key.hashCode() and spreads (XORs) higher bits of hash
 * to lower.  Because the table uses power-of-two masking, sets of
 * hashes that vary only in bits above the current mask will
 * always collide. (Among known examples are sets of Float keys
 * holding consecutive whole numbers in small tables.)  So we
 * apply a transform that spreads the impact of higher bits
 * downward. There is a tradeoff between speed, utility, and
 * quality of bit-spreading. Because many common sets of hashes
 * are already reasonably distributed (so don&#39;t benefit from
 * spreading), and because we use trees to handle large sets of
 * collisions in bins, we just XOR some shifted bits in the
 * cheapest possible way to reduce systematic lossage, as well as
 * to incorporate impact of the highest bits that would otherwise
 * never be used in index calculations because of table bounds.
 */</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Implements Map.put and related methods.
 *
 * @param hash hash for key
 * @param key the key
 * @param value the value to put
 * @param onlyIfAbsent if true, don&#39;t change existing value
 * @param evict if false, the table is in creation mode.
 * @return previous value, or null if none
 */</span>
<span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span>
               <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
      <span class="token comment">// 1\u3001\u7B2C\u4E00\u6B21\u521B\u5EFA\u5FC5\u7136\u4F1A\u8FDB\u5165 resize()</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
          <span class="token comment">// 2-11 \u5C0F\u70B9\u5728 resize() \u65B9\u6CD5\u4E2D</span>
        n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      <span class="token comment">// 12\u3001\u82E5 key \u4E0D\u5B58\u5728\uFF0C\u5219\u4E3A\u65B0\u589E</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token comment">// \u65B0\u521B\u5EFA\u4E00\u4E2A Node\uFF0C\u6DFB\u52A0\u5230\u6570\u7EC4\u4E2D</span>
        tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// 13\u3001\u82E5\u5B58\u50A8\u5143\u7D20\u7684hash\u503C\u76F8\u7B49 &amp;&amp; key \u5DF2\u5B58\u5728 &amp; key != null &amp; key \u76F8\u7B49</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
              <span class="token comment">// 14\u3001\u4F7F\u7528\u65B0\u5143\u7D20\u66FF\u6362\u65E7\u5143\u7D20</span>
            e <span class="token operator">=</span> p<span class="token punctuation">;</span>
          <span class="token comment">// 15\u3001\u5426\u5219\uFF0C\u67E5\u770B\u8BE5\u8282\u70B9\u662F\u5426\u5DF2\u6811\u5316\uFF0C\u82E5\u5DF2\u7ECF\u6811\u5316\uFF0C\u8C03\u7528 putTreeVal()</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
            e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
              <span class="token comment">// 16\u3001\u6CA1\u6709\u6811\u5316\uFF0C\u5C06\u8981\u6DFB\u52A0\u7684\u65B0\u5143\u7D20\u6DFB\u52A0\u5230\u5DF2\u5B58\u5728\u7684\u8001\u5143\u7D20\u7684next\uFF08\u5C3E\u63D2\u6CD5\u521B\u5EFA\u94FE\u8868\uFF09</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token comment">// if p.next == null\uFF0C\u8BF4\u660Ep\u662F\u94FE\u8868\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u8282\u70B9</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                      <span class="token comment">// 17\u3001\u68C0\u67E5\u94FE\u8868\u957F\u5EA6\u662F\u5426\u8FBE\u5230 TREEIFY_THRESHOLD\uFF08\u6811\u5316\u9600\u503C\uFF09</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// -1 for 1st</span>
                          <span class="token comment">// 18\u3001\u8FBE\u5230 TREEIFY_THRESHOLD \u5219\u6811\u5316</span>
                        <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                  <span class="token comment">// 19\u3001\u94FE\u8868\u4E2D\u7684\u5143\u7D20\u548C\u6DFB\u52A0\u7684\u65B0\u5143\u7D20 hash\u503C\u76F8\u7B49 &amp;&amp; key\u76F8\u7B49\uFF0C\u76F4\u63A5break</span>
                  <span class="token comment">// \u82E5\u53D1\u73B0\u76F8\u540C key \u5219\u7ED3\u675F\u5FAA\u73AF</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                p <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
          <span class="token comment">// 20\u3001\u6709\u91CD\u590D\u7684 key\uFF0C \u5219\u65B0\u503C\u66FF\u6362\u65E7\u503C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// existing mapping for key</span>
            <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent <span class="token operator">||</span> oldValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>size <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span>evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Initializes or doubles table size.  If null, allocates in
 * accord with initial capacity target held in field threshold.
 * Otherwise, because we are using power-of-two expansion, the
 * elements from each bin must either stay at same index, or move
 * with a power of two offset in the new table.
 *
 * @return the table
 */</span>
<span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 2\u3001\u7B2C\u4E00\u6B21\u521B\u5EFA\u65F6 oldTab = table is null</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTab <span class="token operator">=</span> table<span class="token punctuation">;</span>
      <span class="token comment">// 3\u3001\u7B2C\u4E00\u6B21\u521B\u5EFA oldCap = 0</span>
    <span class="token keyword">int</span> oldCap <span class="token operator">=</span> <span class="token punctuation">(</span>oldTab <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> oldTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      <span class="token comment">// 4\u3001threshold \u521D\u59CB\u503C = 0\uFF0C oldThr = 0</span>
    <span class="token keyword">int</span> oldThr <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
    <span class="token keyword">int</span> newCap<span class="token punctuation">,</span> newThr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldTab<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newCap <span class="token operator">=</span> oldCap <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> MAXIMUM_CAPACITY <span class="token operator">&amp;&amp;</span>
                 oldCap <span class="token operator">&gt;=</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span>
            newThr <span class="token operator">=</span> oldThr <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// double threshold</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldThr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// initial capacity was placed in threshold</span>
        newCap <span class="token operator">=</span> oldThr<span class="token punctuation">;</span>
      <span class="token comment">// 5\u3001\u5B9E\u4F8B\u5316HashMap\uFF0C\u4ECE\u4E0A\u9762\u76F4\u63A5\u8DF3\u5230\u8FD9\u4E00\u6B65</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>               <span class="token comment">// zero initial threshold signifies using defaults</span>
          <span class="token comment">// 6\u3001newCap = DEFAULT_INITIAL_CAPACITY = 16</span>
        newCap <span class="token operator">=</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">;</span>
          <span class="token comment">// 7\u3001newThr = 0.75 * 16</span>
        newThr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>DEFAULT_LOAD_FACTOR <span class="token operator">*</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newThr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>newCap <span class="token operator">*</span> loadFactor<span class="token punctuation">;</span>
        newThr <span class="token operator">=</span> <span class="token punctuation">(</span>newCap <span class="token operator">&lt;</span> MAXIMUM_CAPACITY <span class="token operator">&amp;&amp;</span> ft <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>MAXIMUM_CAPACITY <span class="token operator">?</span>
                  <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
      <span class="token comment">// 8\u3001threshold = newThr = 12</span>
    threshold <span class="token operator">=</span> newThr<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;rawtypes&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token comment">// 9\u3001\u4F7F\u7528 newCap = 16\uFF0C\u521B\u5EFA\u4E00\u4E2A\u5BB9\u91CF\u4E3A newCap \u7684 Node[]</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTab <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span>newCap<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// 10\u3001\u4E3A\u6210\u5458\u53D8\u91CF table \u8D4B\u503C</span>
    table <span class="token operator">=</span> newTab<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldTab <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> oldCap<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    newTab<span class="token punctuation">[</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> <span class="token punctuation">(</span>newCap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newTab<span class="token punctuation">,</span> j<span class="token punctuation">,</span> oldCap<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// preserve order</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> loHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hiHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hiTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
                    <span class="token keyword">do</span> <span class="token punctuation">{</span>
                        next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> oldCap<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                loHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">else</span>
                                loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            loTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                hiHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">else</span>
                                hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            hiTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        newTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> loHead<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        newTab<span class="token punctuation">[</span>j <span class="token operator">+</span> oldCap<span class="token punctuation">]</span> <span class="token operator">=</span> hiHead<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
      <span class="token comment">// 11\u3001 \u8FD4\u56DE newTab</span>
    <span class="token keyword">return</span> newTab<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Tree version of putVal.
 */</span>
<span class="token keyword">final</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span>
                               <span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token class-name">K</span> k<span class="token punctuation">,</span> <span class="token class-name">V</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> kc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> searched <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> root <span class="token operator">=</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">root</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> root<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> dir<span class="token punctuation">,</span> ph<span class="token punctuation">;</span> <span class="token class-name">K</span> pk<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ph <span class="token operator">=</span> p<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">&gt;</span> h<span class="token punctuation">)</span>
            dir <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ph <span class="token operator">&lt;</span> h<span class="token punctuation">)</span>
            dir <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pk <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> k <span class="token operator">||</span> <span class="token punctuation">(</span>k <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> k<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>pk<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> p<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>kc <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                  <span class="token punctuation">(</span>kc <span class="token operator">=</span> <span class="token function">comparableClassFor</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                 <span class="token punctuation">(</span>dir <span class="token operator">=</span> <span class="token function">compareComparables</span><span class="token punctuation">(</span>kc<span class="token punctuation">,</span> k<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>searched<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> q<span class="token punctuation">,</span> ch<span class="token punctuation">;</span>
                searched <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ch <span class="token operator">=</span> p<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                     <span class="token punctuation">(</span>q <span class="token operator">=</span> ch<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> k<span class="token punctuation">,</span> kc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>ch <span class="token operator">=</span> p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                     <span class="token punctuation">(</span>q <span class="token operator">=</span> ch<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> k<span class="token punctuation">,</span> kc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> q<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            dir <span class="token operator">=</span> <span class="token function">tieBreakOrder</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> xp <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> p<span class="token punctuation">.</span>left <span class="token operator">:</span> p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> xpn <span class="token operator">=</span> xp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">newTreeNode</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">,</span> xpn<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                xp<span class="token punctuation">.</span>left <span class="token operator">=</span> x<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                xp<span class="token punctuation">.</span>right <span class="token operator">=</span> x<span class="token punctuation">;</span>
            xp<span class="token punctuation">.</span>next <span class="token operator">=</span> x<span class="token punctuation">;</span>
            x<span class="token punctuation">.</span>parent <span class="token operator">=</span> x<span class="token punctuation">.</span>prev <span class="token operator">=</span> xp<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>xpn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>xpn<span class="token punctuation">)</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> x<span class="token punctuation">;</span>
            <span class="token function">moveRootToFront</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token function">balanceInsertion</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">/**
 * Replaces all linked nodes in bin at index for given hash unless
 * table is too small, in which case resizes instead.
 */</span>
<span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">treeifyBin</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> index<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&lt;</span> MIN_TREEIFY_CAPACITY<span class="token punctuation">)</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> tab<span class="token punctuation">[</span>index <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hd <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> tl <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> <span class="token function">replacementTreeNode</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tl <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                hd <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                p<span class="token punctuation">.</span>prev <span class="token operator">=</span> tl<span class="token punctuation">;</span>
                tl<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            tl <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> hd<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            hd<span class="token punctuation">.</span><span class="token function">treeify</span><span class="token punctuation">(</span>tab<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">/**
 * Forms tree of the nodes linked from this node.
 */</span>
<span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">treeify</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> root <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> next<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        next <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>x<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        x<span class="token punctuation">.</span>left <span class="token operator">=</span> x<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            x<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            x<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            root <span class="token operator">=</span> x<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">K</span> k <span class="token operator">=</span> x<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
            <span class="token keyword">int</span> h <span class="token operator">=</span> x<span class="token punctuation">.</span>hash<span class="token punctuation">;</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> kc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> root<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> dir<span class="token punctuation">,</span> ph<span class="token punctuation">;</span>
                <span class="token class-name">K</span> pk <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ph <span class="token operator">=</span> p<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">&gt;</span> h<span class="token punctuation">)</span>
                    dir <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ph <span class="token operator">&lt;</span> h<span class="token punctuation">)</span>
                    dir <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>kc <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                          <span class="token punctuation">(</span>kc <span class="token operator">=</span> <span class="token function">comparableClassFor</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                         <span class="token punctuation">(</span>dir <span class="token operator">=</span> <span class="token function">compareComparables</span><span class="token punctuation">(</span>kc<span class="token punctuation">,</span> k<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    dir <span class="token operator">=</span> <span class="token function">tieBreakOrder</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> xp <span class="token operator">=</span> p<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> p<span class="token punctuation">.</span>left <span class="token operator">:</span> p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    x<span class="token punctuation">.</span>parent <span class="token operator">=</span> xp<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                        xp<span class="token punctuation">.</span>left <span class="token operator">=</span> x<span class="token punctuation">;</span>
                    <span class="token keyword">else</span>
                        xp<span class="token punctuation">.</span>right <span class="token operator">=</span> x<span class="token punctuation">;</span>
                    root <span class="token operator">=</span> <span class="token function">balanceInsertion</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">moveRootToFront</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Returns a list of non-TreeNodes replacing those linked from
 * this node.
 */</span>
<span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">untreeify</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hd <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> tl <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> q <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> q <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> q <span class="token operator">=</span> q<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">replacementNode</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tl <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            hd <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            tl<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
        tl <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> hd<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Returns the value to which the specified key is mapped,
 * or {@code null} if this map contains no mapping for the key.
 *
 * &lt;p&gt;More formally, if this map contains a mapping from a key
 * {@code k} to a value {@code v} such that {@code (key==null ? k==null :
 * key.equals(k))}, then this method returns {@code v}; otherwise
 * it returns {@code null}.  (There can be at most one such mapping.)
 *
 * &lt;p&gt;A return value of {@code null} does not &lt;i&gt;necessarily&lt;/i&gt;
 * indicate that the map contains no mapping for the key; it&#39;s also
 * possible that the map explicitly maps the key to {@code null}.
 * The {@link #containsKey containsKey} operation may be used to
 * distinguish these two cases.
 *
 * @see #put(Object, Object)
 */</span>
<span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Returns &lt;tt&gt;true&lt;/tt&gt; if this map contains a mapping for the
 * specified key.
 *
 * @param   key   The key whose presence in this map is to be tested
 * @return &lt;tt&gt;true&lt;/tt&gt; if this map contains a mapping for the specified
 * key.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Removes the mapping for the specified key from this map if present.
 *
 * @param  key key whose mapping is to be removed from the map
 * @return the previous value associated with &lt;tt&gt;key&lt;/tt&gt;, or
 *         &lt;tt&gt;null&lt;/tt&gt; if there was no mapping for &lt;tt&gt;key&lt;/tt&gt;.
 *         (A &lt;tt&gt;null&lt;/tt&gt; return can also indicate that the map
 *         previously associated &lt;tt&gt;null&lt;/tt&gt; with &lt;tt&gt;key&lt;/tt&gt;.)
 */</span>
<span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">removeNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span>
        <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Removes all of the mappings from this map.
 * The map will be empty after this call returns.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
            tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Returns &lt;tt&gt;true&lt;/tt&gt; if this map maps one or more keys to the
 * specified value.
 *
 * @param value value whose presence in this map is to be tested
 * @return &lt;tt&gt;true&lt;/tt&gt; if this map maps one or more keys to the
 *         specified value
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">containsValue</span><span class="token punctuation">(</span><span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">V</span> v<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">==</span> value <span class="token operator">||</span>
                    <span class="token punctuation">(</span>value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br><span class="line-number">320</span><br><span class="line-number">321</span><br><span class="line-number">322</span><br><span class="line-number">323</span><br><span class="line-number">324</span><br><span class="line-number">325</span><br><span class="line-number">326</span><br><span class="line-number">327</span><br><span class="line-number">328</span><br><span class="line-number">329</span><br><span class="line-number">330</span><br><span class="line-number">331</span><br><span class="line-number">332</span><br><span class="line-number">333</span><br><span class="line-number">334</span><br><span class="line-number">335</span><br><span class="line-number">336</span><br><span class="line-number">337</span><br><span class="line-number">338</span><br><span class="line-number">339</span><br><span class="line-number">340</span><br><span class="line-number">341</span><br><span class="line-number">342</span><br><span class="line-number">343</span><br><span class="line-number">344</span><br><span class="line-number">345</span><br><span class="line-number">346</span><br><span class="line-number">347</span><br><span class="line-number">348</span><br><span class="line-number">349</span><br><span class="line-number">350</span><br><span class="line-number">351</span><br><span class="line-number">352</span><br><span class="line-number">353</span><br><span class="line-number">354</span><br><span class="line-number">355</span><br><span class="line-number">356</span><br><span class="line-number">357</span><br><span class="line-number">358</span><br><span class="line-number">359</span><br><span class="line-number">360</span><br><span class="line-number">361</span><br><span class="line-number">362</span><br><span class="line-number">363</span><br><span class="line-number">364</span><br><span class="line-number">365</span><br><span class="line-number">366</span><br><span class="line-number">367</span><br><span class="line-number">368</span><br><span class="line-number">369</span><br><span class="line-number">370</span><br><span class="line-number">371</span><br><span class="line-number">372</span><br><span class="line-number">373</span><br><span class="line-number">374</span><br><span class="line-number">375</span><br><span class="line-number">376</span><br><span class="line-number">377</span><br><span class="line-number">378</span><br><span class="line-number">379</span><br><span class="line-number">380</span><br><span class="line-number">381</span><br><span class="line-number">382</span><br><span class="line-number">383</span><br><span class="line-number">384</span><br><span class="line-number">385</span><br><span class="line-number">386</span><br><span class="line-number">387</span><br><span class="line-number">388</span><br><span class="line-number">389</span><br><span class="line-number">390</span><br><span class="line-number">391</span><br><span class="line-number">392</span><br><span class="line-number">393</span><br><span class="line-number">394</span><br><span class="line-number">395</span><br><span class="line-number">396</span><br><span class="line-number">397</span><br><span class="line-number">398</span><br><span class="line-number">399</span><br><span class="line-number">400</span><br><span class="line-number">401</span><br><span class="line-number">402</span><br><span class="line-number">403</span><br><span class="line-number">404</span><br><span class="line-number">405</span><br><span class="line-number">406</span><br><span class="line-number">407</span><br><span class="line-number">408</span><br><span class="line-number">409</span><br><span class="line-number">410</span><br><span class="line-number">411</span><br><span class="line-number">412</span><br><span class="line-number">413</span><br><span class="line-number">414</span><br><span class="line-number">415</span><br><span class="line-number">416</span><br><span class="line-number">417</span><br><span class="line-number">418</span><br><span class="line-number">419</span><br><span class="line-number">420</span><br><span class="line-number">421</span><br><span class="line-number">422</span><br><span class="line-number">423</span><br><span class="line-number">424</span><br><span class="line-number">425</span><br><span class="line-number">426</span><br><span class="line-number">427</span><br><span class="line-number">428</span><br><span class="line-number">429</span><br><span class="line-number">430</span><br><span class="line-number">431</span><br><span class="line-number">432</span><br><span class="line-number">433</span><br><span class="line-number">434</span><br><span class="line-number">435</span><br><span class="line-number">436</span><br><span class="line-number">437</span><br><span class="line-number">438</span><br><span class="line-number">439</span><br><span class="line-number">440</span><br><span class="line-number">441</span><br><span class="line-number">442</span><br><span class="line-number">443</span><br><span class="line-number">444</span><br><span class="line-number">445</span><br><span class="line-number">446</span><br><span class="line-number">447</span><br><span class="line-number">448</span><br><span class="line-number">449</span><br><span class="line-number">450</span><br><span class="line-number">451</span><br><span class="line-number">452</span><br><span class="line-number">453</span><br><span class="line-number">454</span><br><span class="line-number">455</span><br><span class="line-number">456</span><br><span class="line-number">457</span><br><span class="line-number">458</span><br><span class="line-number">459</span><br><span class="line-number">460</span><br><span class="line-number">461</span><br><span class="line-number">462</span><br><span class="line-number">463</span><br><span class="line-number">464</span><br><span class="line-number">465</span><br><span class="line-number">466</span><br><span class="line-number">467</span><br><span class="line-number">468</span><br><span class="line-number">469</span><br><span class="line-number">470</span><br><span class="line-number">471</span><br><span class="line-number">472</span><br><span class="line-number">473</span><br><span class="line-number">474</span><br><span class="line-number">475</span><br><span class="line-number">476</span><br><span class="line-number">477</span><br><span class="line-number">478</span><br><span class="line-number">479</span><br><span class="line-number">480</span><br><span class="line-number">481</span><br><span class="line-number">482</span><br><span class="line-number">483</span><br><span class="line-number">484</span><br><span class="line-number">485</span><br><span class="line-number">486</span><br><span class="line-number">487</span><br><span class="line-number">488</span><br><span class="line-number">489</span><br><span class="line-number">490</span><br><span class="line-number">491</span><br><span class="line-number">492</span><br><span class="line-number">493</span><br><span class="line-number">494</span><br><span class="line-number">495</span><br><span class="line-number">496</span><br><span class="line-number">497</span><br><span class="line-number">498</span><br><span class="line-number">499</span><br><span class="line-number">500</span><br><span class="line-number">501</span><br><span class="line-number">502</span><br><span class="line-number">503</span><br><span class="line-number">504</span><br><span class="line-number">505</span><br><span class="line-number">506</span><br><span class="line-number">507</span><br><span class="line-number">508</span><br><span class="line-number">509</span><br><span class="line-number">510</span><br><span class="line-number">511</span><br><span class="line-number">512</span><br><span class="line-number">513</span><br><span class="line-number">514</span><br><span class="line-number">515</span><br><span class="line-number">516</span><br><span class="line-number">517</span><br><span class="line-number">518</span><br><span class="line-number">519</span><br><span class="line-number">520</span><br><span class="line-number">521</span><br><span class="line-number">522</span><br><span class="line-number">523</span><br><span class="line-number">524</span><br><span class="line-number">525</span><br><span class="line-number">526</span><br><span class="line-number">527</span><br><span class="line-number">528</span><br><span class="line-number">529</span><br><span class="line-number">530</span><br><span class="line-number">531</span><br><span class="line-number">532</span><br><span class="line-number">533</span><br><span class="line-number">534</span><br><span class="line-number">535</span><br><span class="line-number">536</span><br><span class="line-number">537</span><br><span class="line-number">538</span><br><span class="line-number">539</span><br><span class="line-number">540</span><br><span class="line-number">541</span><br></div></div><br><p><strong>JDK 1.7 \u548C JDK 1.8 HashMap \u5B9E\u4F8B\u5316\u7684\u533A\u522B</strong></p><p>1\uFF09JDK 1.7 \u5B9E\u4F8B\u5316\u5E95\u5C42\u521B\u5EFA\u9ED8\u8BA4\u957F\u5EA6\u4E3A16\u7684<code>Entry[]</code>\u6570\u7EC4</p><p>2\uFF09JDK 1.8 \u5B9E\u4F8B\u5316\u7684\u65F6\u5019\uFF0C\u5E95\u5C42\u521B\u5EFA\u7684\u662F\u4E00\u4E2A\u7A7A\u5BF9\u8C61\uFF0C\u9996\u6B21\u8C03\u7528<code>put()</code>\u65B9\u6CD5\u65F6\uFF0C\u5E95\u5C42\u521B\u5EFA\u9ED8\u8BA4\u957F\u5EA6\u4E3A16\u7684<code>Node[]</code></p><p>3\uFF09JDK 1.7 \u5E95\u5C42\u7ED3\u6784\u53EA\u6709<strong>\u6570\u7EC4+\u94FE\u8868</strong>\uFF0CJDK 1.8 \u7684\u5E95\u5C42\u7ED3\u6784\u4E3A<strong>\u6570\u7EC4+\u94FE\u8868+\u7EA2\u9ED1\u6811</strong></p><p>4\uFF09JDK 1.7 \u5C06\u5143\u7D20\u63D2\u5165\u94FE\u8868\u65F6\u91C7\u7528\u7684\u662F\u5934\u63D2\u6CD5\uFF0CJDK 1.8 \u91C7\u7528\u7684\u662F\u5C3E\u63D2\u6CD5</p><br><blockquote><p>\u4E3A\u4EC0\u4E48\u8981\u5C06\u94FE\u8868\u6811\u5316\u2753</p></blockquote><p>\u94FE\u8868\u6269\u5BB9\u65F6\u5BB9\u6613\u9020\u6210\u7684<strong>\u94FE\u8868\u8FC7\u6DF1</strong>\u7684\u95EE\u9898</p><br><blockquote><p>\u4E3A\u4F55\u9009\u62E9\u7EA2\u9ED1\u6811\u800C\u4E0D\u662F\u4E8C\u53C9\u67E5\u627E/\u6392\u5E8F/\u641C\u7D22\u6811\u2753</p></blockquote><p>\u4E8C\u53C9\u67E5\u627E\u6811\u5728\u7279\u6B8A\u60C5\u51B5\u4E0B\u4F1A\u53D8\u6210\u4E00\u6761\u7EBF\u6027\u7ED3\u6784\uFF0C\u6BD4\u5982\u4E00\u76F4\u63D2\u5165\u5DE6\u8FB9\u6216\u53F3\u8FB9\uFF0C\u8FD9\u5C31\u8DDF\u539F\u6765\u7684\u94FE\u8868\u7ED3\u6784\u4E00\u6837\u4E86\u3002</p><p>\u7EA2\u9ED1\u6811\u672C\u8D28\u662F\u4E00\u79CD<strong>\u81EA\u5E73\u8861</strong>\u4E8C\u53C9\u67E5\u627E\u6811\uFF0C\u5B83\u7684\u5DE6\u53F3\u5B50\u6811\u9AD8\u5EA6\u53EF\u80FD\u5927\u4E8E1\uFF0C\u4E25\u683C\u610F\u4E49\u4E0A\u6765\u8BB2\uFF0C\u7EA2\u9ED1\u6811\u5E76\u4E0D\u662F\u5B8C\u5168\u5E73\u8861\u7684\u4E8C\u53C9\u6811\u3002\u9009\u62E9\u7EA2\u9ED1\u6811\u5728\u63D2\u5165\u65B0\u6570\u636E\u4E4B\u540E\u53EF\u80FD\u9700\u8981\u901A\u8FC7\u5DE6\u65CB\uFF0C\u53F3\u65CB\uFF0C\u53D8\u8272\u8C03\u6574\u6765\u4FDD\u6301\u5E73\u8861\u3002\u4E3A\u4E86\u4FDD\u6301\u5E73\u8861\uFF0C\u4F7F\u7528\u7EA2\u9ED1\u6811\u662F\u8981\u4ED8\u51FA\u8D44\u6E90\u4EE3\u4EF7\u7684\u3002\u4F46\u662F\u8D44\u6E90\u635F\u8017\u4EE3\u4EF7\u6BD4\u904D\u5386\u7EBF\u6027\u94FE\u8868\u8981\u5C11\uFF0C\u4E4B\u6240\u4EE5\u5F15\u5165\u6811\u5316\u548C\u975E\u6811\u5316\u9600\u503C\uFF0C\u56E0\u4E3A\u6B64\u65F6\u5B58\u50A8\u7684\u5143\u7D20\u6570\u91CF\u6839\u672C\u4E0D\u9700\u8981\u4F7F\u7528\u7EA2\u9ED1\u6811\u8FD9\u4E00\u7ED3\u6784\uFF0C\u5F15\u5165\u53CD\u800C\u4F1A\u6D6A\u8D39\u8D44\u6E90</p><br><p><strong>\u7EA2\u9ED1\u6811</strong></p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u5B9E\u5217\uFF0C\u6BCF\u6B21\u6570\u636E\u63D2\u5165\u7684\u65F6\u5019\uFF0C\u90FD\u662F\u5148\u5224\u65AD\u662F\u5426\u6BD4\u6839\u8282\u70B9\u5927 \uFF08\u5F53\u524D\u6570\u636E &gt; \u6839\u8282\u70B9 \uFF1F \u4ECE\u53F3\u8FB9\u63D2\u5165 \uFF1A \u4ECE\u5DE6\u8FB9\u63D2\u5165 \uFF09 \u3002\u800C\u4E14\u63D2\u5165\u90FD\u662F\u4ECE\u6700\u4E0B\u9762\u7684\u53F6\u5B50\u8282\u70B9\u505A\u6BD4\u8F83\u518D\u9009\u62E9\u662F\u5426\u5728\u53F6\u5B50\u8282\u70B9\u7684\u5DE6\u8FB9\u8FD8\u662F\u53F3\u8FB9\u3002</p><p><img src="`+l+'" alt=""></p><p>\u8FD9\u91CC\u4FBF\u4F1A\u4EA7\u751F\u4E00\u4E2A\u7F3A\u70B9\uFF1A\u6811\u7684\u9AD8\u5EA6\u95EE\u9898\u3002\u6570\u636E\u8D8A\u591A\uFF0C\u9AD8\u5EA6\u8D8A\u5927\u3002\u8FD9\u6837\u5BFC\u81F4\u67E5\u8BE2\u6700\u4E0B\u9762\u7684\u53F6\u5B50\u8282\u70B9\u8017\u65F6\u8FC7\u957F\u3002\u4E8E\u662F\u4FBF\u51FA\u73B0\u4E86\u7EA2\u9ED1\u6811 \u3002</p><p><img src="'+u+'" alt=""></p><p>\u7EA2\u9ED1\u6811\u4E2D\u7EF4\u62A4\u4E86\u4E24\u79CD\u4E0D\u540C\u7684\u989C\u8272\uFF1A\u9ED1\u8272\u548C\u7EA2\u8272</p><br><p><strong>\u7EA2\u9ED1\u6811\u7279\u6027</strong></p><p>\u2460 \u6BCF\u4E2A\u8282\u70B9\u8981\u4E48\u662F\u7EA2\u8272\uFF0C\u8981\u4E48\u662F\u9ED1\u8272\u3002</p><p>\u2461 <mark><strong>\u6839\u8282\u70B9\u5FC5\u987B\u4E3A\u9ED1\u8272</strong></mark></p><p>\u2462 \u6BCF\u4E2A\u53F6\u8282\u70B9\uFF08NULL\u8282\u70B9\uFF0C\u7A7A\u8282\u70B9\uFF09\u662F\u9ED1\u8272\u7684</p><p>\u2463 \u7EA2\u8272\u8282\u70B9\u4E0D\u53EF\u4EE5\u8FDE\u7EED \uFF08\u7EA2\u8272\u8282\u70B9\u7684\u5B69\u5B50\u4E0D\u80FD\u4E3A\u7EA2\u8272\uFF09</p><p>\u2464 \u5BF9\u4E8E\u6BCF\u4E2A\u8282\u70B9\uFF0C\u4ECE\u8BE5\u8282\u70B9\u5230 null \uFF08\u6811\u5C3E\u7AEF\uFF09\u7684\u4EFB\u4F55\u8DEF\u5F84\uFF0C\u90FD\u542B\u6709\u76F8\u540C\u4E2A\u6570\u7684\u9ED1\u8272\u8282\u70B9</p><p><strong>\u7EA2\u9ED1\u6811\u4ECE\u6839\u5230\u53F6\u5B50\u7684\u6700\u957F\u8DEF\u5F84\u4E0D\u4F1A\u8D85\u8FC7\u6700\u77ED\u8DEF\u5F84\u7684\u4E24\u500D</strong>\uFF0C\u7EA2\u9ED1\u6811\u53EA\u662F\u8FD1\u4F3C\u7684\u5E73\u8861\u4E8C\u53C9\u6811\uFF0C\u727A\u7272\u4E86\u4E9B\u8BB8\u5E73\u8861\u6027\u6362\u6765\u7684\u662F\u589E\u5220\u64CD\u4F5C\u7684\u7B80\u5355\u6027</p><br><blockquote><p>\u76F4\u89C2\u4E0A\u770B\u7EA2\u9ED1\u6811\u7684\u63D2\u5165\u548C\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u63D2\u5165\u76F8\u4F3C\uFF0C\u53EA\u662F\u7EF4\u62A4\u4E86\u4E24\u79CD\u4E0D\u540C\u989C\u8272\u800C\u4E14\uFF0C\u4E3A\u4EC0\u4E48\u4F1A\u8BF4\u662F\u4E00\u4E2A\u5E73\u8861\u4E8C\u53C9\u6811\u5462\u2753</p></blockquote><p>\u7EA2\u9ED1\u6811\u5F15\u5165\u4E86\u4E00\u4E9B\u5E73\u8861\u64CD\u4F5C\uFF1A<strong>\u53D8\u8272\u3001\u65CB\u8F6C</strong>\u3002\u65CB\u8F6C\u53C8\u5206\u4E3A\uFF1A<strong>\u5DE6\u65CB\u3001\u53F3\u65CB</strong></p><br><p><strong>\u65CB\u8F6C</strong></p><p>1\uFF09\u5DE6\u65CB\uFF0C\u81EA\u5DF1\u7684\u53F3\u8282\u70B9\u6210\u4E3A\u81EA\u5DF1\u7684\u7236\u8282\u70B9\u3002\u53F3\u8282\u70B9\u7684\u6700\u5DE6\u8282\u70B9\u6210\u4E3A\u4E86\u81EA\u5DF1\u7684\u53F3\u8282\u70B9</p><p><img src="'+r+`" alt=""></p><p>2\uFF09\u53F3\u65CB\uFF0C\u81EA\u5DF1\u7684\u5DE6\u8282\u70B9\u6210\u4E3A\u81EA\u5DF1\u7684\u7236\u8282\u70B9\u3002\u5DE6\u8282\u70B9\u7684\u6700\u53F3\u8282\u70B9\u6210\u4E3A\u81EA\u5DF1\u7684\u5DE6\u8282\u70B9\u3002</p><br><p><strong>\u53D8\u8272</strong></p><p>\u9ED1\u7684\u53D8\u6210\u7EA2\u7684\uFF0C\u7EA2\u7684\u53D8\u6210\u9ED1\u7684</p><br><p><strong>\u5143\u7D20\u6DFB\u52A0</strong></p><p>1\uFF09\u9996\u5148\uFF0C\u5C06\u7EA2\u9ED1\u6811\u5F53\u4F5C\u4E00\u9897\u4E8C\u53C9\u67E5\u627E\u6811\uFF0C\u5C06\u8282\u70B9\u63D2\u5165</p><p>2\uFF09\u7136\u540E\uFF0C\u5C06\u8282\u70B9\u7740\u8272\u4E3A\u7EA2\u8272\uFF1B\u6700\u540E\uFF0C\u901A\u8FC7\u65CB\u8F6C\u548C\u91CD\u65B0\u7740\u8272\u7B49\u65B9\u6CD5\u6765\u4FEE\u6B63\u8BE5\u6811\uFF0C\u4F7F\u4E4B\u91CD\u65B0\u6210\u4E3A\u4E00\u9897\u7EA2\u9ED1\u6811\u3002</p><blockquote><p>\u4E3A\u4EC0\u4E48\u5C06\u63D2\u5165\u7684\u8282\u70B9\u7740\u8272\u4E3A\u7EA2\u8272\u5462\u2753</p></blockquote><p>\u5C06\u63D2\u5165\u7684\u8282\u70B9\u7740\u8272\u4E3A\u7EA2\u8272\uFF0C\u4E0D\u4F1A\u8FDD\u80CC<mark>\u7279\u6027\u2464</mark>\u3002\u5C11\u8FDD\u80CC\u4E00\u6761\u7279\u6027\uFF0C\u5C31\u610F\u5473\u7740\u6211\u4EEC\u9700\u8981\u5904\u7406\u7684\u60C5\u51B5\u8D8A\u5C11\u3002\u63A5\u4E0B\u6765\uFF0C\u5C31\u8981\u52AA\u529B\u7684\u8BA9\u8FD9\u68F5\u6811\u6EE1\u8DB3\u5176\u5B83\u6027\u8D28\u5373\u53EF</p><p>3\uFF09\u65CB\u8F6C\u4E0E\u53D8\u8272</p><ul><li><mark>\u7279\u6027\u2460</mark>\uFF0C\u4E0D\u4F1A\u8FDD\u80CC\u3002\u56E0\u4E3A\u6211\u4EEC\u5DF2\u7ECF\u5C06\u5B83\u6D82\u6210\u7EA2\u8272\u4E86\uFF1B</li><li><mark>\u7279\u6027\u2461</mark>\uFF0C\u4E0D\u4F1A\u8FDD\u80CC\u3002\u5728\u7B2C\u4E00\u6B65\u4E2D\uFF0C\u6211\u4EEC\u662F\u5C06\u7EA2\u9ED1\u6811\u5F53\u4F5C\u4E8C\u53C9\u67E5\u627E\u6811\uFF0C\u7136\u540E\u6267\u884C\u7684\u63D2\u5165\u64CD\u4F5C\u3002\u800C\u6839\u636E\u4E8C\u53C9\u67E5\u627E\u6570\u7684\u7279\u70B9\uFF0C\u63D2\u5165\u64CD\u4F5C\u4E0D\u4F1A\u6539\u53D8\u6839\u8282\u70B9\u3002\u6240\u4EE5\u6839\u8282\u70B9\u4ECD\u7136\u662F\u9ED1\u8272\uFF1B</li><li><mark>\u7279\u6027\u2462</mark>\uFF0C\u4E0D\u4F1A\u8FDD\u80CC\u3002\u8FD9\u91CC\u7684\u53F6\u5B50\u8282\u70B9\u662F\u6307\u7684\u7A7A\u53F6\u5B50\u8282\u70B9\uFF0C\u63D2\u5165\u975E\u7A7A\u8282\u70B9\u5E76\u4E0D\u4F1A\u5BF9\u5B83\u4EEC\u9020\u6210\u5F71\u54CD\uFF1B</li><li><mark><span style="color:red;">\u7279\u6027\u2463\uFF0C\u7EA2\u8272\u8282\u70B9\u4E0D\u53EF\u4EE5\u8FDE\u7EED\uFF0C\u662F\u6709\u53EF\u80FD\u8FDD\u80CC\u7684</span></mark></li></ul><br><p>\u6839\u636E\u4EE5\u4E0B\u4E09\u79CD\u60C5\u51B5\u8FDB\u884C\u7740\u8272\uFF1A</p><p>1\u300D\u63D2\u5165\u7684\u8282\u70B9\u662F\u6839\u8282\u70B9\u3002\u76F4\u63A5\u628A\u6B64\u8282\u70B9\u6D82\u4E3A\u9ED1\u8272\uFF1B</p><p>2\u300D\u88AB\u63D2\u5165\u7684\u8282\u70B9\u7684\u7236\u8282\u70B9\u662F\u9ED1\u8272\u3002\u4EC0\u4E48\u4E5F\u4E0D\u9700\u8981\u505A\u3002\u8282\u70B9\u88AB\u63D2\u5165\u540E\uFF0C\u4ECD\u7136\u662F\u7EA2\u9ED1\u6811\uFF1B</p><p>3\u300D\u88AB\u63D2\u5165\u7684\u8282\u70B9\u7684\u7236\u8282\u70B9\u662F\u7EA2\u8272\u3002\u90A3\u4E48\uFF0C\u8BE5\u60C5\u51B5\u4E0E\u7EA2\u9ED1\u6811\u7684<mark>\u7279\u6027\u2464</mark>\u76F8\u51B2\u7A81\u3002\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u88AB\u63D2\u5165\u8282\u70B9\u662F\u4E00\u5B9A\u5B58\u5728\u975E\u7A7A\u7956\u7236\u8282\u70B9\u7684\u3002\u8FDB\u4E00\u6B65\u7684\u8BB2\uFF0C\u88AB\u63D2\u5165\u8282\u70B9\u4E5F\u4E00\u5B9A\u5B58\u5728\u53D4\u53D4\u8282\u70B9\uFF08\u5373\u4F7F\u53D4\u53D4\u8282\u70B9\u4E3A\u7A7A\uFF0C\u6211\u4EEC\u4E5F\u89C6\u4E4B\u4E3A\u5B58\u5728\uFF0C\u7A7A\u8282\u70B9\u672C\u8EAB\u5C31\u662F\u9ED1\u8272\u8282\u70B9\uFF09\u3002\u7406\u89E3\u8FD9\u70B9\u4E4B\u540E\uFF0C\u6211\u4EEC\u4F9D\u636E&quot;\u53D4\u53D4\u8282\u70B9\u7684\u60C5\u51B5&quot;\uFF0C\u5C06\u8FD9\u79CD\u60C5\u51B5\u8FDB\u4E00\u6B65\u5212\u5206\u4E3A3\u79CD\u60C5\u51B5\u3002<strong>\u4E09\u79CD\u60C5\u51B5\u7684\u6838\u5FC3\u601D\u60F3\u90FD\u662F\uFF1A\u5C06\u7EA2\u8272\u7684\u8282\u70B9\u79FB\u5230\u6839\u8282\u70B9\uFF0C\u7136\u540E\u5C06\u6839\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272</strong></p><table><thead><tr><th></th><th>\u73B0\u8C61\u8BF4\u660E</th><th>\u5904\u7406\u7B56\u7565</th></tr></thead><tbody><tr><td>Case 1</td><td>\u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9\u662F\u7EA2\u8272\u7684\uFF0C\u53D4\u53D4\u8282\u70B9\u4E5F\u662F\u7EA2\u8272\u7684</td><td>1\u3001\u5C06\u7236\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272 <br>2\u3001\u5C06\u53D4\u53D4\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272 <br>3\u3001\u5C06\u7956\u7236\u8282\u70B9\u8BBE\u4E3A\u5F53\u524D\u8282\u70B9\uFF08\u7EA2\u8272\u8282\u70B9\uFF09\u3002\u4E4B\u540E\u7EE7\u7EED\u5BF9\u201C\u5F53\u524D\u8282\u70B9\u201D\u8FDB\u884C\u64CD\u4F5C</td></tr><tr><td>Case 2</td><td>\u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9\u662F\u7EA2\u8272\u7684\uFF0C\u53D4\u53D4\u8282\u70B9\u662F\u9ED1\u8272\u7684\uFF0C\u5F53\u524D\u8282\u70B9\u662F\u7236\u8282\u70B9\u7684\u5DE6\u5B69\u5B50</td><td>1\u3001\u5C06\u7236\u8282\u70B9\u4F5C\u4E3A\u65B0\u7684\u5F53\u524D\u8282\u70B9<br>2\u3001\u4EE5\u201C\u65B0\u7684\u5F53\u524D\u8282\u70B9\u201D\u4E3A\u652F\u70B9\u8FDB\u884C\u5DE6\u65CB</td></tr><tr><td>Case 3</td><td>\u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9\u662F\u7EA2\u8272\u7684\uFF0C\u53D4\u53D4\u8282\u70B9\u662F\u9ED1\u8272\u7684\uFF0C\u5F53\u524D\u8282\u70B9\u662F\u7236\u8282\u70B9\u7684\u53F3\u5B69\u5B50</td><td>1\u3001\u5C06\u7236\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272<br>2\u3001\u5C06\u7956\u7236\u8282\u70B9\u8BBE\u4E3A\u7EA2\u8272<br>3\u3001\u4EE5\u7956\u7236\u8282\u70B9\u4E3A\u652F\u70B9\u8FDB\u884C\u53F3\u65CB</td></tr></tbody></table><blockquote><p>\u7EA2\u9ED1\u6811\u66F4\u591A\u7EC6\u8282\u7A0D\u540E\u518D\u8FDB\u884C\u8865\u5145\u2026</p></blockquote><br><h4 id="collections-\u7C7B" tabindex="-1">Collections \u7C7B <a class="header-anchor" href="#collections-\u7C7B" aria-hidden="true">#</a></h4><blockquote><p>Collections \u662F\u4E00\u4E2A\u64CD\u4F5C Set\u3001List \u548C Map \u7B49\u96C6\u5408\u7684\u5DE5\u5177\u7C7B</p></blockquote><br><p><strong><u>1 - <code>copy()</code></u></strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// copy\u65B9\u6CD5\u7684\u4F7F\u7528</span>
<span class="token class-name">List</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">465</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">798</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u9519\u8BEF\u65B9\u5F0F</span>
<span class="token comment">// \u62A5\u5F02\u5E38 IndexOutOfBoundException</span>
<span class="token comment">// \u56E0\u4E3A dest \u9ED8\u8BA4\u957F\u5EA6\u4E3A0</span>
<span class="token comment">// List dest = new ArrayList();</span>
<span class="token comment">// Collections.copy(dest,list);</span>

<span class="token comment">// \u6B63\u786E\u65B9\u5F0F</span>
<span class="token class-name">List</span> dest <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>dest<span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><br><p><strong><u>2 - <code>synchronizedList() &amp; synchronizedMap() &amp; synchronizedSet()</code></u></strong></p><p>Collections \u7C7B\u4E2D\u63D0\u4F9B\u4E86\u591A\u4E2A\u7EBF\u7A0B\u5B89\u5168\u7684\u65B9\u6CD5\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u53EF\u5C06\u6307\u5B9A\u96C6\u5408\u5305\u88C5\u6210\u7EBF\u7A0B\u540C\u6B65\u7684\u96C6\u5408\uFF0C\u4ECE\u800C\u89E3\u51B3\u591A\u7EBF\u7A0B\u5E76\u53D1\u8BBF\u95EE\u96C6\u5408\u65F6\u7684\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898</p><div class="language-java line-numbers-mode"><pre><code><span class="token class-name">List</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u540C\u6837\u8FD8\u6709 synchronizedMap();</span>
<span class="token comment">// \u6B64\u65F6 newList \u5C31\u662F\u7EBF\u7A0B\u5B89\u5168\u7684</span>
<span class="token class-name">List</span> newList <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">synchronizedList</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>Java \u96C6\u5408\u6846\u67B6\u8FD8\u5269\u4E0B\u4E00\u4E9B\u5185\u5BB9\u7A0D\u540E\u8FDB\u884C\u8865\u5145\u2026</p></blockquote><br><br><h3 id="\u53CD\u5C04" tabindex="-1">\u53CD\u5C04 <a class="header-anchor" href="#\u53CD\u5C04" aria-hidden="true">#</a></h3><blockquote><p>Java \u53CD\u5C04\u673A\u5236\u80FD\u5728\u7A0B\u5E8F\u8FD0\u884C\u4E2D\uFF0C\u5BF9\u4E8E\u4EFB\u610F\u4E00\u4E2A\u7C7B\uFF0C\u90FD\u80FD\u591F<strong>\u83B7\u53D6/\u64CD\u4F5C</strong>\u8FD9\u4E2A\u7C7B\u7684<strong>\u6240\u6709\u5C5E\u6027\u548C\u65B9\u6CD5</strong></p></blockquote><p>\u52A8\u6001\u83B7\u53D6\u7C7B\u4FE1\u606F\u4E3B\u8981\u6709\u4E24\u79CD\u65B9\u5F0F\uFF1A</p><p>\u4E00\u79CD\u662F<strong>\u4F20\u7EDF\u7684</strong> <code>RRIT\uFF08Run-Time Type Identification\uFF09</code>\uFF0C<strong>\u8FD0\u884C\u65F6\u7C7B\u578B\u8BC6\u522B</strong>\uFF0C\u662F\u5728\u8FD0\u884C\u65F6\u8BC6\u522B\u4E00\u4E2A\u5BF9\u8C61\u7684\u7C7B\u578B\u548C\u7C7B\u7684\u4FE1\u606F\uFF0C\u5B83\u5047\u5B9A\u6211\u4EEC\u5728\u7F16\u8BD1\u65F6\u5DF2\u7ECF\u77E5\u9053\u4E86\u6240\u6709\u7684\u7C7B\u578B\uFF1B</p><p>\u53E6\u4E00\u79CD\u662F<strong>\u53CD\u5C04\u673A\u5236</strong>\uFF0C\u5B83\u5141\u8BB8\u6211\u4EEC\u5728\u8FD0\u884C\u65F6\u89E3\u6790\u548C\u4F7F\u7528\u7C7B\u7684\u4FE1\u606F\u3002<strong>\u53CD\u5C04\u5C31\u662F\u628A Java \u7C7B\u4E2D\u7684\u5404\u79CD\u6210\u5206\uFF08\u6210\u5458\u53D8\u91CF\u3001\u65B9\u6CD5\u3001\u6784\u9020\u65B9\u6CD5\u3001\u5305\u7B49\u4FE1\u606F\uFF09\u6620\u5C04\u6210\u4E00\u4E2A\u4E2A\u7684 Java \u5BF9\u8C61</strong></p><br><p><strong>\u4E00\u3001Class \u7C7B</strong></p><p>1\u3001Class \u7C7B\u4E5F\u662F\u7C7B\u7684\u4E00\u79CD\uFF0C\u4E0E<code>class</code>\u5173\u952E\u5B57\u4E0D\u4E00\u6837</p><p>2\u3001\u624B\u52A8\u7F16\u5199\u7684\u7C7B\u5728\u7ECF\u8FC7\u7F16\u8BD1\u540E\u4F1A\u4EA7\u751F\u4E00\u4E2A Class \u5BF9\u8C61\uFF0C\u8868\u793A\u521B\u5EFA\u7684\u7C7B\u7684\u7C7B\u578B\u4FE1\u606F\uFF0C\u8FD9\u4E2A Class \u5BF9\u8C61\u4FDD\u5B58\u5728\u540C\u540D\u7684<code>.class</code>\u6587\u4EF6\u4E2D\uFF08\u5B57\u8282\u7801\u6587\u4EF6\uFF09</p><p>3\u3001\u6BCF\u4E2A\u901A\u8FC7\u5173\u952E\u5B57<code>class</code>\u6807\u8BC6\u7684\u7C7B\uFF0C\u5728\u5185\u5B58\u4E2D<strong>\u6709\u4E14\u53EA\u6709\u4E00\u4E2A</strong>\u4E0E\u4E4B\u5BF9\u5E94\u7684 Class \u5BF9\u8C61\uFF0C\u6765\u63CF\u8FF0\u5176\u7C7B\u578B\u4FE1\u606F\u3002\u65E0\u8BBA\u521B\u5EFA\u591A\u5C11\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u5176\u4F9D\u636E\u7684\u90FD\u662F\u7528\u540C\u4E00\u4E2A Class \u5BF9\u8C61</p><p>4\u3001Class \u7C7B\u53EA\u6709\u79C1\u6709\u6784\u9020\u51FD\u6570\uFF0C\u56E0\u6B64\u5BF9\u5E94 Class \u5BF9\u8C61\u53EA\u80FD\u7531 JVM \u521B\u5EFA\u548C\u52A0\u8F7D</p><p>5\u3001Class \u7C7B\u5BF9\u8C61\u7684\u4F5C\u7528\u662F<strong>\u8FD0\u884C\u65F6\u63D0\u4F9B/\u83B7\u53D6\u67D0\u4E2A\u5BF9\u8C61\u7684\u7C7B\u578B\u4FE1\u606F</strong>\uFF0C\u8FD9\u70B9\u5BF9\u4E8E\u53CD\u5C04\u6280\u672F\u5F88\u91CD\u8981</p><br><p><strong>\u4E8C\u3001\u7C7B\u52A0\u8F7D\u6D41\u7A0B</strong></p><p>1\u3001\u7F16\u8BD1\u5668\u5C06<code>.java</code>\u6587\u4EF6\u7F16\u8BD1\u6210<code>.class</code>\u5B57\u8282\u7801\u6587\u4EF6\u4E4B\u540E\uFF0CJVM \u5728\u6267\u884C\u8FC7\u7A0B\u4E2D\u4F1A\u5229\u7528**\u7C7B\u52A0\u8F7D\u5668\uFF08<code>Class Loader</code>\uFF09**\u52A8\u6001\u52A0\u8F7D<code>.class</code>\u6587\u4EF6\uFF0CJVM \u5728\u7B2C\u4E00\u6B21\u8BFB\u53D6\u5230\u4E00\u4E2A<code>.class</code>\u7C7B\u578B\u65F6\uFF0C\u5C31\u4F1A\u5C06\u5176\u52A0\u8F7D\u8FDB\u5185\u5B58\u3002</p><p>2\u3001JVM \u5728\u6267\u884C Java \u7A0B\u5E8F\u7684\u65F6\u5019\uFF0C\u5E76\u4E0D\u662F\u4E00\u6B21\u6027\u628A\u6240\u6709\u7528\u5230\u7684<code>.class</code>\u5168\u90E8\u52A0\u8F7D\u5230\u5185\u5B58\uFF0C\u800C\u662F\u7B2C\u4E00\u6B21\u9700\u8981\u7528\u5230\u65F6\u624D\u52A0\u8F7D\u3002\u6BCF\u52A0\u8F7D\u4E00\u79CD<code>.class</code>\uFF0CJVM \u5C31\u4E3A\u5176\u521B\u5EFA\u4E00\u4E2A<code>Class</code>\u7C7B\u578B\u7684\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u5E76\u5C06\u4E8C\u8005\u5173\u8054\u8D77\u6765\u3002\u8FD9\u4E2A\u5BF9\u8C61\u5C31\u5305\u542B\u4E86\u5B8C\u6574\u7684\u7C7B\u7ED3\u6784\u4FE1\u606F\uFF0C\u5305\u62EC\u5305\u540D\u3001\u7C7B\u540D\u3001\u7236\u7C7B\u3001\u5B9E\u73B0\u63A5\u53E3\u3001\u6240\u6709\u65B9\u6CD5\u548C\u5B57\u6BB5\u7B49\u3002</p><br><p><strong>\u4E09\u3001\u53CD\u5C04\u7684\u4F7F\u7528</strong></p><p>\u5728<code>java.lang.reflect</code>\u5305\u4E2D\u7684\u5185\u5BB9\uFF1A<code>Constructor/Field/Method</code>\u4E0E\u53CD\u5C04\u76F8\u5173\u7684\u4E09\u4E2A\u7C7B</p><p>1\uFF09Constructor \u7C7B\u8868\u793A\u7684\u662F Class \u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u7684\u6784\u9020\u65B9\u6CD5\uFF0C\u5229\u7528\u5B83\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u52A8\u6001\u521B\u5EFA\u5BF9\u8C61</p><p>2\uFF09Field \u8868\u793A Class \u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u7684\u6210\u5458\u53D8\u91CF\uFF0C\u901A\u8FC7\u5B83\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u52A8\u6001\u4FEE\u6539\u6210\u5458\u53D8\u91CF\u7684\u5C5E\u6027\u503C\uFF08\u5305\u542B private \u4FEE\u9970\u7684\u503C\uFF09</p><p>3\uFF09Method \u8868\u793A Class \u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u7684\u6210\u5458\u65B9\u6CD5\uFF0C\u901A\u8FC7\u5B83\u53EF\u4EE5\u52A8\u6001\u8C03\u7528\u5BF9\u8C61\u7684\u65B9\u6CD5\uFF08\u5305\u542B private \u4FEE\u9970\u7684\u65B9\u6CD5\uFF09</p><br><p><strong>1\u3001\u83B7\u53D6 Class \u5B9E\u4F8B</strong></p><p>1\uFF09\u901A\u8FC7<code>\u7C7B\u540D.class</code>\u83B7\u53D6\u3002<strong>\u591A\u7528\u4E8E\u65B9\u6CD5\u4E2D\u53C2\u6570\u4F20\u9012</strong></p><p>2\uFF09\u901A\u8FC7\u5B9E\u4F8B\u5BF9\u8C61\u7684<code>\u7C7B\u540D.getClass()</code>\u65B9\u6CD5\u83B7\u53D6\u3002<strong>\u591A\u7528\u4E8E\u5BF9\u8C61</strong>\uFF0C\u83B7\u53D6\u5BF9\u8C61\u5B57\u8282\u7801</p><p>3\uFF09\u901A\u8FC7<code>Class.forName(&quot;\u7C7B\u540D&quot;)</code>\u83B7\u53D6\u3002\u53C2\u6570\u4E3A<strong>\u5168\u9650\u5B9A\u7C7B\u540D</strong>\uFF0C<strong>\u591A\u7528\u4E8E\u914D\u5408\u914D\u7F6E\u6587\u4EF6</strong>\u3002\u5C06\u5168\u7C7B\u540D\u5B9A\u4E49\u5728\u914D\u7F6E\u6587\u4EF6\u4E2D\uFF0C\u8BFB\u53D6\u914D\u7F6E\u6587\u4EF6\uFF0C\u52A0\u8F7D\u7C7B\uFF0C\u83B7\u53D6 Class</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * \u83B7\u53D6Class\u5BF9\u8C61\u7684\u4E0D\u540C\u65B9\u5F0F
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GetClassTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

        <span class="token comment">// \u52A0\u8F7D\u914D\u7F6E\u6587\u4EF6</span>

        <span class="token comment">// \u65B9\u5F0F1</span>
        <span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> <span class="token class-name">GetClassTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// reflectConfig.properties \u653E\u5728\u4E0E src \u540C\u7EA7\u522B\u6216\u8005\u5728 resources \u6587\u4EF6\u5939\u5185</span>
        <span class="token class-name">InputStream</span> is <span class="token operator">=</span> classLoader<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;reflectConfig.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        properties<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> className <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;className&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u65B9\u5F0F2</span>
        <span class="token comment">// ResourceBundle bundle = ResourceBundle.getBundle(&quot;reflectConfig&quot;);</span>
        <span class="token comment">// String className = bundle.getString(&quot;className&quot;);</span>
        <span class="token comment">// System.out.println(className);</span>
        <span class="token comment">// Enumeration&lt;String&gt; bundleKeys = bundle.getKeys();</span>
        <span class="token comment">// while (bundleKeys.hasMoreElements()) {</span>
        <span class="token comment">//     System.out.println(bundleKeys.nextElement());</span>
        <span class="token comment">// }</span>

        <span class="token comment">// 1. Class.forName \u591A\u7528\u4E8E\u914D\u5408\u914D\u7F6E\u6587\u4EF6\u3002\u5C06\u5168\u7C7B\u540D\u5B9A\u4E49\u5728\u914D\u7F6E\u6587\u4EF6\u4E2D\uFF0C\u8BFB\u53D6\u914D\u7F6E\u6587\u4EF6\uFF0C\u52A0\u8F7D\u7C7B\uFF0C\u83B7\u53D6Class</span>
        <span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">// 2. \u7C7B\u540D.class \u591A\u7528\u4E8E\u65B9\u6CD5\u4E2D\u53C2\u6570\u4F20\u9012</span>
        <span class="token class-name">Class</span> clazz2 <span class="token operator">=</span> <span class="token class-name">GetClassTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>

        <span class="token comment">// 3. \u591A\u7528\u4E8E\u5BF9\u8C61 \u83B7\u53D6\u5BF9\u8C61\u5B57\u8282\u7801</span>
        <span class="token class-name">GetClassTest</span> getClassTest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetClassTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GetClassTest</span><span class="token punctuation">&gt;</span></span> clazz3 <span class="token operator">=</span> getClassTest<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clazz <span class="token operator">==</span> clazz2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clazz2 <span class="token operator">==</span> clazz3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clazz <span class="token operator">==</span> clazz3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u901A\u8FC7 getClass \u83B7\u53D6\u7C7B\u4FE1\u606F</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReflectionTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;===================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;===================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token class-name">Class</span> clazz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;className: %s&quot;</span><span class="token punctuation">,</span> clazz<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;simpleName: %s&quot;</span><span class="token punctuation">,</span> clazz<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;package: %s&quot;</span><span class="token punctuation">,</span> clazz<span class="token punctuation">.</span><span class="token function">getPackage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;is interface: %b&quot;</span><span class="token punctuation">,</span> clazz<span class="token punctuation">.</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;parent: %s&quot;</span><span class="token punctuation">,</span> clazz<span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;is array: %b&quot;</span><span class="token punctuation">,</span> clazz<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">getMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><br><p><strong>2\u3001\u8C03\u7528\u6784\u9020\u51FD\u6570</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * \u8BBF\u95EE Class\u5BF9\u8C61\u7684\u6784\u9020\u65B9\u6CD5
 */</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReflectionTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InvocationTargetException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
        <span class="token function">showConstructorInfo</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">showConstructorInfo</span><span class="token punctuation">(</span><span class="token class-name">Class</span> clazz<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u83B7\u53D6\u65E0\u53C2\u6784\u9020\u65B9\u6CD5\uFF0C\u5E76\u521B\u5EFA\u5B9E\u4F8B\u5BF9\u8C61</span>
        <span class="token class-name">Object</span> newInstance <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u83B7\u53D6\u6709\u53C2\u6784\u9020\u65B9\u6CD5</span>
        <span class="token class-name">Constructor</span> constructor <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        constructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> instance <span class="token operator">=</span> constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token string">&quot;zss&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><br><p><strong>3\u3001\u83B7\u53D6\u53D8\u91CF</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * \u8BBF\u95EE Class\u5BF9\u8C61\u7684\u6210\u5458\u53D8\u91CF\u4FE1\u606F
 */</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReflectionTest2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchFieldException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span> userClazz <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
        <span class="token function">showFiledInfo</span><span class="token punctuation">(</span>userClazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/** 
     * showFiledInfo \u83B7\u53D6\u6210\u5458\u53D8\u91CF\u4FE1\u606F
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">showFiledInfo</span><span class="token punctuation">(</span><span class="token class-name">Class</span> clazz<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchFieldException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u83B7\u53D6 public \u4FEE\u9970\u7684\u6210\u5458\u53D8\u91CF\u4FE1\u606F</span>
        <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;****************************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5FFD\u7565\u4FEE\u9970\u7B26\uFF0C\u83B7\u53D6\u5230\u7C7B\u7684\u6240\u6709\u6210\u5458\u53D8\u91CF\u4FE1\u606F</span>
        <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>declaredFields<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 1. \u4E3A\u6210\u5458\u53D8\u91CF\u8D4B\u503C</span>
        <span class="token class-name">Field</span> gender <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gender<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token string">&quot;male&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u4E3A\u975Epublic\u4FEE\u9970\u7684\u6210\u5458\u53D8\u91CF\u8D4B\u503C</span>
        <span class="token class-name">Field</span> username <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u64CD\u4F5C\u975Epublic\u4FEE\u9970\u7684\u53D8\u91CF\u524D\uFF0C\u9700\u8981\u5FFD\u7565\u8BBF\u95EE\u4FEE\u9970\u7B26\u7684\u5B89\u5168\u68C0\u67E5</span>
        <span class="token comment">// \u6B64\u505A\u6CD5\u4E5F\u88AB\u79F0\u4E3A\u3010\u66B4\u529B\u53CD\u5C04\u3011</span>
        username<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        username<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token string">&quot;Sb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2. \u83B7\u53D6\u5B57\u6BB5\u503C</span>
        <span class="token class-name">Object</span> obj <span class="token operator">=</span> username<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><br><p><strong>4\u3001\u8C03\u7528\u65B9\u6CD5</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * \u8BBF\u95EE Class\u5BF9\u8C61\u7684\u65B9\u6CD5
 */</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReflectionTest4</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
        <span class="token function">invokeMethod</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">&quot;publicMsg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">invokeMethod</span><span class="token punctuation">(</span><span class="token class-name">Class</span> clazz<span class="token punctuation">,</span> <span class="token class-name">String</span> methodName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> o <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredMethods <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>declaredMethods<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;**************************************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u6709\u53C2\u65B9\u6CD5\uFF0CgetMethod(\u65B9\u6CD5\u540D, \u65B9\u6CD5\u53C2\u6570)</span>
        <span class="token class-name">Method</span> publicMsg <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>methodName<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u6267\u884C\u6709\u53C2\u65B9\u6CD5 invoke(\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u65B9\u6CD5\u53C2\u6570\u503C)</span>
        <span class="token comment">// res \u65B9\u6CD5\u8FD4\u56DE\u503C</span>
        <span class="token class-name">Object</span> res <span class="token operator">=</span> publicMsg<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;result: %s&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u65E0\u53C2\u65B9\u6CD5\uFF0CgetDeclaredMethod(\u65B9\u6CD5\u540D)</span>
        <span class="token class-name">Method</span> privateMsg <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;privateMsg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u79C1\u6709\u65B9\u6CD5\u9700\u8981\u5FFD\u7565\u5B89\u5168\u68C0\u67E5</span>
        privateMsg<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u6267\u884C\u65E0\u53C2\u65B9\u6CD5 invoke(\u5B9E\u4F8B\u5BF9\u8C61)</span>
        <span class="token class-name">Object</span> privateResult <span class="token operator">=</span> privateMsg<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>privateResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><br><p><strong>\u56DB\u3001\u53CD\u5C04\u7C7B\u52A0\u8F7D\u7EC6\u8282</strong></p><p>\u9996\u5148\u8C03\u7528<code>java.lang.Class</code>\u7C7B\u7684\u9759\u6001\u65B9\u6CD5\uFF0C\u83B7\u53D6\u7C7B\u4FE1\u606F</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u5148\u83B7\u53D6 ClassLoader \uFF0C\u7136\u540E\u8C03\u7528\u672C\u5730\u65B9\u6CD5</span>
<span class="token annotation punctuation">@CallerSensitive</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">forName</span><span class="token punctuation">(</span><span class="token class-name">String</span> className<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
  <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller <span class="token operator">=</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">forName0</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span>caller<span class="token punctuation">)</span><span class="token punctuation">,</span> caller<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8C03\u7528\u672C\u5730\u65B9\u6CD5\uFF0C\u4EA4\u7ED9 JVM \u53BB\u52A0\u8F7D</span>
<span class="token comment">// \u83B7\u53D6\u4FE1\u606F\uFF0C\u52A0\u8F7D\u7C7B\u518D\u56DE\u8C03 java.lang.ClassLoader</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">forName0</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">boolean</span> initialize<span class="token punctuation">,</span>
                                        <span class="token class-name">ClassLoader</span> loader<span class="token punctuation">,</span>
                                        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u63A5\u4E0B\u6765 JVM \u56DE\u8C03 ClassLoader \u8FDB\u7C7B\u52A0\u8F7D</span>
<span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">loadClass</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// sun.misc.Launcher</span>
<span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> var3 <span class="token operator">=</span> var1<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>var3 <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SecurityManager</span> var4 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>var4 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      var4<span class="token punctuation">.</span><span class="token function">checkPackageAccess</span><span class="token punctuation">(</span>var1<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> var3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ucp<span class="token punctuation">.</span><span class="token function">knownToNotExist</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Class</span> var5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findLoadedClass</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>var5 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>var5<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> var5<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// java.lang.ClassLoader</span>
<span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">boolean</span> resolve<span class="token punctuation">)</span>
  <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span>
<span class="token punctuation">{</span>
  <span class="token comment">// \u5148\u83B7\u53D6\u9501</span>
  <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token function">getClassLoadingLock</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// First, check if the class has already been loaded</span>
    <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u52A0\u8F7D\u4E86\u7684\u8BDD\uFF0C\u5C31\u4E0D\u7528\u518D\u52A0\u8F7D\u4E86</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> <span class="token function">findLoadedClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">long</span> t0 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53CC\u4EB2\u59D4\u6258\u52A0\u8F7D</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          c <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          c <span class="token operator">=</span> <span class="token function">findBootstrapClassOrNull</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ClassNotFoundException thrown if class not found</span>
        <span class="token comment">// from the non-null parent class loader</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u7236\u7C7B\u6CA1\u6709\u52A0\u8F7D\u5230\u65F6\uFF0C\u518D\u81EA\u5DF1\u52A0\u8F7D</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// If still not found, then invoke findClass in order</span>
        <span class="token comment">// to find the class.</span>
        <span class="token keyword">long</span> t1 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c <span class="token operator">=</span> <span class="token function">findClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// this is the defining class loader; record the stats</span>
        <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getParentDelegationTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTime</span><span class="token punctuation">(</span>t1 <span class="token operator">-</span> t0<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getFindClassTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addElapsedTimeFrom</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getFindClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolveClass</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> c<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">getClassLoadingLock</span><span class="token punctuation">(</span><span class="token class-name">String</span> className<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Object</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>parallelLockMap <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528 ConcurrentHashMap \u6765\u4FDD\u5B58\u9501</span>
    <span class="token class-name">Object</span> newLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    lock <span class="token operator">=</span> parallelLockMap<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> newLock<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lock <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      lock <span class="token operator">=</span> newLock<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> lock<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">findLoadedClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">checkName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">findLoadedClass0</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div><br><p><strong>\u4E94\u3001<code>newInstance()</code>\u7684\u5B9E\u73B0</strong></p><p>1\u3001\u6743\u9650\u68C0\u6D4B\uFF0C\u5982\u679C\u4E0D\u901A\u8FC7\u76F4\u63A5\u629B\u51FA\u5F02\u5E38</p><p>2\u3001\u67E5\u627E\u65E0\u53C2\u6784\u9020\u5668\uFF0C\u5E76\u5C06\u5176\u7F13\u5B58\u8D77\u6765</p><p>3\u3001\u8C03\u7528\u5177\u4F53\u65B9\u6CD5\u7684\u65E0\u53C2\u6784\u9020\u65B9\u6CD5\uFF0C\u751F\u6210\u5B9E\u4F8B\u5E76\u8FD4\u56DE</p><div class="language-java line-numbers-mode"><pre><code><span class="token annotation punctuation">@CallerSensitive</span>
<span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">checkMemberAccess</span><span class="token punctuation">(</span><span class="token class-name">Member</span><span class="token punctuation">.</span>PUBLIC<span class="token punctuation">,</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// NOTE: the following code may not be strictly correct under</span>
    <span class="token comment">// the current Java memory model.</span>

    <span class="token comment">// Constructor lookup</span>
    <span class="token comment">// newInstance() \u5176\u5B9E\u76F8\u5F53\u4E8E\u8C03\u7528\u7C7B\u7684\u65E0\u53C2\u6784\u9020\u51FD\u6570\uFF0C\u6240\u4EE5\uFF0C\u9996\u5148\u8981\u627E\u5230\u5176\u65E0\u53C2\u6784\u9020\u5668</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cachedConstructor <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E0D\u5141\u8BB8\u8C03\u7528 Class \u7684 newInstance() \u65B9\u6CD5</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">(</span>
                <span class="token string">&quot;Can not call newInstance() on the Class for java.lang.Class&quot;</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u83B7\u53D6\u65E0\u53C2\u6784\u9020\u5668</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> empty <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> <span class="token function">getConstructor0</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token class-name">Member</span><span class="token punctuation">.</span>DECLARED<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Disable accessibility checks on the constructor</span>
            <span class="token comment">// since we have to do the security check here anyway</span>
            <span class="token comment">// (the stack depth is wrong for the Constructor&#39;s</span>
            <span class="token comment">// security check to work)</span>
            <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span>AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span>PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">public</span> <span class="token class-name">Void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        c<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cachedConstructor <span class="token operator">=</span> c<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token punctuation">(</span><span class="token class-name">InstantiationException</span><span class="token punctuation">)</span>
                <span class="token keyword">new</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">(</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">initCause</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> tmpConstructor <span class="token operator">=</span> cachedConstructor<span class="token punctuation">;</span>
    <span class="token comment">// Security check (same as in java.lang.reflect.Constructor)</span>
    <span class="token keyword">int</span> modifiers <span class="token operator">=</span> tmpConstructor<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">quickCheckMemberAccess</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller <span class="token operator">=</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newInstanceCallerCache <span class="token operator">!=</span> caller<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">ensureMemberAccess</span><span class="token punctuation">(</span>caller<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
            newInstanceCallerCache <span class="token operator">=</span> caller<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Run constructor</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8C03\u7528\u65E0\u53C2\u6784\u9020\u5668</span>
        <span class="token keyword">return</span> tmpConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InvocationTargetException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Unsafe</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">throwException</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getTargetException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Not reached</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><br><p><strong>\u516D\u3001\u83B7\u53D6\u6784\u9020\u5668\u7684\u8FC7\u7A0B</strong></p><p>1\u3001\u5148\u83B7\u53D6\u6240\u6709\u7684\u6784\u9020\u5668\uFF0C \u7136\u540E\u901A\u8FC7\u53C2\u6570\u7C7B\u578B\u8FDB\u884C\u6BD4\u8F83</p><p>2\u3001\u627E\u5230\u5339\u914D\u540E\uFF0C\u901A\u8FC7<code>getReflectionFactory().copyConstructor()</code>\uFF0C\u62F7\u8D1D\u4E00\u4E2A\u6784\u9020\u5668\u5E76\u8FD4\u56DE</p><p>3\u3001\u5426\u5219\u629B\u51FA NoSuchMethodException</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">private</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">getConstructor0</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> parameterTypes<span class="token punctuation">,</span>
                                       <span class="token keyword">int</span> which<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span>
<span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u6240\u6709\u6784\u9020\u5668</span>
    <span class="token comment">// privateGetDeclaredConstructors \u901A\u8FC7 JVM \u6216\u8005\u7F13\u5B58\u83B7\u53D6\u5F53\u524D\u7C7B\u6240\u6709\u7684\u6784\u9020\u65B9\u6CD5</span>
    <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> constructors <span class="token operator">=</span> <span class="token function">privateGetDeclaredConstructors</span><span class="token punctuation">(</span><span class="token punctuation">(</span>which <span class="token operator">==</span> <span class="token class-name">Member</span><span class="token punctuation">.</span>PUBLIC<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> constructor <span class="token operator">:</span> constructors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">arrayContentsEq</span><span class="token punctuation">(</span>parameterTypes<span class="token punctuation">,</span>
                            constructor<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getReflectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copyConstructor</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">(</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&lt;init&gt;&quot;</span> <span class="token operator">+</span> <span class="token function">argumentTypesToString</span><span class="token punctuation">(</span>parameterTypes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>privateGetDeclaredConstructors()</code>\u83B7\u53D6\u6240\u6709\u7684\u6784\u9020\u5668\u4E3B\u8981\u6B65\u9AA4\uFF1A</p><p>1\u3001\u5148\u5C1D\u8BD5\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6</p><p>2\u3001\u5982\u679C\u7F13\u5B58\u6CA1\u6709\uFF0C\u5219\u4ECE JVM \u4E2D\u91CD\u65B0\u83B7\u53D6\uFF0C\u5E76\u5B58\u5165\u7F13\u5B58\uFF0C\u7F13\u5B58\u4F7F\u7528\u8F6F\u5F15\u7528\u8FDB\u884C\u4FDD\u5B58\uFF0C\u4FDD\u8BC1\u5185\u5B58\u53EF\u7528</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u901A\u8FC7 JVM \u6216\u8005\u7F13\u5B58\u83B7\u53D6\u5F53\u524D\u7C7B\u6240\u6709\u7684\u6784\u9020\u65B9\u6CD5</span>

<span class="token comment">// Returns an array of &quot;root&quot; constructors. These Constructor</span>
<span class="token comment">// objects must NOT be propagated to the outside world, but must</span>
<span class="token comment">// instead be copied via ReflectionFactory.copyConstructor.</span>
<span class="token keyword">private</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">privateGetDeclaredConstructors</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> publicOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkInitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> res<span class="token punctuation">;</span>
    <span class="token comment">// \u8C03\u7528 reflectionData(), \u83B7\u53D6\u4FDD\u5B58\u7684\u4FE1\u606F\uFF0C\u4F7F\u7528\u8F6F\u5F15\u7528\u4FDD\u5B58\uFF0C\u5185\u5B58\u4E0D\u591F\u53EF\u4EE5\u56DE\u6536</span>
    <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> rd <span class="token operator">=</span> <span class="token function">reflectionData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res <span class="token operator">=</span> publicOnly <span class="token operator">?</span> rd<span class="token punctuation">.</span>publicConstructors <span class="token operator">:</span> rd<span class="token punctuation">.</span>declaredConstructors<span class="token punctuation">;</span>
        <span class="token comment">// \u5B58\u5728\u7F13\u5B58\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// No cached value available; request value from VM</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> temporaryRes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        res <span class="token operator">=</span> temporaryRes<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4F7F\u7528 native \u65B9\u6CD5\u4ECE JVM \u83B7\u53D6\u6784\u9020\u5668</span>
        res <span class="token operator">=</span> <span class="token function">getDeclaredConstructors0</span><span class="token punctuation">(</span>publicOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C06\u4ECE JVM \u4E2D\u8BFB\u53D6\u7684\u5185\u5BB9\uFF0C\u5B58\u5165\u7F13\u5B58</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>publicOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rd<span class="token punctuation">.</span>publicConstructors <span class="token operator">=</span> res<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            rd<span class="token punctuation">.</span>declaredConstructors <span class="token operator">=</span> res<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Lazily create and cache ReflectionData</span>
<span class="token keyword">private</span> <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">reflectionData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SoftReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ReflectionData</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> reflectionData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reflectionData<span class="token punctuation">;</span>
    <span class="token keyword">int</span> classRedefinedCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>classRedefinedCount<span class="token punctuation">;</span>
    <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> rd<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>useCaches <span class="token operator">&amp;&amp;</span>
        reflectionData <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span>rd <span class="token operator">=</span> reflectionData<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
        rd<span class="token punctuation">.</span>redefinedCount <span class="token operator">==</span> classRedefinedCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rd<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// else no SoftReference or cleared SoftReference or stale ReflectionData</span>
    <span class="token comment">// -&gt; create and replace new instance</span>
    <span class="token keyword">return</span> <span class="token function">newReflectionData</span><span class="token punctuation">(</span>reflectionData<span class="token punctuation">,</span> classRedefinedCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65B0\u521B\u5EFA\u7F13\u5B58\uFF0C\u4FDD\u5B58\u53CD\u5C04\u4FE1\u606F</span>
<span class="token keyword">private</span> <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">newReflectionData</span><span class="token punctuation">(</span><span class="token class-name">SoftReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ReflectionData</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> oldReflectionData<span class="token punctuation">,</span> <span class="token keyword">int</span> classRedefinedCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>useCaches<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4F7F\u7528 CAS \u4FDD\u8BC1\u66F4\u65B0\u7684\u7EBF\u7A0B\u5B89\u5168\u6027\uFF0C\u6240\u4EE5\u53CD\u5C04\u662F\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\u7684</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> rd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>classRedefinedCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// try to CAS it...</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Atomic</span><span class="token punctuation">.</span><span class="token function">casReflectionData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> oldReflectionData<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SoftReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>rd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> rd<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5148\u4F7F\u7528 CAS \u66F4\u65B0\uFF0C\u5982\u679C\u66F4\u65B0\u6210\u529F\uFF0C\u5219\u7ACB\u5373\u8FD4\u56DE</span>
        <span class="token comment">// \u5426\u5219\u6D4B\u67E5\u5F53\u524D\u5DF2\u88AB\u5176\u4ED6\u7EBF\u7A0B\u66F4\u65B0\u7684\u60C5\u51B5\uFF0C\u5982\u679C\u548C\u81EA\u5DF1\u60F3\u8981\u66F4\u65B0\u7684\u72B6\u6001\u4E00\u81F4\uFF0C\u5219\u4E5F\u7B97\u662F\u6210\u529F\u4E86</span>
        oldReflectionData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reflectionData<span class="token punctuation">;</span>
        classRedefinedCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>classRedefinedCount<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldReflectionData <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>rd <span class="token operator">=</span> oldReflectionData<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
            rd<span class="token punctuation">.</span>redefinedCount <span class="token operator">==</span> classRedefinedCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> rd<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u4F7F\u7528 relactionData() \u8FDB\u884C\u7F13\u5B58\u4FDD\u5B58</span>
<span class="token comment">// ReflectionData \u7684\u6570\u636E\u7ED3\u6784\u5982\u4E0B\uFF1A</span>

<span class="token comment">// reflection data that might get invalidated when JVM TI RedefineClasses() is called</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> publicFields<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredMethods<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> publicMethods<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredConstructors<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> publicConstructors<span class="token punctuation">;</span>
    <span class="token comment">// Intermediate results for getFields and getMethods</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredPublicFields<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredPublicMethods<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces<span class="token punctuation">;</span>

    <span class="token comment">// Value of classRedefinedCount when we created this ReflectionData instance</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> redefinedCount<span class="token punctuation">;</span>

    <span class="token class-name">ReflectionData</span><span class="token punctuation">(</span><span class="token keyword">int</span> redefinedCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>redefinedCount <span class="token operator">=</span> redefinedCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><blockquote><p>\u5982\u4F55\u6BD4\u8F83\u6784\u9020\u662F\u5426\u662F\u8981\u67E5\u627E\u6784\u9020\u5668\uFF1F</p></blockquote><p>\u5176\u5B9E\u5C31\u662F\u6BD4\u8F83\u53C2\u6570\u7C7B\u578B\u662F\u5426\u5B8C\u5168\u76F8\u7B49\uFF0C\u6709\u4E00\u4E2A\u4E0D\u76F8\u7B49\u5219\u8FD4\u56DE<code>false</code></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">arrayContentsEq</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a1<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a2 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> a2<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>a2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a1<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>a1<span class="token punctuation">.</span>length <span class="token operator">!=</span> a2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> a2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// sun.reflect.ReflectionFactory</span>
<span class="token comment">/** Makes a copy of the passed constructor. The returned
    constructor is a &quot;child&quot; of the passed one; see the comments
    in Constructor.java for details. */</span>
<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">copyConstructor</span><span class="token punctuation">(</span><span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">langReflectAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copyConstructor</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// java.lang.reflect.Constructor, copy \u5176\u5B9E\u5C31\u662F\u65B0 new \u4E00\u4E2A Constructor</span>
<span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// This routine enables sharing of ConstructorAccessor objects</span>
    <span class="token comment">// among Constructor objects which refer to the same underlying</span>
    <span class="token comment">// method in the VM. (All of this contortion is only necessary</span>
    <span class="token comment">// because of the &quot;accessibility&quot; bit in AccessibleObject,</span>
    <span class="token comment">// which implicitly requires that new java.lang.reflect</span>
    <span class="token comment">// objects be fabricated for each reflective call on Class</span>
    <span class="token comment">// objects.)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Can not copy a non-root Constructor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span>
                                           parameterTypes<span class="token punctuation">,</span>
                                           exceptionTypes<span class="token punctuation">,</span> modifiers<span class="token punctuation">,</span> slot<span class="token punctuation">,</span>
                                           signature<span class="token punctuation">,</span>
                                           annotations<span class="token punctuation">,</span>
                                           parameterAnnotations<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// root \u6307\u5411\u5F53\u524D constructor</span>
    res<span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token comment">// Might as well eagerly propagate this if already present</span>
    res<span class="token punctuation">.</span>constructorAccessor <span class="token operator">=</span> constructorAccessor<span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><p>\u63A5\u4E0B\u6765\u5C31\u53EA\u9700\u8C03\u7528\u5176\u76F8\u5E94\u6784\u9020\u5668\u7684<code>newInstance()</code>\uFF0C\u8FD4\u56DE\u5B9E\u4F8B\u3002\u8FD4\u56DE\u6784\u9020\u5668\u7684\u5B9E\u4F8B\u540E\uFF0C\u53EF\u4EE5\u6839\u636E\u5916\u90E8\u8FDB\u884C\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\uFF0C\u4ECE\u800C\u4F7F\u7528\u63A5\u53E3\u6216\u65B9\u6CD5\u8FDB\u884C\u8C03\u7528\u5B9E\u4F8B\u529F\u80FD\u4E86</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// return tmpConstructor.newInstance((Object[])null); </span>
<span class="token comment">// java.lang.reflect.Constructor</span>
<span class="token annotation punctuation">@CallerSensitive</span>
<span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Object</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> initargs<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span>
           <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>override<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">quickCheckMemberAccess</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller <span class="token operator">=</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">checkAccess</span><span class="token punctuation">(</span>caller<span class="token punctuation">,</span> clazz<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token class-name">Modifier</span><span class="token punctuation">.</span>ENUM<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot reflectively create enum objects&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ConstructorAccessor</span> ca <span class="token operator">=</span> constructorAccessor<span class="token punctuation">;</span>   <span class="token comment">// read volatile</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ca <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ca <span class="token operator">=</span> <span class="token function">acquireConstructorAccessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">T</span> inst <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> ca<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>initargs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> inst<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// sun.reflect.DelegatingConstructorAccessorImpl</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
  <span class="token keyword">throws</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span>
         <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span>
         <span class="token class-name">InvocationTargetException</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> delegate<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// sun.reflect.NativeConstructorAccessorImpl</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span>
           <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span>
           <span class="token class-name">InvocationTargetException</span>
<span class="token punctuation">{</span>
    <span class="token comment">// We can&#39;t inflate a constructor belonging to a vm-anonymous class</span>
    <span class="token comment">// because that kind of class can&#39;t be referred to by name, hence can&#39;t</span>
    <span class="token comment">// be found from the generated bytecode.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>numInvocations <span class="token operator">&gt;</span> <span class="token class-name">ReflectionFactory</span><span class="token punctuation">.</span><span class="token function">inflationThreshold</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">isVMAnonymousClass</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ConstructorAccessorImpl</span> acc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ConstructorAccessorImpl</span><span class="token punctuation">)</span>
            <span class="token keyword">new</span> <span class="token class-name">MethodAccessorGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                <span class="token function">generateConstructor</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                    c<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                    c<span class="token punctuation">.</span><span class="token function">getExceptionTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                    c<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        parent<span class="token punctuation">.</span><span class="token function">setDelegate</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8C03\u7528native\u65B9\u6CD5\uFF0C\u8FDB\u884C\u8C03\u7528 constructor</span>
    <span class="token keyword">return</span> <span class="token function">newInstance0</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><br><p><strong>\u4E03\u3001\u83B7\u53D6\u53CD\u5C04\u65B9\u6CD5</strong></p><p>1\u3001\u6743\u9650\u68C0\u67E5</p><p>2\u3001\u83B7\u53D6\u6240\u6709\u65B9\u6CD5\u5217\u8868</p><p>3\u3001\u6839\u636E\u65B9\u6CD5\u540D\u79F0\u548C\u65B9\u6CD5\u5217\u8868\uFF0C\u9009\u51FA\u7B26\u5408\u8981\u6C42\u7684\u65B9\u6CD5</p><p>4\u3001\u5982\u679C\u6CA1\u6709\u627E\u5230\u76F8\u5E94\u65B9\u6CD5\uFF0C\u629B\u51FA\u5F02\u5E38\uFF0C\u5426\u5219\u8FD4\u56DE\u5BF9\u5E94\u65B9\u6CD5</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// java.lang.Class</span>
<span class="token annotation punctuation">@CallerSensitive</span>
<span class="token keyword">public</span> <span class="token class-name">Method</span> <span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> parameterTypes<span class="token punctuation">)</span>
  <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">SecurityException</span> <span class="token punctuation">{</span>
  <span class="token function">checkMemberAccess</span><span class="token punctuation">(</span><span class="token class-name">Member</span><span class="token punctuation">.</span>DECLARED<span class="token punctuation">,</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Method</span> method <span class="token operator">=</span> <span class="token function">searchMethods</span><span class="token punctuation">(</span><span class="token function">privateGetDeclaredMethods</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> parameterTypes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">(</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token function">argumentTypesToString</span><span class="token punctuation">(</span>parameterTypes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> method<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><br><blockquote><p>\u600E\u6837\u83B7\u53D6\u7C7B\u58F0\u660E\u7684\u6240\u6709\u65B9\u6CD5\uFF1F</p></blockquote><p>\u548C\u83B7\u53D6\u6240\u6709\u6784\u9020\u5668\u7684\u65B9\u6CD5\u5F88\u76F8\u4F3C\uFF0C\u90FD\u662F\u5148\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6\u65B9\u6CD5\uFF0C\u5982\u679C\u6CA1\u6709\uFF0C\u5219\u4ECE JVM \u4E2D\u83B7\u53D6\u3002\u4E0D\u540C\u7684\u662F\uFF0C\u65B9\u6CD5\u5217\u8868\u9700\u8981\u8FDB\u884C\u8FC7\u6EE4 <code>Reflection.filterMethods()</code></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// Returns an array of &quot;root&quot; methods. These Method objects must NOT</span>
<span class="token comment">// be propagated to the outside world, but must instead be copied</span>
<span class="token comment">// via ReflectionFactory.copyMethod.</span>
<span class="token keyword">private</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">privateGetDeclaredMethods</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> publicOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkInitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res<span class="token punctuation">;</span>
    <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> rd <span class="token operator">=</span> <span class="token function">reflectionData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res <span class="token operator">=</span> publicOnly <span class="token operator">?</span> rd<span class="token punctuation">.</span>declaredPublicMethods <span class="token operator">:</span> rd<span class="token punctuation">.</span>declaredMethods<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// No cached value available; request value from VM</span>
    res <span class="token operator">=</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">filterMethods</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getDeclaredMethods0</span><span class="token punctuation">(</span>publicOnly<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>publicOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rd<span class="token punctuation">.</span>declaredPublicMethods <span class="token operator">=</span> res<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            rd<span class="token punctuation">.</span>declaredMethods <span class="token operator">=</span> res<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// sun.misc.Reflection</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">filterMethods</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> containingClass<span class="token punctuation">,</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>methodFilterMap <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Bootstrapping</span>
        <span class="token keyword">return</span> methods<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">filter</span><span class="token punctuation">(</span>methods<span class="token punctuation">,</span> methodFilterMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>containingClass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u53EF\u4EE5\u8FC7\u6EE4\u6307\u5B9A\u7684\u65B9\u6CD5\uFF0C\u4E00\u822C\u4E3A\u7A7A\uFF0C\u5982\u679C\u8981\u6307\u5B9A\u8FC7\u6EE4\uFF0C\u53EF\u4EE5\u8C03\u7528 registerMethodsToFilter(), \u6216\u8005...</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Member</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Member</span><span class="token punctuation">[</span><span class="token punctuation">]</span> members<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> filteredNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>filteredNames <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>members<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> members<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> numNewMembers <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Member</span> member <span class="token operator">:</span> members<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> shouldSkip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> filteredName <span class="token operator">:</span> filteredNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>member<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> filteredName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                shouldSkip <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldSkip<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token operator">++</span>numNewMembers<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Member</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newMembers <span class="token operator">=</span>
        <span class="token punctuation">(</span><span class="token class-name">Member</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>members<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> numNewMembers<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> destIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Member</span> member <span class="token operator">:</span> members<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> shouldSkip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> filteredName <span class="token operator">:</span> filteredNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>member<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> filteredName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                shouldSkip <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldSkip<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            newMembers<span class="token punctuation">[</span>destIdx<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> member<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> newMembers<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><blockquote><p>\u6839\u636E\u65B9\u6CD5\u540D\u548C\u53C2\u6570\u7C7B\u578B\u8FC7\u6EE4\u6307\u5B9A\u65B9\u6CD5\u8FD4\u56DE\uFF08\u5148\u5339\u914D\u5230\u65B9\u6CD5\u540D\uFF0C\u7136\u540E\u53C2\u6570\u7C7B\u578B\u5339\u914D\uFF09</p></blockquote><p>1\u3001\u5339\u914D\u5230\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u5E76\u6CA1\u6709\u9000\u51FA\u5FAA\u73AF\uFF0C\u800C\u662F\u7EE7\u7EED\u8FDB\u884C\u5339\u914D</p><p>2\u3001\u8FD9\u91CC\u662F\u5339\u914D\u6700\u7CBE\u786E\u7684\u5B50\u7C7B\u8FDB\u884C\u8FD4\u56DE\uFF08\u6700\u4F18\u5339\u914D\uFF09</p><p>3\u3001\u6700\u540E\u901A\u8FC7<code>copyMethod()</code>\u8FD4\u56DE</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> <span class="token function">searchMethods</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods<span class="token punctuation">,</span>
                                    <span class="token class-name">String</span> name<span class="token punctuation">,</span>
                                    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> parameterTypes<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Method</span> res <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4F7F\u7528\u5E38\u91CF\u6C60\uFF0C\u907F\u514D\u91CD\u590D\u521B\u5EFAString</span>
    <span class="token class-name">String</span> internedName <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">intern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> methods<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Method</span> m <span class="token operator">=</span> methods<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> internedName
            <span class="token operator">&amp;&amp;</span> <span class="token function">arrayContentsEq</span><span class="token punctuation">(</span>parameterTypes<span class="token punctuation">,</span> m<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>res <span class="token operator">==</span> <span class="token keyword">null</span>
                <span class="token operator">||</span> res<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            res <span class="token operator">=</span> m<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>res <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> res <span class="token operator">:</span> <span class="token function">getReflectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copyMethod</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><br><p><strong>\u53CD\u5C04\u65B9\u6CD5\u8C03\u7528</strong></p><p>\u901A\u8FC7<code>MethodAccessor</code>\u8FDB\u884C\u8C03\u7528\uFF0CMethodAccessor \u662F\u4E2A\u63A5\u53E3\uFF0C\u5728\u7B2C\u4E00\u6B21\u8C03\u7528<code>acquireMethodAccessor()</code>\u65F6\u8FDB\u884C\u521B\u5EFA</p><div class="language-java line-numbers-mode"><pre><code><span class="token annotation punctuation">@CallerSensitive</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span>
<span class="token class-name">InvocationTargetException</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>override<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">quickCheckMemberAccess</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller <span class="token operator">=</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">checkAccess</span><span class="token punctuation">(</span>caller<span class="token punctuation">,</span> clazz<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">MethodAccessor</span> ma <span class="token operator">=</span> methodAccessor<span class="token punctuation">;</span>             <span class="token comment">// read volatile</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ma <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ma <span class="token operator">=</span> <span class="token function">acquireMethodAccessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ma<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// probably make the implementation more scalable.</span>
<span class="token keyword">private</span> <span class="token class-name">MethodAccessor</span> <span class="token function">acquireMethodAccessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// First check to see if one has been created yet, and take it</span>
    <span class="token comment">// if so</span>
    <span class="token class-name">MethodAccessor</span> tmp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> tmp <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getMethodAccessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5B58\u5728\u7F13\u5B58\u65F6\uFF0C\u5B58\u5165 methodAccessor\uFF0C\u5426\u5219\u8C03\u7528 ReflectionFactory \u521B\u5EFA\u65B0\u7684 MethodAccessor</span>
        methodAccessor <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// Otherwise fabricate one and propagate it up to the root</span>
        tmp <span class="token operator">=</span> reflectionFactory<span class="token punctuation">.</span><span class="token function">newMethodAccessor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setMethodAccessor</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> tmp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// sun.reflect.ReflectionFactory</span>
<span class="token keyword">public</span> <span class="token class-name">MethodAccessor</span> <span class="token function">newMethodAccessor</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkInitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>noInflation <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">isVMAnonymousClass</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MethodAccessorGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
            <span class="token function">generateMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           method<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           method<span class="token punctuation">.</span><span class="token function">getExceptionTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           method<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">NativeMethodAccessorImpl</span> acc <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">NativeMethodAccessorImpl</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DelegatingMethodAccessorImpl</span> res <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">DelegatingMethodAccessorImpl</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        acc<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><br><p><strong>\u516B\u3001\u53CD\u5C04\u8C03\u7528\u6D41\u7A0B\u5C0F\u7ED3</strong></p><p>1\u3001\u53CD\u5C04\u7C7B\u53CA\u53CD\u5C04\u65B9\u6CD5\u7684\u83B7\u53D6\uFF0C\u90FD\u662F\u901A\u8FC7\u4ECE\u5217\u8868\u4E2D\u641C\u5BFB\u67E5\u627E\u5339\u914D\u7684\u65B9\u6CD5\uFF0C\u6240\u4EE5\u67E5\u627E\u6027\u80FD\u4F1A\u968F\u7C7B\u7684\u5927\u5C0F\u65B9\u6CD5\u591A\u5C11\u800C\u53D8\u5316\uFF1B</p><p>2\u3001\u6BCF\u4E2A\u7C7B\u90FD\u4F1A\u6709\u4E00\u4E2A\u4E0E\u4E4B\u5BF9\u5E94\u7684 Class \u5B9E\u4F8B\uFF0C\u6BCF\u4E2A\u7C7B\u90FD\u53EF\u4EE5\u83B7\u53D6\u53CD\u5C04\u65B9\u6CD5\uFF0C\u5E76\u4F5C\u7528\u5230\u5176\u4ED6\u5B9E\u4F8B\u8EAB\u4E0A\uFF1B</p><p>3\u3001\u53CD\u5C04\u673A\u5236\u8003\u8651\u4E86\u7EBF\u7A0B\u5B89\u5168\uFF0C\u53EF\u4EE5\u653E\u5FC3\u4F7F\u7528\uFF1B</p><p>4\u3001\u53CD\u5C04\u4F7F\u7528\u8F6F\u5F15\u7528 relectionData \u7F13\u5B58 Class \u4FE1\u606F\uFF0C\u907F\u514D\u6BCF\u6B21\u91CD\u65B0\u4ECE JVM \u83B7\u53D6\u5E26\u6765\u7684\u5F00\u9500\uFF1B</p><p>5\u3001\u53CD\u5C04\u8C03\u7528\u591A\u6B21\u751F\u6210\u65B0\u4EE3\u7406 Accessor\uFF0C\u800C\u4E14\u662F\u901A\u8FC7\u5B57\u8282\u7801\u751F\u6210\u7684\u3002\u8003\u8651\u4E86\u5378\u8F7D\u529F\u80FD\uFF0C\u6240\u4EE5\u4F1A\u4F7F\u7528\u72EC\u7ACB\u7684\u7C7B\u52A0\u8F7D\u5668\uFF1B</p><p>6\u3001\u5F53\u627E\u5230\u9700\u8981\u7684\u65B9\u6CD5\uFF0C\u90FD\u4F1A copy \u4E00\u4EFD\u51FA\u6765\uFF0C\u800C\u4E0D\u662F\u4F7F\u7528\u539F\u6765\u7684\u5B9E\u4F8B\uFF0C\u4FDD\u8BC1\u6570\u636E\u9694\u79BB\uFF1B</p><p>7\u3001\u8C03\u5EA6\u53CD\u5C04\u65B9\u6CD5\uFF0C\u6700\u7EC8\u662F\u7531 JVM \u6267\u884C<code>invoke0()</code>\u6267\u884C</p><br><p><strong>\u4E5D\u3001\u53CD\u5C04\u673A\u5236\u6267\u884C\u6D41\u7A0B</strong></p><img src="`+i+`" alt="image-20211018150544630" style="zoom:200%;"><p>1\u3001\u8FD0\u884C\u4E2D\u83B7\u53D6 Class \u5BF9\u8C61</p><p>2\u3001JVM \u8FDB\u884C\u7C7B\u5B57\u8282\u7801\u6587\u4EF6\u7684<strong>\u52A0\u8F7D/\u94FE\u63A5</strong>\uFF0C\u7136\u540E\u8FD4\u56DE Class \u5BF9\u8C61</p><p>3\u3001\u7A0B\u5E8F\u5229\u7528\u53CD\u5C04\u8C03\u7528<code>Class.new Instance()</code>\uFF0CJVM \u8FDB\u884C\u7C7B\u7684\u521D\u59CB\u5316\uFF0C\u5E76\u8FD4\u56DE\u53CD\u5C04\u521B\u5EFA\u7684\u5BF9\u8C61</p><p>4\u3001<code>Class.getMethod()</code>\u83B7\u53D6\u7C7B\u7684\u65B9\u6CD5\u65F6\uFF0CClass \u5BF9\u8C61\u5148\u8FDB\u884C\u5B89\u5168\u6743\u9650\u68C0\u67E5\uFF0C\u68C0\u67E5\u901A\u8FC7\u67E5\u8BE2\u7F13\u5B58\uFF0C\u7F13\u5B58\u4E2D\u5B58\u5728\u5BF9\u5E94\u65B9\u6CD5\u4FE1\u606F\uFF0C\u5219\u4ECE\u7F13\u5B58\u4E2D\u5C06\u65B9\u6CD5\u4FE1\u606F\u8FD4\u56DE\uFF1B\u7F13\u5B58\u4E2D\u4E0D\u5B58\u5728\uFF0C\u5219\u4ECE JVM \u4E2D\u83B7\u53D6\u5BF9\u5E94\u65B9\u6CD5\u4FE1\u606F\u5E76\u653E\u5165\u7F13\u5B58</p><p>5\u3001\u8C03\u7528<code>method.invoke()</code>\uFF0C\u9996\u5148\u8FDB\u884C\u65B9\u6CD5\u6743\u9650\u68C0\u67E5\uFF0C\u68C0\u67E5\u901A\u8FC7\u8C03\u7528 <code>invoke()</code>\u65B9\u6CD5\uFF0C</p><br><h3 id="\u8303\u578B" tabindex="-1">\u8303\u578B <a class="header-anchor" href="#\u8303\u578B" aria-hidden="true">#</a></h3><blockquote><p>\u6CDB\u578B\u7684\u672C\u8D28\u662F\u4E3A\u4E86\u53C2\u6570\u5316\u7C7B\u578B\uFF08\u5728\u4E0D\u521B\u5EFA\u65B0\u7684\u7C7B\u578B\u7684\u60C5\u51B5\u4E0B\uFF0C\u901A\u8FC7\u6CDB\u578B\u6307\u5B9A\u7684\u4E0D\u540C\u7C7B\u578B\u6765\u63A7\u5236\u5F62\u53C2\u5177\u4F53\u9650\u5236\u7684\u7C7B\u578B\uFF09\u3002\u4E5F\u5C31\u662F\u8BF4\u5728\u6CDB\u578B\u4F7F\u7528\u8FC7\u7A0B\u4E2D\uFF0C\u64CD\u4F5C\u7684\u6570\u636E\u7C7B\u578B\u88AB\u6307\u5B9A\u4E3A\u4E00\u4E2A\u53C2\u6570\uFF0C\u8FD9\u79CD\u53C2\u6570\u7C7B\u578B\u53EF\u4EE5\u7528\u5728\u7C7B\u3001\u63A5\u53E3\u548C\u65B9\u6CD5\u4E2D\uFF0C\u5206\u522B\u88AB\u79F0\u4E3A\u6CDB\u578B\u7C7B\u3001\u6CDB\u578B\u63A5\u53E3\u3001\u6CDB\u578B\u65B9\u6CD5\u3002</p></blockquote><br><p><strong>\u4E3A\u4EC0\u4E48\u4F7F\u7528\u8303\u578B</strong></p><p>1\u3001\u64CD\u4F5C\u96C6\u5408\u7C7B\u578B\u6570\u636E\u65F6\uFF0C\u82E5\u662F\u4F7F\u7528<code>Objact</code>\u7C7B\u578B\u5B58\u50A8\u6570\u636E\uFF0C\u8BFB\u53D6\u51FA\u6765\u7684\u6570\u636E\u9700\u8981\u8FDB\u884C\u5F3A\u8F6C\uFF0C\u9891\u7E41\u64CD\u4F5C\u53EF\u80FD\u6709<code>ClassCastException</code>\uFF08\u7C7B\u578B\u8F6C\u6362\u5F02\u5E38\uFF09</p><p>2\u3001\u5F15\u5165\u6CDB\u578B\u7684\u610F\u4E49\u5728\u4E8E\uFF1A<strong>\u9002\u7528\u4E8E\u591A\u79CD\u6570\u636E\u7C7B\u578B\u6267\u884C\u76F8\u540C\u7684\u4EE3\u7801</strong>\uFF08\u4EE3\u7801\u590D\u7528\uFF09</p><p>3\u3001\u6CDB\u578B\u4E2D\u7684\u7C7B\u578B\u5728\u4F7F\u7528\u65F6\u6307\u5B9A\uFF0C\u4E0D\u9700\u8981\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\uFF08<strong>\u7C7B\u578B\u5B89\u5168</strong>\uFF0C\u7F16\u8BD1\u5668\u4F1A<strong>\u68C0\u67E5\u7C7B\u578B</strong>\uFF09</p><br><p><strong>\u8303\u578B\u7684\u4F7F\u7528</strong></p><p><u><strong>1 - \u8303\u578B\u7C7B</strong></u></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">class</span> <span class="token class-name">Point</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>         <span class="token comment">// \u6B64\u5904\u53EF\u4EE5\u968F\u4FBF\u5199\u6807\u8BC6\u7B26\u53F7\uFF0CT\u662Ftype\u7684\u7B80\u79F0  </span>
    <span class="token keyword">private</span> <span class="token class-name">T</span> <span class="token keyword">var</span> <span class="token punctuation">;</span>     <span class="token comment">// var\u7684\u7C7B\u578B\u7531T\u6307\u5B9A\uFF0C\u5373\uFF1A\u7531\u5916\u90E8\u6307\u5B9A  </span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">getVar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">// \u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u7531\u5916\u90E8\u51B3\u5B9A  </span>
        <span class="token keyword">return</span> <span class="token keyword">var</span> <span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVar</span><span class="token punctuation">(</span><span class="token class-name">T</span> <span class="token keyword">var</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">// \u8BBE\u7F6E\u7684\u7C7B\u578B\u4E5F\u7531\u5916\u90E8\u51B3\u5B9A  </span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">var</span> <span class="token operator">=</span> <span class="token keyword">var</span> <span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span> 

<span class="token comment">// \u591A\u5143\u8303\u578B\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">Notepad</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>       <span class="token comment">// \u6B64\u5904\u6307\u5B9A\u4E86\u4E24\u4E2A\u6CDB\u578B\u7C7B\u578B  </span>
    <span class="token keyword">private</span> <span class="token class-name">K</span> key <span class="token punctuation">;</span>     <span class="token comment">// \u6B64\u53D8\u91CF\u7684\u7C7B\u578B\u7531\u5916\u90E8\u51B3\u5B9A  </span>
    <span class="token keyword">private</span> <span class="token class-name">V</span> value <span class="token punctuation">;</span>   <span class="token comment">// \u6B64\u53D8\u91CF\u7684\u7C7B\u578B\u7531\u5916\u90E8\u51B3\u5B9A  </span>
    <span class="token keyword">public</span> <span class="token class-name">K</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setKey</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>  
        <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key <span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token class-name">V</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>  
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value <span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><br><p><u><strong>2 - \u8303\u578B\u63A5\u53E3</strong></u></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Info</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>        <span class="token comment">// \u5728\u63A5\u53E3\u4E0A\u5B9A\u4E49\u6CDB\u578B  </span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">getVar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">// \u5B9A\u4E49\u62BD\u8C61\u65B9\u6CD5\uFF0C\u62BD\u8C61\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u5C31\u662F\u6CDB\u578B\u7C7B\u578B  </span>
<span class="token punctuation">}</span>  
<span class="token keyword">class</span> <span class="token class-name">InfoImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Info</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>   <span class="token comment">// \u5B9A\u4E49\u6CDB\u578B\u63A5\u53E3\u7684\u5B50\u7C7B  </span>
    <span class="token keyword">private</span> <span class="token class-name">T</span> <span class="token keyword">var</span> <span class="token punctuation">;</span>             <span class="token comment">// \u5B9A\u4E49\u5C5E\u6027  </span>
    <span class="token keyword">public</span> <span class="token class-name">InfoImpl</span><span class="token punctuation">(</span><span class="token class-name">T</span> <span class="token keyword">var</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token comment">// \u901A\u8FC7\u6784\u9020\u65B9\u6CD5\u8BBE\u7F6E\u5C5E\u6027\u5185\u5BB9  </span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVar</span><span class="token punctuation">(</span><span class="token keyword">var</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVar</span><span class="token punctuation">(</span><span class="token class-name">T</span> <span class="token keyword">var</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">var</span> <span class="token operator">=</span> <span class="token keyword">var</span> <span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">getVar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">var</span> <span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><br><p><u><strong>3 - \u8303\u578B\u65B9\u6CD5</strong></u></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">double</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">T</span> a<span class="token punctuation">,</span> <span class="token class-name">T</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">&quot;+&quot;</span> <span class="token operator">+</span> b <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>\u26A0\uFE0F<strong>\u4EC0\u4E48\u8981\u4F7F\u7528\u6CDB\u578B\u65B9\u6CD5\u5462</strong>\uFF1F</p></blockquote><p>\u56E0\u4E3A\u6CDB\u578B\u7C7B\u8981\u5728\u5B9E\u4F8B\u5316\u7684\u65F6\u5019\u5C31\u6307\u660E\u7C7B\u578B\uFF0C\u5982\u679C\u60F3\u6362\u4E00\u79CD\u7C7B\u578B\uFF0C\u4E0D\u5F97\u4E0D\u91CD\u65B0 new \u4E00\u6B21\uFF0C\u53EF\u80FD\u4E0D\u591F\u7075\u6D3B\uFF1B\u800C\u6CDB\u578B\u65B9\u6CD5\u53EF\u4EE5\u5728\u8C03\u7528\u7684\u65F6\u5019\u6307\u660E\u7C7B\u578B\uFF0C\u66F4\u52A0\u7075\u6D3B\u3002</p><br><p><u><strong>4 - \u8303\u578B\u6570\u7EC4</strong></u></p><blockquote><p>\u6570\u7EC4\u5B9E\u9645\u4E0A\u5E76\u4E0D\u652F\u6301\u6CDB\u578B\u3002\u65E0\u8BBA\u6211\u4EEC\u901A\u8FC7<code>new ArrayList[10]</code> \u7684\u5F62\u5F0F\u8FD8\u662F\u901A\u8FC7\u6CDB\u578B\u901A\u914D\u7B26\u7684\u5F62\u5F0F\u521D\u59CB\u5316\u6CDB\u578B\u6570\u7EC4\u5B9E\u4F8B\u90FD\u662F\u5B58\u5728\u8B66\u544A\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4EC5\u4EC5\u8BED\u6CD5\u5408\u683C\uFF0C\u8FD0\u884C\u65F6\u6F5C\u5728\u7684\u98CE\u9669\u9700\u8981\u6211\u4EEC\u81EA\u5DF1\u6765\u627F\u62C5\uFF0C\u56E0\u6B64\u90A3\u4E9B\u65B9\u5F0F\u521D\u59CB\u5316\u6CDB\u578B\u6570\u7EC4\u90FD\u4E0D\u662F\u6700\u4F18\u96C5\u7684\u65B9\u5F0F\u3002</p></blockquote><p>\u5728\u4F7F\u7528\u5230\u6CDB\u578B\u6570\u7EC4\u7684\u573A\u666F\u4E0B\u5E94\u8BE5\u5C3D\u91CF\u4F7F\u7528\u5217\u8868\u96C6\u5408\u66FF\u6362\uFF0C\u6B64\u5916\u4E5F\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528 <code>java.lang.reflect.Array.newInstance(Class&lt;T&gt; componentType, int length)</code> \u65B9\u6CD5\u6765\u521B\u5EFA\u4E00\u4E2A\u5177\u6709\u6307\u5B9A\u7C7B\u578B\u548C\u7EF4\u5EA6\u7684\u6570\u7EC4</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayWithTypeToken</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ArrayWithTypeToken</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> type<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        array <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">T</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        array<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//...</span>

<span class="token class-name">ArrayWithTypeToken</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> arrayToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayWithTypeToken</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> arrayToken<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><br><p><u><strong>5 - \u8303\u578B\u7684\u4E0A\u4E0B\u9650</strong></u></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">class</span> <span class="token class-name">Info</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>    <span class="token comment">// \u6B64\u5904\u6CDB\u578B\u53EA\u80FD\u662F\u6570\u5B57\u7C7B\u578B</span>
    <span class="token keyword">private</span> <span class="token class-name">T</span> <span class="token keyword">var</span> <span class="token punctuation">;</span>        <span class="token comment">// \u5B9A\u4E49\u6CDB\u578B\u53D8\u91CF</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVar</span><span class="token punctuation">(</span><span class="token class-name">T</span> <span class="token keyword">var</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">var</span> <span class="token operator">=</span> <span class="token keyword">var</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">getVar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">var</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// \u76F4\u63A5\u6253\u5370</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">var</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53EA\u80FD\u63A5\u6536String\u6216Object\u7C7B\u578B\u7684\u6CDB\u578B\uFF0CString\u7C7B\u7684\u7236\u7C7B\u53EA\u6709Object\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token class-name">Info</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> temp<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>temp <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>\u8303\u578B\u4E0A\u4E0B\u9650\u7EC6\u8282</strong></p><p>1\u3001<code>&lt;?&gt;</code> \u65E0\u9650\u5236\u901A\u914D\u7B26</p><p>2\u3001<code>&lt;? extends E&gt;</code> extends \u5173\u952E\u5B57\u58F0\u660E\u4E86\u7C7B\u578B\u7684\u4E0A\u754C\uFF0C\u8868\u793A\u53C2\u6570\u5316\u7684\u7C7B\u578B\u53EF\u80FD\u662F\u6240\u6307\u5B9A\u7684\u7C7B\u578B\uFF0C\u6216\u8005\u662F\u6B64\u7C7B\u578B\u7684\u5B50\u7C7B</p><p>3\u3001<code>&lt;? super E&gt;</code> super \u5173\u952E\u5B57\u58F0\u660E\u4E86\u7C7B\u578B\u7684\u4E0B\u754C\uFF0C\u8868\u793A\u53C2\u6570\u5316\u7684\u7C7B\u578B\u53EF\u80FD\u662F\u6307\u5B9A\u7684\u7C7B\u578B\uFF0C\u6216\u8005\u662F\u6B64\u7C7B\u578B\u7684\u7236\u7C7B</p><p>4\u3001\u4E3A\u4E86\u83B7\u5F97\u6700\u5927\u9650\u5EA6\u7684\u7075\u6D3B\u6027\uFF0C\u8981\u5728\u8868\u793A \u751F\u4EA7\u8005\u6216\u8005\u6D88\u8D39\u8005 \u7684\u8F93\u5165\u53C2\u6570\u4E0A\u4F7F\u7528\u901A\u914D\u7B26\uFF0C\u4F7F\u7528\u7684\u89C4\u5219\u5C31\u662F\uFF1A<strong>\u751F\u4EA7\u8005\u6709\u4E0A\u9650\u3001\u6D88\u8D39\u8005\u6709\u4E0B\u9650</strong> \u3002 \u5982\u679C\u65E2\u662F\u751F\u4EA7\u53C8\u662F\u6D88\u8D39\uFF0C\u90A3\u4F7F\u7528\u901A\u914D\u7B26\u5C31\u6CA1\u4EC0\u4E48\u610F\u4E49\u4E86\uFF0C\u56E0\u4E3A\u4F60\u9700\u8981\u7684\u662F\u7CBE\u786E\u7684\u53C2\u6570\u7C7B\u578B\u3002</p><p>5\u3001\u4F7F\u7528<code>&amp;</code>\u7B26\u53F7</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5DE5\u8D44\u4F4E\u4E8E2500\u5143\u7684\u4E0A\u6591\u65CF\u5E76\u4E14\u7AD9\u7ACB\u7684\u4E58\u5BA2\u8F66\u7968\u62538\u6298</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Staff</span> <span class="token operator">&amp;</span> <span class="token class-name">Passenger</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">discount</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">2500</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">isStanding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u606D\u559C\u4F60\uFF01\u60A8\u7684\u8F66\u7968\u6253\u516B\u6298\uFF01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">discount</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Me</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><p><u><strong>6 - \u8303\u578B\u4F7F\u7528\u7EC6\u8282</strong></u></p><p>1\u3001\u5B9A\u4E49\u6CDB\u578B\u65B9\u6CD5\u65F6\uFF0C\u5FC5\u987B\u5728\u8FD4\u56DE\u503C\u524D\u8FB9\u52A0\u4E00\u4E2A<code>&lt;T&gt;</code>\uFF0C\u6765\u58F0\u660E\u8FD9\u662F\u4E00\u4E2A\u6CDB\u578B\u65B9\u6CD5\uFF0C\u6301\u6709\u4E00\u4E2A\u6CDB\u578B<code>T</code>\uFF0C\u7136\u540E\u624D\u53EF\u4EE5\u7528\u6CDB\u578B<code>T</code>\u4F5C\u4E3A\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u3002</p><p>2\u3001\u65E2\u7136\u662F\u6CDB\u578B\u65B9\u6CD5\uFF0C\u5C31\u4EE3\u8868\u7740\u6211\u4EEC\u4E0D\u77E5\u9053\u5177\u4F53\u7684\u7C7B\u578B\u662F\u4EC0\u4E48\uFF0C\u4E5F\u4E0D\u77E5\u9053\u6784\u9020\u65B9\u6CD5\u5982\u4F55\uFF0C\u56E0\u6B64\u6CA1\u6709\u529E\u6CD5\u53BB new \u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4F46\u53EF\u4EE5\u5229\u7528<code>newInstance()</code>\u65B9\u6CD5\u53BB\u521B\u5EFA\u5BF9\u8C61\uFF0C\u4E5F\u5C31\u662F\u5229\u7528\u53CD\u5C04\u521B\u5EFA\u5BF9\u8C61\u3002</p><p>3\u3001\u6CDB\u578B\u7C7B\u578B\u4E0D\u80FD\u7528\u4E8E\u9759\u6001\u65B9\u6CD5\u548C\u9759\u6001\u53D8\u91CF</p><p>4\u3001<code>&lt;T&gt;</code>\u4E0D\u80FD\u662F\u57FA\u672C\u7C7B\u578B\uFF0C\u53EA\u80FD\u7528\u57FA\u672C\u7C7B\u578B\u7684\u5305\u88C5\u7C7B</p><p>5\u3001\u65E0\u6CD5\u5224\u65AD\u6CDB\u578B\u7C7B\u7684\u7C7B\u578B\uFF0C\u5373\u65E0\u6CD5\u4F7F\u7528<code>instance of</code>\u5173\u952E\u5B57</p><p>6\u3001\u8303\u578B\u4E2D\u5E38\u7528\u5B57\u7B26\u7684\u542B\u4E49</p><p>1\uFF09E - Element (\u5728\u96C6\u5408\u4E2D\u4F7F\u7528\uFF0C\u56E0\u4E3A\u96C6\u5408\u4E2D\u5B58\u653E\u7684\u662F\u5143\u7D20)</p><p>2\uFF09T - Type\uFF08Java \u7C7B\uFF09</p><p>3\uFF09K - Key\uFF08\u952E\uFF09</p><p>4\uFF09V - Value\uFF08\u503C\uFF09</p><p>5\uFF09N - Number\uFF08\u6570\u503C\u7C7B\u578B\uFF09</p><p>6\uFF09\uFF1F - \u8868\u793A\u4E0D\u786E\u5B9A\u7684 Java \u7C7B\u578B\uFF08\u65E0\u9650\u5236\u901A\u914D\u7B26\u7C7B\u578B\uFF09</p><p>7\uFF09S\u3001U\u3001V - 2nd\u30013rd\u30014th Type</p><br><p><strong><u>7 - \u5728\u5F02\u5E38\u4E2D\u4F7F\u7528\u8303\u578B</u></strong></p><p>1\u3001<strong>\u4E0D\u80FD\u629B\u51FA\u4E5F\u4E0D\u80FD\u6355\u83B7\u6CDB\u578B\u7C7B\u7684\u5BF9\u8C61</strong>\u3002\u4E8B\u5B9E\u4E0A\uFF0C\u6CDB\u578B\u7C7B\u6269\u5C55 Throwable \u90FD\u4E0D\u5408\u6CD5</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u5F02\u5E38\u90FD\u662F\u5728\u8FD0\u884C\u65F6\u6355\u83B7\u548C\u629B\u51FA\u7684\uFF0C\u800C\u5728\u7F16\u8BD1\u7684\u65F6\u5019\uFF0C\u6CDB\u578B\u4FE1\u606F\u5168\u90FD\u4F1A\u88AB\u64E6\u9664\u6389</span>
<span class="token keyword">try</span><span class="token punctuation">{</span>
  <span class="token comment">// \u3002\u3002\u3002</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Problem</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u3002\u3002\u3002</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Problem</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Number</span><span class="token punctuation">&gt;</span></span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u3002\u3002\u3002</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7C7B\u578B\u4FE1\u606F\u88AB\u64E6\u9664\u540E\uFF0C\u90A3\u4E48\u4E24\u4E2A\u5730\u65B9\u7684 catch \u90FD\u53D8\u4E3A\u539F\u59CB\u7C7B\u578B Object\uFF0C\u90A3\u4E48\u4E5F\u5C31\u662F\u8BF4\uFF0C\u8FD9\u4E24\u4E2A\u5730\u65B9\u7684 catch \u53D8\u7684\u4E00\u6A21\u4E00\u6837</span>
<span class="token keyword">try</span><span class="token punctuation">{</span>
  <span class="token comment">// \u3002\u3002\u3002</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Problem</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u3002\u3002\u3002</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Problem</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u3002\u3002\u3002</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>2\u3001<strong>\u4E0D\u80FD\u5728 catch \u5B50\u53E5\u4E2D\u4F7F\u7528\u6CDB\u578B\u53D8\u91CF</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">doWork</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">T</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u7F16\u8BD1\u9519\u8BEF</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u56E0\u4E3A\u6CDB\u578B\u4FE1\u606F\u5728\u7F16\u8BD1\u7684\u65F6\u5019\u5DF2\u7ECF\u53D8\u5473\u539F\u59CB\u7C7B\u578B\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4E0A\u9762\u7684 T \u4F1A\u53D8\u4E3A\u539F\u59CB\u7C7B\u578B Throwable</span>

<span class="token comment">// \u6839\u636E\u5F02\u5E38\u6355\u83B7\u7684\u539F\u5219\uFF0C\u4E00\u5B9A\u662F\u5B50\u7C7B\u5728\u524D\u9762\uFF0C\u7236\u7C7B\u5728\u540E\u9762\uFF0C\u90A3\u4E48\u4E0A\u9762\u5C31\u8FDD\u80CC\u4E86\u8FD9\u4E2A\u539F\u5219</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">doWork</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">T</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u7F16\u8BD1\u9519\u8BEF</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IndexOutOfBounds</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>                         
<span class="token punctuation">}</span>

<span class="token comment">// \u5728\u5F02\u5E38\u58F0\u660E\u4E2D\u53EF\u4EE5\u4F7F\u7528\u7C7B\u578B\u53D8\u91CF\u3002\u4E0B\u9762\u65B9\u6CD5\u662F\u5408\u6CD5\u7684</span>
<span class="token keyword">public</span> <span class="token keyword">static</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">doWork</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span><span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> realCause<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t<span class="token punctuation">.</span><span class="token function">initCause</span><span class="token punctuation">(</span>realCause<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> t<span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><br><p><strong><u>8 - \u83B7\u53D6\u8303\u578B\u7684\u53C2\u6570\u7C7B\u578B</u></strong></p><blockquote><p>\u901A\u8FC7\u53CD\u5C04\uFF08<code>java.lang.reflect.Type</code>\uFF09\u83B7\u53D6</p></blockquote><p><code>java.lang.reflect.Type</code>\u662F Java \u4E2D\u6240\u6709\u7C7B\u578B\u7684\u516C\u5171\u9AD8\u7EA7\u63A5\u53E3\uFF0C\u4EE3\u8868\u4E86Java\u4E2D\u7684\u6240\u6709\u7C7B\u578B\u3002</p><p>Type \u4F53\u7CFB\u4E2D\u7C7B\u578B\u7684\u5305\u62EC\uFF1A\u6570\u7EC4\u7C7B\u578B\uFF08GenericArrayType\uFF09\u3001\u53C2\u6570\u5316\u7C7B\u578B\uFF08ParameterizedType\uFF09\u3001\u7C7B\u578B\u53D8\u91CF\uFF08TypeVariable\uFF09\u3001\u901A\u914D\u7B26\u7C7B\u578B\uFF08WildcardType\uFF09\u3001\u539F\u59CB\u7C7B\u578B\uFF08Class\uFF09</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericType</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">T</span> data<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setData</span><span class="token punctuation">(</span><span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GenericType</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> genericType <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GenericType</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">Type</span> superclass <span class="token operator">=</span> genericType<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getGenericSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// getActualTypeArguments \u8FD4\u56DE\u786E\u5207\u7684\u6CDB\u578B\u53C2\u6570, \u5982Map&lt;String, Integer&gt;\u8FD4\u56DE[String, Integer]</span>
        <span class="token class-name">Type</span> type <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ParameterizedType</span><span class="token punctuation">)</span> superclass<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getActualTypeArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// class java.lang.String</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// ParameterizedType.java</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ParameterizedType</span> <span class="token keyword">extends</span> <span class="token class-name">Type</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD4\u56DE\u786E\u5207\u7684\u6CDB\u578B\u53C2\u6570, \u5982 Map&lt;String, Integer&gt; \u8FD4\u56DE [String, Integer]</span>
    <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getActualTypeArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8FD4\u56DE\u5F53\u524D Class \u6216 interface \u58F0\u660E\u7684\u7C7B\u578B\uFF0C\u5982List&lt;?&gt; \u8FD4\u56DE List</span>
    <span class="token class-name">Type</span> <span class="token function">getRawType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8FD4\u56DE\u6240\u5C5E\u7C7B\u578B\uFF0C\u9876\u7EA7\u7C7B\u578B\u5C06\u8FD4\u56DEnull </span>
    <span class="token class-name">Type</span> <span class="token function">getOwnerType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><br><p><strong>\u6DF1\u5165\u7406\u89E3\u8303\u578B</strong></p><p><u><strong>1 - \u5173\u4E8E\u4F2A\u8303\u578B</strong></u></p><blockquote><p>\u5982\u4F55\u7406\u89E3Java\u4E2D\u7684\u6CDB\u578B\u662F\u4F2A\u6CDB\u578B\u2753</p></blockquote><p>Java \u6CDB\u578B\u8FD9\u4E2A\u7279\u6027\u662F\u4ECE JDK 1.5 \u624D\u5F00\u59CB\u52A0\u5165\u7684\uFF0C\u56E0\u6B64\u4E3A\u4E86\u517C\u5BB9\u4E4B\u524D\u7684\u7248\u672C\uFF0CJava \u6CDB\u578B\u7684\u5B9E\u73B0\u91C7\u53D6\u4E86==<strong>\u4F2A\u6CDB\u578B</strong>==\u7684\u7B56\u7565\uFF0C\u5373 Java \u5728\u8BED\u6CD5\u4E0A\u652F\u6301\u6CDB\u578B\uFF0C\u4F46\u662F\u5728\u7F16\u8BD1\u9636\u6BB5\u4F1A\u8FDB\u884C\u6240\u8C13\u7684==<strong>\u7C7B\u578B\u64E6\u9664</strong>==\uFF08Type Erasure\uFF09\uFF0C\u5C06\u6240\u6709\u7684\u6CDB\u578B\u8868\u793A\uFF08\u5C16\u62EC\u53F7\u4E2D\u7684\u5185\u5BB9\uFF09\u90FD\u66FF\u6362\u4E3A\u5177\u4F53\u7684\u7C7B\u578B\uFF08\u5176\u5BF9\u5E94\u7684\u539F\u751F\u6001\u7C7B\u578B\uFF09\uFF0C\u5C31\u50CF\u5B8C\u5168\u6CA1\u6709\u6CDB\u578B\u4E00\u6837\u3002\u7406\u89E3\u7C7B\u578B\u64E6\u9664\u5BF9\u4E8E\u7528\u597D\u6CDB\u578B\u662F\u5F88\u6709\u5E2E\u52A9\u7684\uFF0C\u5C24\u5176\u662F\u4E00\u4E9B\u770B\u8D77\u6765\u201C\u7591\u96BE\u6742\u75C7\u201D\u7684\u95EE\u9898\uFF0C\u5F04\u660E\u767D\u4E86\u7C7B\u578B\u64E6\u9664\u4E5F\u5C31\u8FCE\u5203\u800C\u89E3\u4E86\u3002</p><br><p><u><strong>2 - \u6CDB\u578B\u4E2D\u7C7B\u578B\u64E6\u9664</strong></u></p><p>\u539F\u5219\uFF1A</p><p>1\u3001\u6D88\u9664\u7C7B\u578B\u53C2\u6570\u58F0\u660E\uFF0C\u5373\u5220\u9664<code>&lt;&gt;</code>\u53CA\u5176\u5305\u56F4\u7684\u90E8\u5206\u3002</p><p>2\u3001\u6839\u636E\u7C7B\u578B\u53C2\u6570\u7684\u4E0A\u4E0B\u754C\u63A8\u65AD\u5E76\u66FF\u6362\u6240\u6709\u7684\u7C7B\u578B\u53C2\u6570\u4E3A\u539F\u751F\u6001\u7C7B\u578B\uFF0C\u5982\u679C\u7C7B\u578B\u53C2\u6570\u662F\u65E0\u9650\u5236\u901A\u914D\u7B26\u6216\u6CA1\u6709\u4E0A\u4E0B\u754C\u9650\u5B9A\u5219\u66FF\u6362\u4E3A Object\uFF0C\u5982\u679C\u5B58\u5728\u4E0A\u4E0B\u754C\u9650\u5B9A\u5219\u6839\u636E\u5B50\u7C7B\u66FF\u6362\u539F\u5219\u53D6\u7C7B\u578B\u53C2\u6570\u7684\u6700\u5DE6\u8FB9\u9650\u5B9A\u7C7B\u578B\uFF08\u5373\u7236\u7C7B\uFF09\u3002</p><p>3\u3001\u4E3A\u4E86\u4FDD\u8BC1\u7C7B\u578B\u5B89\u5168\uFF0C\u5FC5\u8981\u65F6\u63D2\u5165\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\u4EE3\u7801\u3002</p><p>4\u3001\u81EA\u52A8\u4EA7\u751F==\u6865\u63A5\u65B9\u6CD5==\u4EE5\u4FDD\u8BC1\u64E6\u9664\u7C7B\u578B\u540E\u7684\u4EE3\u7801\u4ECD\u7136\u5177\u6709\u6CDB\u578B\u7684==\u591A\u6001\u6027==\u3002</p><br><p><strong>\u8BC1\u660E\u7C7B\u578B\u64E6\u9664</strong></p><p>1\u3001\u539F\u59CB\u7C7B\u578B\u76F8\u7B49</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list1<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> list2<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u5B9A\u4E49\u4E86\u4E24\u4E2A ArrayList \u6570\u7EC4\uFF0C\u4E0D\u8FC7\u4E00\u4E2A\u662F<code>ArrayList&lt;String&gt;</code>\u6CDB\u578B\u7C7B\u578B\u7684\uFF0C\u53EA\u80FD\u5B58\u50A8\u5B57\u7B26\u4E32\uFF1B\u4E00\u4E2A\u662F<code>ArrayList&lt;Integer&gt;</code>\u6CDB\u578B\u7C7B\u578B\u7684\uFF0C\u53EA\u80FD\u5B58\u50A8\u6574\u6570\uFF0C\u6700\u540E\uFF0C\u6211\u4EEC\u901A\u8FC7 list1 \u5BF9\u8C61\u548C list2 \u5BF9\u8C61\u7684<code>getClass()</code>\u65B9\u6CD5\u83B7\u53D6\u4ED6\u4EEC\u7684\u7C7B\u7684\u4FE1\u606F\uFF0C\u6700\u540E\u53D1\u73B0\u7ED3\u679C\u4E3A true\u3002\u8BF4\u660E\u6CDB\u578B\u7C7B\u578B String \u548C Integer \u90FD\u88AB\u64E6\u9664\u6389\u4E86\uFF0C\u53EA\u5269\u4E0B\u539F\u59CB\u7C7B\u578B\u3002</p><br><p>2\u3001\u901A\u8FC7\u53CD\u5C04\u6DFB\u52A0\u5176\u5B83\u7C7B\u578B\u5143\u7D20</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u8FD9\u6837\u8C03\u7528 add \u65B9\u6CD5\u53EA\u80FD\u5B58\u50A8\u6574\u5F62\uFF0C\u56E0\u4E3A\u6CDB\u578B\u7C7B\u578B\u7684\u5B9E\u4F8B\u4E3A Integer</span>

        list<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;add&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token string">&quot;asd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5728\u7A0B\u5E8F\u4E2D\u5B9A\u4E49\u4E86\u4E00\u4E2A ArrayList \u6CDB\u578B\u7C7B\u578B\u5B9E\u4F8B\u5316\u4E3A Integer \u5BF9\u8C61\uFF0C\u5982\u679C\u76F4\u63A5\u8C03\u7528<code>add()</code>\u65B9\u6CD5\uFF0C\u90A3\u4E48\u53EA\u80FD\u5B58\u50A8\u6574\u6570\u6570\u636E\uFF0C\u4E0D\u8FC7\u5F53\u6211\u4EEC\u5229\u7528\u53CD\u5C04\u8C03\u7528<code>add()</code>\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u5374\u53EF\u4EE5\u5B58\u50A8\u5B57\u7B26\u4E32\uFF0C\u8FD9\u8BF4\u660E\u4E86 Integer \u6CDB\u578B\u5B9E\u4F8B\u5728\u7F16\u8BD1\u4E4B\u540E\u88AB\u64E6\u9664\u6389\u4E86\uFF0C\u53EA\u4FDD\u7559\u4E86\u539F\u59CB\u7C7B\u578B\u3002</p><br><h2 id="\u591A\u7EBF\u7A0B\u4E0E\u5E76\u53D1" tabindex="-1">\u591A\u7EBF\u7A0B\u4E0E\u5E76\u53D1 <a class="header-anchor" href="#\u591A\u7EBF\u7A0B\u4E0E\u5E76\u53D1" aria-hidden="true">#</a></h2><br><h3 id="\u591A\u7EBF\u7A0B" tabindex="-1">\u591A\u7EBF\u7A0B <a class="header-anchor" href="#\u591A\u7EBF\u7A0B" aria-hidden="true">#</a></h3><h4 id="\u591A\u7EBF\u7A0B\u57FA\u7840" tabindex="-1">\u591A\u7EBF\u7A0B\u57FA\u7840 <a class="header-anchor" href="#\u591A\u7EBF\u7A0B\u57FA\u7840" aria-hidden="true">#</a></h4><p><u><strong>1 - \u4E3A\u4EC0\u4E48\u9700\u8981\u591A\u7EBF\u7A0B</strong></u></p><p>\u4F17\u6240\u5468\u77E5\uFF0CCPU\u3001\u5185\u5B58\u3001I/O \u8BBE\u5907\u7684\u901F\u5EA6\u662F\u6709\u6781\u5927\u5DEE\u5F02\u7684\uFF0C\u4E3A\u4E86\u5408\u7406\u5229\u7528 CPU \u7684\u9AD8\u6027\u80FD\uFF0C\u5E73\u8861\u8FD9\u4E09\u8005\u7684\u901F\u5EA6\u5DEE\u5F02\uFF0C\u8BA1\u7B97\u673A\u4F53\u7CFB\u7ED3\u6784\u3001\u64CD\u4F5C\u7CFB\u7EDF\u3001\u7F16\u8BD1\u7A0B\u5E8F\u90FD\u505A\u51FA\u4E86\u8D21\u732E\uFF0C\u4E3B\u8981\u4F53\u73B0\u4E3A\uFF1A</p><p>1\u3001CPU \u589E\u52A0\u4E86\u7F13\u5B58\uFF0C\u4EE5\u5747\u8861\u4E0E\u5185\u5B58\u7684\u901F\u5EA6\u5DEE\u5F02\uFF1B// \u5BFC\u81F4 <code>\u53EF\u89C1\u6027</code>\u95EE\u9898</p><p>2\u3001\u64CD\u4F5C\u7CFB\u7EDF\u589E\u52A0\u4E86\u8FDB\u7A0B\u3001\u7EBF\u7A0B\uFF0C\u4EE5\u5206\u65F6\u590D\u7528 CPU\uFF0C\u8FDB\u800C\u5747\u8861 CPU \u4E0E I/O \u8BBE\u5907\u7684\u901F\u5EA6\u5DEE\u5F02\uFF1B// \u5BFC\u81F4 <code>\u539F\u5B50\u6027</code>\u95EE\u9898</p><p>3\u3001\u7F16\u8BD1\u7A0B\u5E8F\u4F18\u5316\u6307\u4EE4\u6267\u884C\u6B21\u5E8F\uFF0C\u4F7F\u5F97\u7F13\u5B58\u80FD\u591F\u5F97\u5230\u66F4\u52A0\u5408\u7406\u5730\u5229\u7528\u3002// \u5BFC\u81F4 <code>\u6709\u5E8F\u6027</code>\u95EE\u9898</p><blockquote><p>\u26A0\uFE0F \u5982\u679C\u591A\u4E2A\u7EBF\u7A0B\u5BF9\u540C\u4E00\u4E2A\u5171\u4EAB\u6570\u636E\u8FDB\u884C\u8BBF\u95EE\u800C\u4E0D\u91C7\u53D6\u540C\u6B65\u64CD\u4F5C\u7684\u8BDD\uFF0C\u90A3\u4E48\u64CD\u4F5C\u7684\u7ED3\u679C\u662F\u4E0D\u4E00\u81F4\u7684\u3002</p></blockquote><br><p><u><strong>2 - \u7531\u4E8E\u591A\u7EBF\u7A0B\u64CD\u4F5C\u5F15\u51FA\u7684\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898</strong></u></p><blockquote><p>\u4E00\u4E2A\u7C7B\u5728\u53EF\u4EE5\u88AB\u591A\u4E2A\u7EBF\u7A0B\u5B89\u5168\u8C03\u7528\u65F6\u5C31\u662F\u7EBF\u7A0B\u5B89\u5168\u7684</p></blockquote><p><strong>\u7EBF\u7A0B\u5B89\u5168\u4E0D\u662F\u4E00\u4E2A\u975E\u771F\u5373\u5047\u7684\u547D\u9898</strong>\uFF0C\u53EF\u4EE5\u5C06\u5171\u4EAB\u6570\u636E\u6309\u7167\u5B89\u5168\u7A0B\u5EA6\u7684\u5F3A\u5F31\u987A\u5E8F\u5206\u6210\u4EE5\u4E0B\u4E94\u7C7B\uFF1A\u4E0D\u53EF\u53D8\u3001\u7EDD\u5BF9\u7EBF\u7A0B\u5B89\u5168\u3001\u76F8\u5BF9\u7EBF\u7A0B\u5B89\u5168\u3001\u7EBF\u7A0B\u517C\u5BB9\u548C\u7EBF\u7A0B\u5BF9\u7ACB\u3002</p><p><strong>1\u3001\u4E0D\u53EF\u53D8</strong>\uFF08Immutable\uFF09</p><p>\u4E0D\u53EF\u53D8\u7684\u5BF9\u8C61\u4E00\u5B9A\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u4E0D\u9700\u8981\u518D\u91C7\u53D6\u4EFB\u4F55\u7684\u7EBF\u7A0B\u5B89\u5168\u4FDD\u969C\u63AA\u65BD\u3002\u53EA\u8981\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\u5BF9\u8C61\u88AB\u6B63\u786E\u5730\u6784\u5EFA\u51FA\u6765\uFF0C\u6C38\u8FDC\u4E5F\u4E0D\u4F1A\u770B\u5230\u5B83\u5728\u591A\u4E2A\u7EBF\u7A0B\u4E4B\u4E2D\u5904\u4E8E\u4E0D\u4E00\u81F4\u7684\u72B6\u6001\u3002\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\uFF0C\u5E94\u5F53\u5C3D\u91CF\u4F7F\u5BF9\u8C61\u6210\u4E3A\u4E0D\u53EF\u53D8\uFF0C\u6765\u6EE1\u8DB3\u7EBF\u7A0B\u5B89\u5168\u3002</p><p>\u4E0D\u53EF\u53D8\u7684\u7C7B\u578B\uFF1A</p><ul><li>final \u5173\u952E\u5B57\u4FEE\u9970\u7684\u57FA\u672C\u6570\u636E\u7C7B\u578B</li><li>String</li><li>\u679A\u4E3E\u7C7B\u578B</li><li>Number \u90E8\u5206\u5B50\u7C7B\uFF0C\u5982 Long \u548C Double \u7B49\u6570\u503C\u5305\u88C5\u7C7B\u578B\uFF0CBigInteger \u548C BigDecimal \u7B49\u5927\u6570\u636E\u7C7B\u578B\u3002\u4F46\u540C\u4E3A Number \u7684\u539F\u5B50\u7C7B AtomicInteger \u548C AtomicLong \u662F\u53EF\u53D8\u7684</li><li>\u5BF9\u4E8E\u96C6\u5408\u7C7B\u578B\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>Collections.unmodifiableXXX()</code>\u65B9\u6CD5\u6765\u83B7\u53D6\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\u96C6\u5408</li></ul><br><p><strong>2\u3001\u7EDD\u5BF9\u7EBF\u7A0B\u5B89\u5168</strong>\uFF0C\u4E0D\u7BA1\u8FD0\u884C\u65F6\u73AF\u5883\u5982\u4F55\uFF0C\u8C03\u7528\u8005\u90FD\u4E0D\u9700\u8981\u4EFB\u4F55\u989D\u5916\u7684\u540C\u6B65\u63AA\u65BD\u3002</p><p><strong>3\u3001\u76F8\u5BF9\u7EBF\u7A0B\u5B89\u5168</strong></p><p>\u76F8\u5BF9\u7EBF\u7A0B\u5B89\u5168\u9700\u8981\u4FDD\u8BC1\u5BF9\u8FD9\u4E2A\u5BF9\u8C61\u5355\u72EC\u7684\u64CD\u4F5C\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u5728\u8C03\u7528\u7684\u65F6\u5019\u4E0D\u9700\u8981\u505A\u989D\u5916\u7684\u4FDD\u969C\u63AA\u65BD\u3002\u4F46\u662F\u5BF9\u4E8E\u4E00\u4E9B\u7279\u5B9A\u987A\u5E8F\u7684\u8FDE\u7EED\u8C03\u7528\uFF0C\u5C31\u53EF\u80FD\u9700\u8981\u5728\u8C03\u7528\u7AEF\u4F7F\u7528\u989D\u5916\u7684\u540C\u6B65\u624B\u6BB5\u6765\u4FDD\u8BC1\u8C03\u7528\u7684\u6B63\u786E\u6027\u3002</p><p>\u5982\u679C\u5220\u9664\u5143\u7D20\u7684\u7EBF\u7A0B\u5220\u9664\u4E86 List \u7684\u4E00\u4E2A\u5143\u7D20\uFF0C\u800C\u83B7\u53D6\u5143\u7D20\u7684\u7EBF\u7A0B\u8BD5\u56FE\u8BBF\u95EE\u4E00\u4E2A\u5DF2\u7ECF\u88AB\u5220\u9664\u7684\u5143\u7D20\uFF0C\u90A3\u4E48\u5C31\u4F1A\u629B\u51FA <code>ArrayIndexOutOfBoundsException</code>\u3002\u5982\u679C\u8981\u4FDD\u8BC1\u4EE3\u7801\u80FD\u6B63\u786E\u6267\u884C\u4E0B\u53BB\uFF0C\u5C31\u9700\u8981\u5BF9\u5220\u9664\u5143\u7D20\u548C\u83B7\u53D6\u5143\u7D20\u7684\u4EE3\u7801\u8FDB\u884C\u540C\u6B65</p><p><strong>4\u3001\u7EBF\u7A0B\u517C\u5BB9</strong></p><p>\u7EBF\u7A0B\u517C\u5BB9\u662F\u6307\u5BF9\u8C61\u672C\u8EAB\u5E76\u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u4F46\u662F\u53EF\u4EE5\u901A\u8FC7\u5728\u8C03\u7528\u7AEF\u6B63\u786E\u5730\u4F7F\u7528\u540C\u6B65\u624B\u6BB5\u6765\u4FDD\u8BC1\u5BF9\u8C61\u5728\u5E76\u53D1\u73AF\u5883\u4E2D\u53EF\u4EE5\u5B89\u5168\u5730\u4F7F\u7528\uFF0C\u6211\u4EEC\u5E73\u5E38\u8BF4\u4E00\u4E2A\u7C7B\u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u7EDD\u5927\u591A\u6570\u65F6\u5019\u6307\u7684\u662F\u8FD9\u4E00\u79CD\u60C5\u51B5\u3002Java API \u4E2D\u5927\u90E8\u5206\u7684\u7C7B\u90FD\u662F\u5C5E\u4E8E\u7EBF\u7A0B\u517C\u5BB9\u7684\uFF0C\u5982\u4E0E\u524D\u9762\u7684 Vector \u548C HashTable \u76F8\u5BF9\u5E94\u7684\u96C6\u5408\u7C7B ArrayList \u548C HashMap \u7B49\u3002</p><p><strong>5\u3001\u7EBF\u7A0B\u5BF9\u7ACB</strong></p><p>\u7EBF\u7A0B\u5BF9\u7ACB\u662F\u6307\u65E0\u8BBA\u8C03\u7528\u7AEF\u662F\u5426\u91C7\u53D6\u4E86\u540C\u6B65\u63AA\u65BD\uFF0C\u90FD\u65E0\u6CD5\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E2D\u5E76\u53D1\u4F7F\u7528\u7684\u4EE3\u7801\u3002\u7531\u4E8E Java \u8BED\u8A00\u5929\u751F\u5C31\u5177\u5907\u591A\u7EBF\u7A0B\u7279\u6027\uFF0C\u7EBF\u7A0B\u5BF9\u7ACB\u8FD9\u79CD\u6392\u65A5\u591A\u7EBF\u7A0B\u7684\u4EE3\u7801\u662F\u5F88\u5C11\u51FA\u73B0\u7684\uFF0C\u800C\u4E14\u901A\u5E38\u90FD\u662F\u6709\u5BB3\u7684\uFF0C\u5E94\u5F53\u5C3D\u91CF\u907F\u514D\u3002</p><br><p><strong><u>3 - \u7EBF\u7A0B\u5B89\u5168\u7684\u5B9E\u73B0\u65B9\u6CD5</u></strong></p><p><strong>1\u3001\u4E92\u65A5\u540C\u6B65</strong>\uFF1Asynchronized \u548C ReentrantLock</p><p><strong>2\u3001\u975E\u963B\u585E\u540C\u6B65</strong>\uFF1ACAS \u548C \u539F\u5B50\u7C7B</p><p><strong>3\u3001\u65E0\u540C\u6B65\u65B9\u6848</strong>\uFF1A\u6808\u5C01\u95ED\u3001ThreadLocal\u3001\u53EF\u91CD\u5165\u4EE3\u7801</p><p>1\uFF09\u6808\u5C01\u95ED\u3002\u591A\u4E2A\u7EBF\u7A0B\u8BBF\u95EE\u540C\u4E00\u4E2A\u65B9\u6CD5\u7684\u5C40\u90E8\u53D8\u91CF\u65F6\uFF0C\u4E0D\u4F1A\u51FA\u73B0\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898\uFF0C\u56E0\u4E3A\u5C40\u90E8\u53D8\u91CF\u5B58\u50A8\u5728\u865A\u62DF\u673A\u6808\u4E2D\uFF0C\u5C5E\u4E8E\u7EBF\u7A0B\u79C1\u6709\u7684\u3002</p><p>2\uFF09\u53EF\u91CD\u5165\u4EE3\u7801\u3002\u53EF\u91CD\u5165\u4EE3\u7801\u4E5F\u53EB\u505A\u7EAF\u4EE3\u7801\uFF08Pure Code\uFF09\uFF0C\u53EF\u4EE5\u5728\u4EE3\u7801\u6267\u884C\u7684\u4EFB\u4F55\u65F6\u523B\u4E2D\u65AD\u5B83\uFF0C\u8F6C\u800C\u53BB\u6267\u884C\u53E6\u5916\u4E00\u6BB5\u4EE3\u7801\uFF08\u5305\u62EC\u9012\u5F52\u8C03\u7528\u5B83\u672C\u8EAB\uFF09\uFF0C\u800C\u5728\u63A7\u5236\u6743\u8FD4\u56DE\u540E\uFF0C\u539F\u6765\u7684\u7A0B\u5E8F\u4E0D\u4F1A\u51FA\u73B0\u4EFB\u4F55\u9519\u8BEF\u3002</p><p>\u53EF\u91CD\u5165\u4EE3\u7801\u6709\u4E00\u4E9B\u5171\u540C\u7684\u7279\u5F81\uFF0C\u4F8B\u5982\u4E0D\u4F9D\u8D56\u5B58\u50A8\u5728\u5806\u4E0A\u7684\u6570\u636E\u548C\u516C\u7528\u7684\u7CFB\u7EDF\u8D44\u6E90\u3001\u7528\u5230\u7684\u72B6\u6001\u91CF\u90FD\u7531\u53C2\u6570\u4E2D\u4F20\u5165\u3001\u4E0D\u8C03\u7528\u975E\u53EF\u91CD\u5165\u7684\u65B9\u6CD5\u7B49\u3002</p><br><p><u><strong>4 - \u7EBF\u7A0B\u72B6\u6001</strong></u></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">State</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65B0\u5EFA\u72B6\u6001\u3002\u5904\u4E8E\u65B0\u5EFA\uFF0C\u5C1A\u672A\u542F\u52A8\u7684\u7EBF\u7A0B\u72B6\u6001\u3002</span>
    NEW<span class="token punctuation">,</span>
    <span class="token comment">// \u53EF\u8FD0\u884C\u72B6\u6001\u3002\u5904\u4E8E\u53EF\u8FD0\u884C\u72B6\u6001\u7684\u7EBF\u7A0B\u6B63\u5728Java\u865A\u62DF\u673A\u4E2D\u6267\u884C\uFF0C\u4F46\u53EF\u80FD\u6B63\u5728\u7B49\u5F85\u6765\u81EA\u64CD\u4F5C\u7CFB\u7EDF\u7684\u5176\u4ED6\u8D44\u6E90\uFF0C\u4F8B\u5982\u5904\u7406\u5668\u3002</span>
    RUNNABLE<span class="token punctuation">,</span>
    <span class="token comment">// \u963B\u585E\u72B6\u6001\uFF0C\u7B49\u5F85\u76D1\u89C6\u5668\u9501\u5B9A\u3002 \u5904\u4E8E\u963B\u585E\u72B6\u6001\u7684\u7EBF\u7A0B\u6B63\u5728\u7B49\u5F85\u76D1\u89C6\u5668\u9501\u5B9A\u8F93\u5165\u540C\u6B65\u7684\u5757/\u65B9\u6CD5\u6216\u8C03\u7528\u540E\u91CD\u65B0\u8F93\u5165\u540C\u6B65\u7684\u5757/\u65B9\u6CD5</span>
    BLOCKED<span class="token punctuation">,</span>
    <span class="token comment">// \u7B49\u5F85\u72B6\u6001\u3002 \u7531\u4E8E\u8C03\u7528\u4EE5\u4E0B\u65B9\u6CD5\u4E4B\u4E00\uFF0C\u7EBF\u7A0B\u5904\u4E8E\u7B49\u5F85\u72B6\u6001\u3002\u5904\u4E8E\u7B49\u5F85\u72B6\u6001\u7684\u7EBF\u7A0B\u6B63\u5728\u7B49\u5F85\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u6267\u884C\u7279\u5B9A\u64CD\u4F5C\u3002</span>
    <span class="token comment">// Object.wait    Thread.join LockSupport.park</span>
    WAITING<span class="token punctuation">,</span>
    <span class="token comment">// \u5177\u6709\u6307\u5B9A\u7B49\u5F85\u65F6\u95F4\u7684\u7B49\u5F85\u72B6\u6001\u3002 \u7531\u4E8E\u4EE5\u6307\u5B9A\u7684\u6B63\u7B49\u5F85\u65F6\u95F4\u8C03\u7528\u4EE5\u4E0B\u65B9\u6CD5\u4E4B\u4E00\uFF0C\u56E0\u6B64\u7EBF\u7A0B\u5904\u4E8E\u5B9A\u65F6\u7B49\u5F85\u72B6\u6001\u3002</span>
    <span class="token comment">// Thread.sleep Object.wait Thread.join LockSupport.parkNanos LockSupport.parkUntil</span>
    TIMED_WAITING<span class="token punctuation">,</span>
    <span class="token comment">// \u7EC8\u6B62\u72B6\u6001\u3002 \u7EBF\u7A0B\u5DF2\u5B8C\u6210\u6267\u884C\u3002</span>
    TERMINATED<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>\u7EBF\u7A0B\u72B6\u6001\u8F6C\u6362</strong></p><p><img src="`+k+`" alt=""></p><br><p><strong><u>5 - \u7EBF\u7A0B\u5206\u7C7B</u></strong></p><p><strong>1\u3001\u7528\u6237\u7EBF\u7A0B</strong></p><p><strong>2\u3001\u5B88\u62A4\u7EBF\u7A0B</strong></p><p>1\uFF09\u5B88\u62A4\u7EBF\u7A0B\u662F\u6307<strong>\u4E3A\u5176\u4ED6\u7EBF\u7A0B\u670D\u52A1\u7684\u7EBF\u7A0B</strong>\uFF0CJava \u7684\u5783\u573E\u56DE\u6536\u7EBF\u7A0B\u5C31\u662F\u4E00\u4E2A\u5178\u578B\u7684\u5B88\u62A4\u7EBF\u7A0B</p><p>2\uFF09\u5728 JVM \u4E2D\uFF0C<strong>\u6240\u6709\u975E\u5B88\u62A4\u7EBF\u7A0B\u90FD\u6267\u884C\u5B8C\u6BD5\u540E\uFF0C\u65E0\u8BBA\u6709\u6CA1\u6709\u5B88\u62A4\u7EBF\u7A0B\uFF0C\u865A\u62DF\u673A\u90FD\u4F1A\u81EA\u52A8\u9000\u51FA</strong></p><p>3\uFF09<strong>\u5B88\u62A4\u7EBF\u7A0B\u4E0D\u80FD\u6301\u6709\u4EFB\u4F55\u9700\u8981\u5173\u95ED\u7684\u8D44\u6E90</strong>\uFF0C\u4F8B\u5982\u6587\u4EF6\u64CD\u4F5C\u7B49\uFF0C\u56E0\u4E3A\u865A\u62DF\u673A\u9000\u51FA\u65F6\uFF0C\u5B88\u62A4\u7EBF\u7A0B\u6CA1\u6709\u4EFB\u4F55\u673A\u4F1A\u6765\u5173\u95ED\u6587\u4EF6\uFF0C\u8FD9\u4F1A\u5BFC\u81F4\u6570\u636E\u4E22\u5931</p><br><p><strong>3\u3001\u7528\u6237\u7EBF\u7A0B\u4E0E\u5B88\u62A4\u7EBF\u7A0B\u7684\u533A\u522B</strong></p><p>1\uFF09\u5B88\u62A4\u7EBF\u7A0B\u548C\u7528\u6237\u7EBF\u7A0B\u51E0\u4E4E\u6BCF\u4E2A\u65B9\u9762\u90FD\u662F\u76F8\u540C\u7684\uFF0C<strong>\u552F\u4E00\u7684\u533A\u522B\u5C31\u662F\u5224\u65AD JVM \u4F55\u65F6\u79BB\u5F00</strong></p><p>2\uFF09\u6240\u6709\u975E\u5B88\u62A4\u7EBF\u7A0B\u90FD\u6267\u884C\u5B8C\u6BD5\u540E \uFF0C\u865A\u62DF\u673A\u9000\u51FA</p><br><p><strong><u>6 - \u7EBF\u7A0B\u534F\u4F5C\u65B9\u6CD5</u></strong></p><p>1\u3001<code>join()</code></p><p>\u5728\u7EBF\u7A0B\u4E2D\u8C03\u7528\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u7684 join() \u65B9\u6CD5\uFF0C\u4F1A\u5C06\u5F53\u524D\u7EBF\u7A0B\u6302\u8D77\uFF0C\u800C\u4E0D\u662F\u5FD9\u7B49\u5F85\uFF0C\u76F4\u5230\u76EE\u6807\u7EBF\u7A0B\u7ED3\u675F\u3002\u6709a\u548Cb\u4E24\u4E2A\u7EBF\u7A0B\uFF0Cb \u7EBF\u7A0B\u5148\u542F\u52A8\uFF0C\u4F46\u662F\u56E0\u4E3A\u5728 b \u7EBF\u7A0B\u4E2D\u8C03\u7528\u4E86 a \u7EBF\u7A0B\u7684<code>join() </code>\u65B9\u6CD5\uFF0Cb \u7EBF\u7A0B\u4F1A\u7B49\u5F85 a \u7EBF\u7A0B\u7ED3\u675F\u624D\u7EE7\u7EED\u6267\u884C\uFF0C\u56E0\u6B64\u6700\u540E\u80FD\u591F\u4FDD\u8BC1 a \u7EBF\u7A0B\u7684\u8F93\u51FA\u5148\u4E8E b \u7EBF\u7A0B\u7684\u8F93\u51FA\u3002</p><br><p>2\u3001<code>wait() &amp; notify() &amp; notifyAll()</code></p><p>\u5B9A\u4E49\u5728<code>java.lang.Object</code>\u7C7B\u4E2D\uFF0C<strong>\u53EA\u80FD\u7528\u5728\u540C\u6B65\u65B9\u6CD5\u6216\u8005\u540C\u6B65\u63A7\u5236\u5757\u4E2D\u4F7F\u7528</strong>\uFF0C\u5426\u5219\u4F1A\u5728\u8FD0\u884C\u65F6\u629B\u51FA<code>IllegalMonitorStateExeception</code>\u3002\u8C03\u7528<code>wait()</code>\u4F7F\u5F97\u7EBF\u7A0B\u7B49\u5F85\u67D0\u4E2A\u6761\u4EF6\u6EE1\u8DB3\uFF0C\u7EBF\u7A0B\u5728\u7B49\u5F85\u65F6\u4F1A\u88AB\u6302\u8D77\uFF0C\u5F53\u5176\u4ED6\u7EBF\u7A0B\u7684\u8FD0\u884C\u4F7F\u5F97\u8FD9\u4E2A\u6761\u4EF6\u6EE1\u8DB3\u65F6\uFF0C\u5176\u5B83\u7EBF\u7A0B\u4F1A\u8C03\u7528<code>notify()</code>\u6216\u8005<code>notifyAll()</code>\u6765\u5524\u9192\u6302\u8D77\u7684\u7EBF\u7A0B\u3002<strong>\u5982\u679C\u6709\u591A\u4E2A\u7EBF\u7A0B\u88AB wait\uFF0C\u5C31\u4F1A\u5524\u9192\u4F18\u5148\u7EA7\u8F83\u9AD8\u7684\u7EBF\u7A0B\u3002</strong></p><p>\u4F7F\u7528<code>wait()</code>\u6302\u8D77\u671F\u95F4\uFF0C\u7EBF\u7A0B\u4F1A\u91CA\u653E\u9501\u3002\u8FD9\u662F\u56E0\u4E3A\uFF0C\u5982\u679C\u6CA1\u6709\u91CA\u653E\u9501\uFF0C\u90A3\u4E48\u5176\u5B83\u7EBF\u7A0B\u5C31\u65E0\u6CD5\u8FDB\u5165\u5BF9\u8C61\u7684\u540C\u6B65\u65B9\u6CD5\u6216\u8005\u540C\u6B65\u63A7\u5236\u5757\u4E2D\uFF0C\u90A3\u4E48\u5C31\u65E0\u6CD5\u6267\u884C<code>notify()</code>\u6216\u8005<code>notifyAll()</code>\u6765\u5524\u9192\u6302\u8D77\u7684\u7EBF\u7A0B\uFF0C\u9020\u6210\u6B7B\u9501\u3002</p><br><p>3\u3001<code>await() &amp; signal() &amp; signalAll()</code></p><p><code>java.util.concurrent</code>\u7C7B\u5E93\u4E2D\u63D0\u4F9B\u4E86 Condition \u7C7B\u6765\u5B9E\u73B0\u7EBF\u7A0B\u4E4B\u95F4\u7684\u534F\u8C03\uFF0C\u53EF\u4EE5\u5728 Condition \u4E0A\u8C03\u7528<code>await()</code>\u65B9\u6CD5\u4F7F\u7EBF\u7A0B\u7B49\u5F85\uFF0C\u5176\u5B83\u7EBF\u7A0B\u8C03\u7528<code>signal()</code>\u6216<code>signalAll()</code>\u65B9\u6CD5\u5524\u9192\u7B49\u5F85\u7684\u7EBF\u7A0B\u3002\u76F8\u6BD4\u4E8E<code>wait()</code>\u8FD9\u79CD\u7B49\u5F85\u65B9\u5F0F\uFF0C<code>await()</code>\u53EF\u4EE5\u6307\u5B9A\u7B49\u5F85\u7684\u6761\u4EF6\uFF0C\u56E0\u6B64\u66F4\u52A0\u7075\u6D3B</p><p>4\u3001<code>interrupt()</code>\uFF0C\u4E2D\u65AD\u7EBF\u7A0B</p><p>5\u3001<code>sleep()</code></p><p>\u8BA9\u6B63\u5728\u8FD0\u884C\u7684\u7EBF\u7A0B\u53D8\u6210<code>Blocked</code>\uFF08\u963B\u585E\uFF09\u72B6\u6001\uFF0C\u65F6\u95F4\u7ED3\u675F\u6216\u8005\u7EBF\u7A0B\u672C\u8EAB\u8C03\u7528<code>interrupt()</code>\u65B9\u6CD5\u540E\uFF0C\u7761\u7720\u4E2D\u65AD\uFF0C\u7EBF\u7A0B\u72B6\u6001\u53D8\u6210<code>Runnable</code></p><br><p><strong>wait() \u548C sleep() \u7684\u533A\u522B</strong></p><p>1\uFF09<code>wait()</code> \u662F Object \u7C7B\u7684\u65B9\u6CD5\uFF0C\u800C <code>sleep()</code> \u662F Thread \u7C7B\u7684\u9759\u6001\u65B9\u6CD5</p><p>2\uFF09<mark><code>wait()</code>\u4F1A\u91CA\u653E\u9501\uFF0C<code>sleep()</code>\u4E0D\u4F1A</mark></p><p>3\uFF09<code>sleep()</code>\u53EF\u4EE5\u5728\u4EFB\u4F55\u573A\u666F\u8C03\u7528\uFF0C<code>wait()</code>\u5FC5\u987B\u5728\u540C\u6B65\u4EE3\u7801\u5757\u6216\u540C\u6B65\u65B9\u6CD5\u4E2D\u8C03\u7528</p><p>4\uFF09sleep() \u5FC5\u987B\u4F20\u5165\u65F6\u95F4\uFF0Cwait() \u53EF\u4F20\u53EF\u4E0D\u4F20\uFF0C\u4E0D\u4F20\u8868\u793A\u4E00\u76F4\u963B\u585E\u4E0B\u53BB</p><p>5\uFF09sleep() \u5230\u65F6\u95F4\u4E86\u4F1A\u81EA\u52A8\u5524\u9192\uFF0C\u7136\u540E\u7EE7\u7EED\u6267\u884C\uFF1Bwait() \u5E26\u65F6\u95F4\u7684\uFF0C\u5047\u5982\u6CA1\u6709\u88AB notify\uFF0C\u5230\u65F6\u95F4\u4E86\u4F1A\u81EA\u52A8\u5524\u9192\uFF0C\u5206\u4E24\u79CD\u60C5\u51B5\uFF1A\u4E00\u662F\u7ACB\u5373\u83B7\u53D6\u5230\u4E86\u9501\uFF0C\u7EBF\u7A0B\u81EA\u7136\u4F1A\u7EE7\u7EED\u6267\u884C\uFF1B\u4E8C\u662F\u6CA1\u6709\u7ACB\u5373\u83B7\u53D6\u9501\uFF0C\u7EBF\u7A0B\u8FDB\u5165\u540C\u6B65\u961F\u5217\u7B49\u5F85\u83B7\u53D6\u9501</p><br><h4 id="\u7EBF\u7A0B\u6C60" tabindex="-1">\u7EBF\u7A0B\u6C60 <a class="header-anchor" href="#\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a></h4><blockquote><p>Java \u4E2D\u7684\u7EBF\u7A0B\u6C60\u662F\u901A\u8FC7<code>Executor</code>\u6846\u67B6\u5B9E\u73B0\u7684\uFF0C\u8BE5\u6846\u67B6\u7528\u5230\u4E86<code>Executor</code>\uFF0C<code>Executors</code>\uFF0C<code>ExecutorService</code>\uFF0C<code>TheadPoolExecutor</code>\u8FD9\u51E0\u4E2A\u7C7B</p></blockquote><p><strong><u>1 - \u7EBF\u7A0B\u6C60\u7279\u70B9</u></strong></p><p>1\u3001\u7EBF\u7A0B\u590D\u7528\uFF0C\u964D\u4F4E\u8D44\u6E90\u6D88\u8017\uFF0C\u901A\u8FC7\u590D\u7528\u5DF2\u521B\u5EFA\u7684\u7EBF\u7A0B\u964D\u4F4E\u7EBF\u7A0B\u521B\u5EFA\u9500\u6BC1\u5F15\u8D77\u7684\u6D88\u8017</p><p>2\u3001\u7BA1\u7406\u7EBF\u7A0B\uFF0C\u7EBF\u7A0B\u662F\u7A00\u7F3A\u8D44\u6E90\uFF0C\u5982\u679C\u65E0\u9650\u521B\u5EFA\uFF0C\u4E0D\u4EC5\u4F1A\u6D88\u8017\u7CFB\u7EDF\u8D44\u6E90\uFF0C\u8FD8\u4F1A\u964D\u4F4E\u7CFB\u7EDF\u7A33\u5B9A\u6027\uFF0C\u4F7F\u7528\u7EBF\u7A0B\u6C60\u53EF\u4EE5\u8FDB\u884C\u7EDF\u4E00\u7684\u5206\u914D</p><p>3\u3001\u63D0\u9AD8\u54CD\u5E94\u901F\u5EA6\uFF0C\u5F53\u4EFB\u52A1\u5230\u8FBE\u65F6\u7EBF\u7A0B\u5C31\u53EF\u6267\u884C\uFF0C\u51CF\u5C11\u4E86\u7EBF\u7A0B\u521B\u5EFA\u7684\u65F6\u95F4</p><br><p><strong><u>2 - \u7EBF\u7A0B\u6C60\u72B6\u6001</u></strong></p><p>1\u3001<strong>RUNNING</strong>\uFF1A\u8FD0\u884C\u72B6\u6001\uFF0C\u63A5\u53D7\u65B0\u4EFB\u52A1\uFF0C\u6301\u7EED\u5904\u7406\u4EFB\u52A1\u961F\u5217\u91CC\u7684\u4EFB\u52A1\u3002</p><p>2\u3001<strong>SHUTDOWN</strong>\uFF1A\u8C03\u7528<code>shutdown()</code>\u65B9\u6CD5\u4F1A\u8FDB\u5165\u6B64\u72B6\u6001\uFF0C\u4E0D\u518D\u63A5\u53D7\u65B0\u4EFB\u52A1\uFF0C\u4F46\u8981\u5904\u7406\u4EFB\u52A1\u961F\u5217\u91CC\u7684\u4EFB\u52A1\u3002<code>shutdown()</code>\u65B9\u6CD5\u4F1A\u7B49\u5F85\u7EBF\u7A0B\u90FD\u6267\u884C\u5B8C\u6BD5\u4E4B\u540E\u518D\u5173\u95ED\u3002</p><p>3\u3001<strong>STOP</strong>\uFF1A\u8C03\u7528<code>shutdownNow()</code>\u65B9\u6CD5\uFF0C\u4E0D\u518D\u63A5\u53D7\u65B0\u4EFB\u52A1\uFF0C\u4E0D\u518D\u5904\u7406\u4EFB\u52A1\u961F\u5217\u91CC\u7684\u4EFB\u52A1\uFF0C\u4E2D\u65AD\u6B63\u5728\u8FDB\u884C\u4E2D\u7684\u4EFB\u52A1\u3002<code>shutdownNow()</code>\u65B9\u6CD5\uFF0C\u5219\u76F8\u5F53\u4E8E\u8C03\u7528\u6BCF\u4E2A\u7EBF\u7A0B\u7684<code>interrupt()</code>\u65B9\u6CD5\u3002</p><p>4\u3001<strong>TIDYING</strong>\uFF1A\u8868\u793A\u7EBF\u7A0B\u6C60\u6B63\u5728\u505C\u6B62\u8FD0\u4F5C\uFF0C\u4E2D\u6B62\u6240\u6709\u4EFB\u52A1\uFF0C\u9500\u6BC1\u6240\u6709\u5DE5\u4F5C\u7EBF\u7A0B\u3002</p><p>5\u3001<strong>TERMINATED</strong>\uFF1A\u8868\u793A\u7EBF\u7A0B\u6C60\u5DF2\u505C\u6B62\u8FD0\u4F5C\uFF0C\u6240\u6709\u5DE5\u4F5C\u7EBF\u7A0B\u5DF2\u88AB\u9500\u6BC1\uFF0C\u6240\u6709\u4EFB\u52A1\u5DF2\u88AB\u6E05\u7A7A\u6216\u6267\u884C\u5B8C\u6BD5</p><br><p><strong><u>3 - \u7EBF\u7A0B\u6C60\u79CD\u7C7B</u></strong></p><p>1\u3001<code>newFixedThreadPool</code>\uFF0C\u521B\u5EFA\u4E00\u4E2A\u56FA\u5B9A\u957F\u7EBF\u7A0B\u6C60\uFF0C\u53EF\u63A7\u5236\u7EBF\u7A0B\u6700\u5927\u5E76\u53D1\u6570\uFF0C\u8D85\u51FA\u7684\u7EBF\u7A0B\u4F1A\u5728\u961F\u5217\u4E2D\u7B49\u5F85\u3002\u5B9A\u957F\u7EBF\u7A0B\u6C60\u7684\u5927\u5C0F\u6700\u597D\u6839\u636E\u7CFB\u7EDF\u8D44\u6E90\u8FDB\u884C\u8BBE\u7F6E\u3002\u5982<code>Runtime.getRuntime().availableProcessors()</code></p><p>2\u3001<code>newCacheThreadPool</code>\uFF0C\u521B\u5EFA\u4E00\u4E2A\u53EF\u7F13\u5B58\u7EBF\u7A0B\u6C60\uFF0C\u5982\u679C\u7EBF\u7A0B\u6C60\u957F\u5EA6\u8D85\u8FC7\u5904\u7406\u9700\u8981\uFF0C\u53EF\u7075\u6D3B\u56DE\u6536\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u82E5\u65E0\u53EF\u56DE\u6536\uFF0C\u5219\u65B0\u5EFA\u7EBF\u7A0B</p><p>3\u3001<code>newScheduledThreadPool</code>\uFF0C\u521B\u5EFA\u4E00\u4E2A\u5B9A\u957F\u7EBF\u7A0B\u6C60\uFF0C\u652F\u6301\u5B9A\u65F6\u53CA\u5468\u671F\u6027\u4EFB\u52A1\u6267\u884C</p><p>4\u3001<code>newSingleThreadPool</code>\uFF0C\u521B\u5EFA\u4E00\u4E2A\u5355\u7EBF\u7A0B\u5316\u7684\u7EBF\u7A0B\u6C60\uFF0C\u5B83\u53EA\u4F1A\u7528\u552F\u4E00\u7684\u5DE5\u4F5C\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\uFF0C\u4FDD\u8BC1\u6240\u6709\u4EFB\u52A1\u6309\u7167\u6307\u5B9A\u987A\u5E8F\uFF08FIFO\u3001LIFO\u3001\u4F18\u5148\u7EA7\uFF09\u6267\u884C</p><br><p><strong><u>4 - \u7EBF\u7A0B\u6C60\u7EC6\u8282</u></strong></p><p>1\u3001\u56DB\u79CD\u7C7B\u578B\u7684\u7EBF\u7A0B\u6C60\u90FD\u662F<code>ThreadPoolExecutor</code>\u7684\u5B9E\u4F8B\uFF0C\u53EA\u662F\u5728\u6784\u9020\u51FD\u6570\u4E2D\u4F20\u5165\u7684\u53C2\u6570\u4E0D\u540C</p><p>2\u3001\u7EBF\u7A0B\u6C60\u6267\u884C<code>execute()</code>\u65B9\u6CD5\u63D0\u4EA4\u4E0D\u9700\u8981\u8FD4\u56DE\u503C\u7684\u4EFB\u52A1\u3002\u65E0\u6CD5\u5224\u65AD\u662F\u5426\u6267\u884C\u6210\u529F</p><p>3\u3001\u7EBF\u7A0B\u6C60\u6267\u884C<code>submit()</code>\u65B9\u6CD5\uFF0C\u63D0\u4EA4\u6709\u8FD4\u56DE\u503C\u7684\u4EFB\u52A1\u3002\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A<code>Future</code>\u7684\u5BF9\u8C61\uFF0C\u901A\u8FC7 Future \u5BF9\u8C61\u53EF\u4EE5\u5224\u65AD\u4EFB\u52A1\u662F\u5426\u6267\u884C\u6210\u529F\u3002Future \u7684<code>get()</code>\u65B9\u6CD5\u4F1A\u963B\u585E\u5F53\u524D\u7EBF\u7A0B\u76F4\u5230\u4EFB\u52A1\u5B8C\u6210\u3002<code>submit()</code>\u5185\u90E8\u4F7F\u7528<code>RunnableFuture</code>\u5BF9\u4EFB\u52A1\u8FDB\u884C\u5C01\u88C5</p><br><p><u><strong>5 - \u7EBF\u7A0B\u6C60\u7684\u6B63\u786E\u521B\u5EFA\u65B9\u6CD5</strong></u></p><blockquote><p>\u26A0\uFE0F \u7EBF\u7A0B\u6C60\u4E0D\u5EFA\u8BAE\u4F7F\u7528<code>Executors</code>\u6765\u521B\u5EFA\uFF0C\u800C\u662F\u8981\u901A\u8FC7<code>ThreadPoolExecutor</code>\u6765\u521B\u5EFA\uFF0C\u6784\u9020\u51FD\u6570\u7684\u53C2\u6570\u81EA\u5B9A\u4E49</p></blockquote><p>\u4F7F\u7528<code>Executors</code>\u521B\u5EFA\u7EBF\u7A0B\u6C60\u5B58\u5728\u4EE5\u4E0B\u95EE\u9898\uFF1A</p><p>1\u3001<code>FixedThreadPool</code>\u548C<code>SingleThreadPool</code>==\u5141\u8BB8\u7684\u8BF7\u6C42\u961F\u5217==\u957F\u5EA6\u4E3A<code>Integer.MAX_VALUE</code>\uFF0C\u53EF\u80FD\u4F1A\u5806\u79EF\u5927\u91CF\u7684\u8BF7\u6C42\uFF0C\u4ECE\u800C\u5BFC\u81F4 OOM</p><p>2\u3001<code>CacheThreadPool</code>\u548C<code>ScheduleThreadPool</code>==\u5141\u8BB8\u7684\u521B\u5EFA\u7EBF\u7A0B\u6570\u91CF==\u4E3A<code>Integer.MAX_VALUE</code>\uFF0C\u53EF\u80FD\u4F1A\u521B\u5EFA\u5927\u91CF\u7684\u7EBF\u7A0B\uFF0C\u4ECE\u800C\u5BFC\u81F4 OOM</p><br><p><strong>\u4F7F\u7528 ThreadPoolExecutor \u521B\u5EFA\u7EBF\u7A0B\u6C60</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Integer</span> threadCoreSize <span class="token operator">=</span> <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">theRightWayToBuildAThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ThreadPoolExecutor</span> threadPoolExecutor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
            threadCoreSize<span class="token punctuation">,</span>
            <span class="token number">30</span><span class="token punctuation">,</span>
            <span class="token number">5L</span><span class="token punctuation">,</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><p><strong><u>6 - ThreadPoolExecutor \u8BE6\u89E3</u></strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * Creates a new {@code ThreadPoolExecutor} with the given initial
 * parameters.
 *
 * @param corePoolSize \u7EBF\u7A0B\u6C60\u4E2D\u7684\u5E38\u9A7B\u6838\u5FC3\u7EBF\u7A0B\u6570 
 * the number of threads to keep in the pool, even if they are idle\uFF08\u7A7A\u95F2\uFF09, unless {@code allowCoreThreadTimeOut} is set
 * @param maximumPoolSize \u7EBF\u7A0B\u6C60\u4E2D\u80FD\u591F\u5BB9\u7EB3\u540C\u65F6\u6267\u884C\u7684\u6700\u5927\u7EBF\u7A0B\u6570\uFF0C\u6B64\u503C\u5FC5\u987B\u5927\u4E8E\u7B49\u4E8E1\uFF0C\u4E00\u822C\u8BBE\u7F6E\u4E3A\uFF1Acpu\u6838\u6570+1 
 * the maximum number of threads to allow in the pool
 * @param keepAliveTime \u591A\u4F59\u7684\u7A7A\u95F2\u7EBF\u7A0B\u7684\u5B58\u6D3B\u65F6\u95F4\uFF0C\u5F53\u524D\u7EBF\u7A0B\u6C60\u4E2D\u6570\u91CF\u8D85\u8FC7corePoolSize\u65F6\uFF0C\u5F53\u7A7A\u95F2\u65F6\u95F4\u8FBE\u5230keepAliveTime\u65F6\uFF0C\u591A\u4F59\u7EBF\u7A0B\u5C31\u4F1A\u88AB\u9500\u6BC1\uFF0C\u76F4\u5230\u53EA\u5269\u4E0BcorePoolSize\u4E2A\u7EBF\u7A0B\u4E3A\u6B62 
 * when the number of threads is greater than the core, this is the maximum time that excess\uFF08\u8D85\u8FC7\uFF09 idle threads
 * will wait for new tasks before terminating.
 * @param unit keepAliveTime\u7684\u5355\u4F4D 
 * the time unit for the {@code keepAliveTime} argument
 * @param workQueue \u4EFB\u52A1\u961F\u5217\uFF0C\u88AB\u63D0\u4EA4\u4F46\u5C1A\u672A\u88AB\u6267\u884C\u7684\u4EFB\u52A1 
 * the queue to use for holding tasks before they are executed.  This queue will hold only the {@code Runnable} tasks submitted by the {@code execute} method.
 * @param threadFactory \u8868\u793A\u751F\u6210\u7EBF\u7A0B\u6C60\u4E2D\u5DE5\u4F5C\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u5DE5\u5382\uFF0C\u7528\u4E8E\u521B\u5EFA\u7EBF\u7A0B\uFF0C\u4E00\u822C\u4F7F\u7528\u9ED8\u8BA4\u7684\u5373\u53EF 
 * the factory to use when the executor creates a new thread
 * @param handler \u62D2\u7EDD\u7B56\u7565\uFF0C\u8868\u793A\u5F53\u961F\u5217\u6EE1\u4E86\uFF0C\u5E76\u4E14\u5DE5\u4F5C\u7EBF\u7A0B\u5927\u4E8E\u7B49\u4E8E\u7EBF\u7A0B\u6C60\u7684\u6700\u5927\u7EBF\u7A0B\u6570maximumPoolSize\u65F6\u5982\u4F55\u6765\u62D2\u7EDD\u8BF7\u6C42\u6267\u884C\u7684runnable\u7684\u7B56\u7565\u3002\u7B49\u5F85\u961F\u5217\u5DF2\u7ECF\u6EE1\u4E86\uFF0C\u65E0\u6CD5\u7EE7\u7EED\u6DFB\u52A0\u65B0\u4EFB\u52A1\u4E86\uFF0C\u540C\u65F6\u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u5DF2\u8FBE\u5230maximumPoolSize\u503C\uFF0C\u65E0\u6CD5\u7EE7\u7EED\u4E3A\u65B0\u4EFB\u52A1\u670D\u52A1\uFF0C\u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC\u5C31\u9700\u8981\u62D2\u7EDD\u7B56\u7565\u673A\u5236\u5408\u7406\u7684\u5904\u7406\u8FD9\u4E2A\u65B0\u4EFB\u52A1
 * the handler to use when execution is blocked because the thread bounds and queue capacities are reached
 * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;
 *         {@code corePoolSize &lt; 0}&lt;br&gt;
 *         {@code keepAliveTime &lt; 0}&lt;br&gt;
 *         {@code maximumPoolSize &lt;= 0}&lt;br&gt;
 *         {@code maximumPoolSize &lt; corePoolSize}
 * @throws NullPointerException if {@code workQueue}
 *         or {@code threadFactory} or {@code handler} is null
 */</span>
<span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>
                          <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>
                          <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>
                          <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span>
                          <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">,</span>
                          <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">,</span>
                          <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>corePoolSize <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
        maximumPoolSize <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span>
        maximumPoolSize <span class="token operator">&lt;</span> corePoolSize <span class="token operator">||</span>
        keepAliveTime <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>workQueue <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> threadFactory <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> handler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>acc <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span>
            <span class="token keyword">null</span> <span class="token operator">:</span>
            <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>corePoolSize <span class="token operator">=</span> corePoolSize<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>maximumPoolSize <span class="token operator">=</span> maximumPoolSize<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>workQueue <span class="token operator">=</span> workQueue<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>keepAliveTime <span class="token operator">=</span> unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>threadFactory <span class="token operator">=</span> threadFactory<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>handler <span class="token operator">=</span> handler<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><br><p><strong>1\u3001\u5173\u4E8E\u6838\u5FC3\u7EBF\u7A0B\u6570\u7684\u7EC6\u8282</strong></p><p>\u5B9E\u9645\u4E0A\u5185\u90E8\u5728\u521B\u5EFA\u7EBF\u7A0B\u65F6\uFF0C\u5E76\u6CA1\u6709\u7ED9\u7EBF\u7A0B\u505A\u6807\u8BB0\uFF0C\u56E0\u6B64\u65E0\u6CD5\u533A\u5206\u6838\u5FC3\u7EBF\u7A0B\u4E0E\u975E\u6838\u5FC3\u7EBF\u7A0B\u3002\u5176\u5185\u90E8\u4E3B\u8981\u6839\u636E\u5F53\u524D\u7EBF\u7A0B\u7684\u6570\u91CF\u6765\u5904\u7406\u3002\u4E5F\u53EF\u4EE5\u7406\u89E3\u4E3A\uFF0C\u53EA\u8981\u5F53\u524D\u7684 worker \u7EBF\u7A0B\u6570\u5C0F\u4E8E\u914D\u7F6E\u7684 corePoolSize\uFF0C\u90A3\u4E48\u8FD9\u4E9B\u7EBF\u7A0B\u90FD\u662F\u6838\u5FC3\u7EBF\u7A0B\u3002\u7EBF\u7A0B\u6C60\u6839\u636E\u5F53\u524D\u7EBF\u7A0B\u6C60\u7684\u6570\u91CF\u6765\u5224\u65AD\u8981\u4E0D\u8981\u9000\u51FA\u7EBF\u7A0B\uFF0C\u800C\u4E0D\u662F\u6839\u636E\u662F\u5426\u662F\u6838\u5FC3\u7EBF\u7A0B</p><br><p><strong>2\u3001\u5173\u4E8E\u7EBF\u7A0B\u6C60\u80FD\u5BB9\u7EB3\u7684\u6700\u5927\u4EFB\u52A1\u6570</strong></p><p><code>\u6700\u5927\u4EFB\u52A1\u6570 = maximumPoolSize + workQueue.size()</code>\uFF0C\u8D85\u8FC7\u80FD\u5BB9\u7EB3\u7684\u6700\u5927\u4EFB\u52A1\u6811\u5C31\u4F1A\u89E6\u53D1\u62D2\u7EDD\u7B56\u7565\uFF0C\u62A5\u5F02\u5E38 <code>java.util.concurrent.RejectedExecutionException</code></p><br><p><strong>3\u3001\u62D2\u7EDD\u7B56\u7565</strong></p><p>1\uFF09AbortPolicy\uFF0C\u9ED8\u8BA4\u7B56\u7565\uFF0C\u76F4\u63A5\u629B\u51FA<code>RejectedExecutionException</code>\u5F02\u5E38\uFF0C\u7EC4\u7EC7\u7CFB\u7EDF\u6B63\u5E38\u8FD0\u884C</p><p>2\uFF09CallerRunsPolicy\uFF0C\u8C03\u7528\u8005\u8FD0\u884C\u7B56\u7565\uFF0C\u4E00\u79CD\u8C03\u8282\u673A\u5236\uFF0C\u8BE5\u7B56\u7565\u4E0D\u4F1A\u629B\u5F03\u4EFB\u52A1\uFF0C\u4E5F\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u800C\u662F\u5C06\u67D0\u4E9B\u4EFB\u52A1\u56DE\u9000\u5230\u8C03\u7528\u8005\uFF0C\u4ECE\u800C\u964D\u4F4E\u65B0\u4EFB\u52A1\u6D41\u91CF</p><p>3\uFF09DiscardOldestPolicy\uFF0C\u629B\u5F03\u961F\u5217\u4E2D\u7B49\u5F85\u6700\u4E45\u7684\u4EFB\u52A1\uFF0C\u7136\u540E\u628A\u5F53\u524D\u4EFB\u52A1\u52A0\u5165\u961F\u5217\u4E2D\u5C1D\u8BD5\u518D\u6B21\u63D0\u4EA4\u5F53\u524D\u4EFB\u52A1</p><p>4\uFF09DiscardPolicy\uFF0C\u4E22\u5F03\u65E0\u6CD5\u5904\u7406\u7684\u4EFB\u52A1\uFF0C\u4E0D\u4E88\u5904\u7406\u4EFB\u4F55\u5904\u7406\u4E5F\u4E0D\u629B\u5F02\u5E38\uFF0C\u5982\u679C\u5141\u8BB8\u4EFB\u52A1\u4E22\u5931\uFF0C\u8FD9\u662F\u6700\u597D\u7684\u4E00\u79CD\u7B56\u7565</p><br><p><strong>4\u3001\u7EBF\u7A0B\u6C60\u5DE5\u4F5C\u6D41\u7A0B</strong></p><p>1\uFF09\u7EBF\u7A0B\u6C60\u88AB\u521B\u5EFA\u4E4B\u540E\uFF0C\u5F00\u59CB\u7B49\u5F85\u4EFB\u52A1\u8BF7\u6C42</p><p>2\uFF09\u5F53\u8C03\u7528<code>execute()</code>\u65B9\u6CD5\u6DFB\u52A0\u8BF7\u6C42\u65F6\uFF0C\u7EBF\u7A0B\u6C60\u505A\u51FA\u5224\u65AD</p><p>1\u300D\u6B63\u5728\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u91CF\u5C0F\u4E8E<code>corePoolSize</code>\uFF0C\u9A6C\u4E0A\u521B\u5EFA\u7EBF\u7A0B\u8FD0\u884C\u8FD9\u4E2A\u4EFB\u52A1</p><p>2\u300D\u6B63\u5728\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u91CF\u5927\u4E8E\u7B49\u4E8E<code>corePoolSize</code>\uFF0C\u5C06\u8FD9\u4E2A\u4EFB\u52A1\u653E\u5165\u961F\u5217\u7B49\u5F85</p><p>3\u300D\u961F\u5217\u5DF2\u6EE1\uFF0C\u4E14\u6B63\u5728\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u91CF\u5C0F\u4E8E<code>maximumPoolSize</code>\uFF0C\u521B\u5EFA\u975E\u6838\u5FC3\u7EBF\u7A0B\u7ACB\u523B\u6267\u884C\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\u3002\uFF08\u5F53\u6838\u5FC3\u7EBF\u7A0B\u548C\u963B\u585E\u961F\u5217\u90FD\u6EE1\u4E86\uFF0C\u5C31\u4F1A\u6269\u5927\u7EBF\u7A0B\u6570\u3002\u5F53\u7EBF\u7A0B\u6570\u6269\u5927\u5230<code>maximumPoolSize</code>\u4E14\u963B\u585E\u961F\u5217\u4E5F\u6EE1\u4E86\uFF0C\u5C31\u4F1A\u89E6\u53D1\u62D2\u7EDD\u7B56\u7565\uFF09</p><br><p>3\uFF09\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u5B8C\u6210\u4EFB\u52A1\u65F6\uFF0C\u5B83\u5C31\u4F1A\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA\u4E0B\u4E00\u4E2A\u4EFB\u52A1\u6267\u884C</p><p>4\uFF09\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u6CA1\u6709\u4EFB\u52A1\u6267\u884C\u8D85\u8FC7<code>keepAliveTime</code>\u65F6\uFF0C\u7EBF\u7A0B\u5C31\u4F1A\u5224\u65AD\uFF1A\u5F53\u524D\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u662F\u5426\u5927\u4E8E<code>corePoolSize</code>\uFF0C\u662F\u7684\u8BDD\u8FD9\u4E2A\u7EBF\u7A0B\u5C31\u4F1A\u88AB\u505C\u6389</p><p>5\uFF09\u7EBF\u7A0B\u6C60\u7684\u6240\u6709\u4EFB\u52A1\u5B8C\u6210\u540E\uFF0C\u5B83\u6700\u7EC8\u4F1A\u6536\u7F29\u5230<code>corePoolSize</code>\u7684\u5927\u5C0F</p><br><h4 id="threadlocal" tabindex="-1">ThreadLocal <a class="header-anchor" href="#threadlocal" aria-hidden="true">#</a></h4><blockquote><p>\u7EBF\u7A0B\u672C\u5730\u53D8\u91CF\uFF0C\u5982\u679C\u521B\u5EFA\u4E00\u4E2A ThreadLocal \u53D8\u91CF\uFF0C\u90A3\u4E48\u8BBF\u95EE\u8FD9\u4E2A\u53D8\u91CF\u7684\u6BCF\u4E2A\u7EBF\u7A0B\u90FD\u4F1A\u5728\u81EA\u5DF1\u672C\u5730\u5185\u5B58\u4E2D\u4FDD\u5B58\u6709\u8FD9\u4E2A\u53D8\u91CF\u7684\u4E00\u4E2A\u526F\u672C\uFF0C\u5728\u5B9E\u9645\u591A\u7EBF\u7A0B\u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u64CD\u4F5C\u7684\u662F\u81EA\u5DF1\u672C\u5730\u5185\u5B58\u4E2D\u7684\u53D8\u91CF\uFF0C\u4ECE\u800C\u89C4\u907F\u4E86\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898</p></blockquote><p>\u591A\u7EBF\u7A0B\u8BBF\u95EE\u540C\u4E00\u4E2A\u5171\u4EAB\u53D8\u91CF\u7684\u65F6\u5019\u5BB9\u6613\u51FA\u73B0\u5E76\u53D1\u95EE\u9898\uFF0C\u7279\u522B\u662F\u591A\u4E2A\u7EBF\u7A0B\u5BF9\u4E00\u4E2A\u53D8\u91CF\u8FDB\u884C\u5199\u5165\u7684\u65F6\u5019\uFF0C\u4E3A\u4E86\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF0C\u4E00\u822C\u4F7F\u7528\u8005\u5728\u8BBF\u95EE\u5171\u4EAB\u53D8\u91CF\u7684\u65F6\u5019\u9700\u8981\u8FDB\u884C\u989D\u5916\u7684\u540C\u6B65\u63AA\u65BD\u624D\u80FD\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\u6027\u3002</p><p>ThreadLocal \u662F\u9664\u4E86\u52A0\u9501\u8FD9\u79CD\u540C\u6B65\u65B9\u5F0F\u4E4B\u5916\u7684\u4E00\u79CD\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF0C\u4E00\u79CD\u89C4\u907F\u591A\u7EBF\u7A0B\u8BBF\u95EE\u51FA\u73B0\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\u65B9\u6CD5\uFF0C\u5F53\u6211\u4EEC\u5728\u521B\u5EFA\u4E00\u4E2A\u53D8\u91CF\u540E\uFF0C\u5982\u679C\u6BCF\u4E2A\u7EBF\u7A0B\u5BF9\u5176\u8FDB\u884C\u8BBF\u95EE\u7684\u65F6\u5019\u8BBF\u95EE\u7684\u90FD\u662F\u7EBF\u7A0B\u81EA\u5DF1\u7684\u53D8\u91CF\u8FD9\u6837\u5C31\u4E0D\u4F1A\u5B58\u5728\u7EBF\u7A0B\u4E0D\u5B89\u5168\u95EE\u9898\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadLocalTest</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B9A\u4E49ThreadLocal\u7C7B\u578B\u7684\u53D8\u91CF</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> localVar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5728\u540D\u4E3AAA\u7684\u7EBF\u7A0B\u4E2D\uFF0C\u8BBE\u7F6ElocalVar\u7684\u503C</span>
            localVar<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;localVar in thread AA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;aa after print and remove ===&gt; &quot;</span> <span class="token operator">+</span> localVar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;AA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5728\u540D\u4E3ABB\u7684\u7EBF\u7A0B\u4E2D\uFF0C\u8BBE\u7F6ElocalVar\u7684\u503C</span>
            localVar<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;localVar in thread BB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;bb after print and remove ===&gt; &quot;</span> <span class="token operator">+</span> localVar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;BB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; ===&gt; &quot;</span> <span class="token operator">+</span> localVar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4F7F\u7528\u5B8C\u4E4B\u540E\u5C06localVar\u79FB\u9664</span>
        localVar<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/* ThreadLocal values pertaining\uFF08\u76F8\u5173\uFF09 to this thread. This map is maintained\uFF08\u7EF4\u62A4\uFF09
 * by the ThreadLocal class. */</span>
<span class="token class-name">ThreadLocal<span class="token punctuation">.</span>ThreadLocalMap</span> threadLocals <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token comment">/*
 * InheritableThreadLocal values pertaining to this thread. This map is
 * maintained by the InheritableThreadLocal class.
 */</span>
<span class="token class-name">ThreadLocal<span class="token punctuation">.</span>ThreadLocalMap</span> inheritableThreadLocals <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token comment">/**
 * Sets the current thread&#39;s copy of this thread-local variable
 * to the specified value.  Most subclasses will have no need to
 * override this method, relying solely on the {@link #initialValue}
 * method to set the values of thread-locals.
 *
 * @param value the value to be stored in the current thread&#39;s copy of
 * this thread-local.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">T</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u64CD\u4F5C ThreadLocal \u7684\u7EBF\u7A0B</span>
    <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u53EA\u6709\u5F53\u7EBF\u7A0B\u7B2C\u4E00\u6B21\u8C03\u7528 ThreadLocal \u7684 set \u6216\u8005 get \u65B9\u6CD5\u7684\u65F6\u5019\u624D\u4F1A\u521B\u5EFAThreadLocalMap</span>
    <span class="token class-name">ThreadLocalMap</span> map <span class="token operator">=</span> <span class="token function">getMap</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token function">createMap</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Get the map associated with a ThreadLocal. Overridden in
 * InheritableThreadLocal.
 *
 * @param  t the current thread
 * @return the map
 */</span>
<span class="token class-name">ThreadLocalMap</span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> t<span class="token punctuation">.</span>threadLocals<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Create the map associated with a ThreadLocal. Overridden in
 * InheritableThreadLocal.
 *
 * @param t the current thread
 * @param firstValue value for the initial entry of the map
 */</span>
<span class="token keyword">void</span> <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> t<span class="token punctuation">,</span> <span class="token class-name">T</span> firstValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t<span class="token punctuation">.</span>threadLocals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocalMap</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> firstValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5982\u679C\u8C03\u7528\u7EBF\u7A0B\u4E00\u76F4\u4E0D\u7EC8\u6B62\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u672C\u5730\u53D8\u91CF\u5C06\u4F1A\u4E00\u76F4\u5B58\u653E\u5728\u5B83\u7684 threadLocals \u4E2D\uFF0C\u6240\u4EE5\u4E0D\u4F7F\u7528\u672C\u5730\u53D8\u91CF\u7684\u65F6\u5019\u9700\u8981\u8C03\u7528 remove \u65B9\u6CD5\u5C06 threadLocals \u4E2D\u5220\u9664\u4E0D\u7528\u7684\u672C\u5730\u53D8\u91CF</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><br><h3 id="\u5E76\u53D1\u4E09\u8981\u7D20" tabindex="-1">\u5E76\u53D1\u4E09\u8981\u7D20 <a class="header-anchor" href="#\u5E76\u53D1\u4E09\u8981\u7D20" aria-hidden="true">#</a></h3><p><u><strong>1 - \u53EF\u89C1\u6027</strong></u></p><blockquote><p>CPU \u7F13\u5B58\u5F15\u8D77\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u5BF9\u5171\u4EAB\u53D8\u91CF\u7684\u4FEE\u6539\uFF0C\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u80FD\u591F\u7ACB\u523B\u770B\u5230</p></blockquote><div class="language-java line-numbers-mode"><pre><code><span class="token comment">//\u7EBF\u7A0B1\u6267\u884C\u7684\u4EE3\u7801</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token comment">//\u7EBF\u7A0B2\u6267\u884C\u7684\u4EE3\u7801</span>
j <span class="token operator">=</span> i<span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5047\u82E5\u6267\u884C\u7EBF\u7A0B1\u7684\u662FCPU1\uFF0C\u6267\u884C\u7EBF\u7A0B2\u7684\u662FCPU2\u3002\u7531\u4E0A\u9762\u7684\u5206\u6790\u53EF\u77E5\uFF0C\u5F53\u7EBF\u7A0B1\u6267\u884C i =10\u8FD9\u53E5\u65F6\uFF0C\u4F1A\u5148\u628Ai\u7684\u521D\u59CB\u503C\u52A0\u8F7D\u5230CPU1\u7684\u9AD8\u901F\u7F13\u5B58\u4E2D\uFF0C\u7136\u540E\u8D4B\u503C\u4E3A10\uFF0C\u90A3\u4E48\u5728CPU1\u7684\u9AD8\u901F\u7F13\u5B58\u5F53\u4E2Di\u7684\u503C\u53D8\u4E3A10\u4E86\uFF0C\u5374\u6CA1\u6709\u7ACB\u5373\u5199\u5165\u5230\u4E3B\u5B58\u5F53\u4E2D\u3002</p><p>\u6B64\u65F6\u7EBF\u7A0B2\u6267\u884C j = i\uFF0C\u5B83\u4F1A\u5148\u53BB\u4E3B\u5B58\u8BFB\u53D6i\u7684\u503C\u5E76\u52A0\u8F7D\u5230CPU2\u7684\u7F13\u5B58\u5F53\u4E2D\uFF0C\u6CE8\u610F\u6B64\u65F6\u5185\u5B58\u5F53\u4E2Di\u7684\u503C\u8FD8\u662F0\uFF0C\u90A3\u4E48\u5C31\u4F1A\u4F7F\u5F97j\u7684\u503C\u4E3A0\uFF0C\u800C\u4E0D\u662F10\u3002</p><p>\u8FD9\u5C31\u662F\u53EF\u89C1\u6027\u95EE\u9898\uFF0C\u7EBF\u7A0B1\u5BF9\u53D8\u91CFi\u4FEE\u6539\u4E86\u4E4B\u540E\uFF0C\u7EBF\u7A0B2\u6CA1\u6709\u7ACB\u5373\u770B\u5230\u7EBF\u7A0B1\u4FEE\u6539\u7684\u503C\u3002<strong>\u5373\u4E00\u4E2A\u7EBF\u7A0B\u5BF9\u5171\u4EAB\u53D8\u91CF\u7684\u4FEE\u6539\u5BF9\u5176\u4ED6\u7EBF\u7A0B\u6CA1\u6709\u53CA\u65F6\u53EF\u89C1</strong></p><p><strong>Java \u4E2D\u7684\u53EF\u89C1\u6027</strong></p><blockquote><p>Java \u63D0\u4F9B\u4E86 volatile \u5173\u952E\u5B57\u6765\u4FDD\u8BC1\u53EF\u89C1\u6027</p></blockquote><p>1\u3001\u5F53\u4E00\u4E2A\u5171\u4EAB\u53D8\u91CF\u88AB volatile \u4FEE\u9970\u65F6\uFF0C\u5B83\u4F1A\u4FDD\u8BC1\u4FEE\u6539\u7684\u503C\u4F1A\u7ACB\u5373\u88AB\u66F4\u65B0\u5230\u4E3B\u5B58\uFF0C\u5F53\u6709\u5176\u4ED6\u7EBF\u7A0B\u9700\u8981\u8BFB\u53D6\u65F6\uFF0C\u5B83\u4F1A\u53BB\u5185\u5B58\u4E2D\u8BFB\u53D6\u65B0\u503C\u3002</p><p>2\u3001\u800C\u666E\u901A\u7684\u5171\u4EAB\u53D8\u91CF\u4E0D\u80FD\u4FDD\u8BC1\u53EF\u89C1\u6027\uFF0C\u56E0\u4E3A\u666E\u901A\u5171\u4EAB\u53D8\u91CF\u88AB\u4FEE\u6539\u4E4B\u540E\uFF0C\u4EC0\u4E48\u65F6\u5019\u88AB\u5199\u5165\u4E3B\u5B58\u662F\u4E0D\u786E\u5B9A\u7684\uFF0C\u5F53\u5176\u4ED6\u7EBF\u7A0B\u53BB\u8BFB\u53D6\u65F6\uFF0C\u6B64\u65F6\u5185\u5B58\u4E2D\u53EF\u80FD\u8FD8\u662F\u539F\u6765\u7684\u65E7\u503C\uFF0C\u56E0\u6B64\u65E0\u6CD5\u4FDD\u8BC1\u53EF\u89C1\u6027\u3002</p><blockquote><p>\u26A0\uFE0F \u901A\u8FC7 synchronized \u548C Lock \u4E5F\u80FD\u591F\u4FDD\u8BC1\u53EF\u89C1\u6027\uFF0Csynchronized \u548C Lock \u80FD\u4FDD\u8BC1\u540C\u4E00\u65F6\u523B\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u53D6\u9501\u7136\u540E\u6267\u884C\u540C\u6B65\u4EE3\u7801\uFF0C\u5E76\u4E14\u5728\u91CA\u653E\u9501\u4E4B\u524D\u4F1A\u5C06\u5BF9\u53D8\u91CF\u7684\u4FEE\u6539\u5237\u65B0\u5230\u4E3B\u5B58\u5F53\u4E2D\u3002\u56E0\u6B64\u53EF\u4EE5\u4FDD\u8BC1\u53EF\u89C1\u6027\u3002</p></blockquote><br><p><u><strong>2 - \u539F\u5B50\u6027</strong></u></p><blockquote><p>\u5206\u65F6\u590D\u7528\u5F15\u8D77\uFF0C\u4E00\u4E2A\u64CD\u4F5C\u6216\u8005\u591A\u4E2A\u64CD\u4F5C \u8981\u4E48\u5168\u90E8\u6267\u884C\u5E76\u4E14\u6267\u884C\u7684\u8FC7\u7A0B\u4E0D\u4F1A\u88AB\u4EFB\u4F55\u56E0\u7D20\u6253\u65AD\uFF0C\u8981\u4E48\u5C31\u90FD\u4E0D\u6267\u884C\u3002</p></blockquote><p>\u7ECF\u5178\u7684<strong>\u8F6C\u8D26\u95EE\u9898</strong>\uFF1A\u6BD4\u5982\u4ECE\u8D26\u6237A\u5411\u8D26\u6237B\u8F6C1000\u5143\uFF0C\u90A3\u4E48\u5FC5\u7136\u5305\u62EC2\u4E2A\u64CD\u4F5C\uFF1A\u4ECE\u8D26\u6237A\u51CF\u53BB1000\u5143\uFF0C\u5F80\u8D26\u6237B\u52A0\u4E0A1000\u5143\u3002</p><p>\u8BD5\u60F3\u4E00\u4E0B\uFF0C\u5982\u679C\u8FD92\u4E2A\u64CD\u4F5C\u4E0D\u5177\u5907\u539F\u5B50\u6027\uFF0C\u4F1A\u9020\u6210\u4EC0\u4E48\u6837\u7684\u540E\u679C\u3002\u5047\u5982\u4ECE\u8D26\u6237A\u51CF\u53BB1000\u5143\u4E4B\u540E\uFF0C\u64CD\u4F5C\u7A81\u7136\u4E2D\u6B62\u3002\u7136\u540E\u53C8\u4ECEB\u53D6\u51FA\u4E86500\u5143\uFF0C\u53D6\u51FA500\u5143\u4E4B\u540E\uFF0C\u518D\u6267\u884C \u5F80\u8D26\u6237B\u52A0\u4E0A1000\u5143 \u7684\u64CD\u4F5C\u3002\u8FD9\u6837\u5C31\u4F1A\u5BFC\u81F4\u8D26\u6237A\u867D\u7136\u51CF\u53BB\u4E861000\u5143\uFF0C\u4F46\u662F\u8D26\u6237B\u6CA1\u6709\u6536\u5230\u8FD9\u4E2A\u8F6C\u8FC7\u6765\u76841000\u5143\u3002\u6240\u4EE5\u8FD92\u4E2A\u64CD\u4F5C\u5FC5\u987B\u8981\u5177\u5907\u539F\u5B50\u6027\u624D\u80FD\u4FDD\u8BC1\u4E0D\u51FA\u73B0\u4E00\u4E9B\u610F\u5916\u7684\u95EE\u9898\u3002</p><p><strong>Java \u4E2D\u7684\u539F\u5B50\u6027</strong></p><blockquote><p>\u5728 Java \u4E2D\uFF0C\u5BF9\u57FA\u672C\u6570\u636E\u7C7B\u578B\u7684\u53D8\u91CF\u7684\u8BFB\u53D6\u548C\u8D4B\u503C\u64CD\u4F5C\u662F\u539F\u5B50\u6027\u64CD\u4F5C\uFF0C\u5373\u8FD9\u4E9B\u64CD\u4F5C\u662F\u4E0D\u53EF\u88AB\u4E2D\u65AD\u7684\uFF0C\u8981\u4E48\u6267\u884C\uFF0C\u8981\u4E48\u4E0D\u6267\u884C\u3002</p></blockquote><div class="language-java line-numbers-mode"><pre><code>x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token comment">// \u8BED\u53E51: \u76F4\u63A5\u5C06\u6570\u503C10\u8D4B\u503C\u7ED9x\uFF0C\u4E5F\u5C31\u662F\u8BF4\u7EBF\u7A0B\u6267\u884C\u8FD9\u4E2A\u8BED\u53E5\u7684\u4F1A\u76F4\u63A5\u5C06\u6570\u503C10\u5199\u5165\u5230\u5DE5\u4F5C\u5185\u5B58\u4E2D</span>
y <span class="token operator">=</span> x<span class="token punctuation">;</span>         <span class="token comment">// \u8BED\u53E52: \u5305\u542B2\u4E2A\u64CD\u4F5C\uFF0C\u5B83\u5148\u8981\u53BB\u8BFB\u53D6x\u7684\u503C\uFF0C\u518D\u5C06x\u7684\u503C\u5199\u5165\u5DE5\u4F5C\u5185\u5B58\uFF0C\u867D\u7136\u8BFB\u53D6x\u7684\u503C\u4EE5\u53CA \u5C06x\u7684\u503C\u5199\u5165\u5DE5\u4F5C\u5185\u5B58 \u8FD92\u4E2A\u64CD\u4F5C\u90FD\u662F\u539F\u5B50\u6027\u64CD\u4F5C\uFF0C\u4F46\u662F\u5408\u8D77\u6765\u5C31\u4E0D\u662F\u539F\u5B50\u6027\u64CD\u4F5C\u4E86\u3002</span>
x<span class="token operator">++</span><span class="token punctuation">;</span>           <span class="token comment">// \u8BED\u53E53\uFF1A x++\u5305\u62EC3\u4E2A\u64CD\u4F5C\uFF1A\u8BFB\u53D6x\u7684\u503C\uFF0C\u8FDB\u884C\u52A01\u64CD\u4F5C\uFF0C\u5199\u5165\u65B0\u7684\u503C\u3002</span>
x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">// \u8BED\u53E54\uFF1A \u540C\u8BED\u53E53</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u53EA\u6709\u7B80\u5355\u7684\u8BFB\u53D6\u3001\u8D4B\u503C\uFF08\u800C\u4E14\u5FC5\u987B\u662F\u5C06\u6570\u5B57\u8D4B\u503C\u7ED9\u67D0\u4E2A\u53D8\u91CF\uFF0C\u53D8\u91CF\u4E4B\u95F4\u7684\u76F8\u4E92\u8D4B\u503C\u4E0D\u662F\u539F\u5B50\u64CD\u4F5C\uFF09\u624D\u662F\u539F\u5B50\u64CD\u4F5C\u3002</p><blockquote><p>\u26A0\uFE0F Java \u5185\u5B58\u6A21\u578B\u53EA\u4FDD\u8BC1\u4E86\u57FA\u672C\u8BFB\u53D6\u548C\u8D4B\u503C\u662F\u539F\u5B50\u6027\u64CD\u4F5C\u3002\u5982\u679C\u8981\u5B9E\u73B0\u66F4\u5927\u8303\u56F4\u64CD\u4F5C\u7684\u539F\u5B50\u6027\uFF0C\u53EF\u4EE5\u901A\u8FC7 synchronized \u548C Lock \u6765\u5B9E\u73B0\u3002\u7531\u4E8E synchronized \u548C Lock \u80FD\u591F\u4FDD\u8BC1\u4EFB\u4E00\u65F6\u523B\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u6267\u884C\u8BE5\u4EE3\u7801\u5757\uFF0C\u90A3\u4E48\u81EA\u7136\u5C31\u4E0D\u5B58\u5728\u539F\u5B50\u6027\u95EE\u9898\u4E86\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u4E86\u539F\u5B50\u6027\u3002</p></blockquote><br><p><u><strong>3 - \u6709\u5E8F\u6027</strong></u></p><blockquote><p>\u6307\u4EE4\u91CD\u6392\u5E8F\u5F15\u8D77\uFF0C\u5373\u7A0B\u5E8F\u6267\u884C\u7684\u987A\u5E8F\u6309\u7167\u4EE3\u7801\u7684\u5148\u540E\u987A\u5E8F\u6267\u884C\u3002</p></blockquote><p>\u4E3E\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C\u770B\u4E0B\u9762\u8FD9\u6BB5\u4EE3\u7801\uFF1A</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>              
<span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token comment">//\u8BED\u53E51  </span>
flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>          <span class="token comment">//\u8BED\u53E52</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A<em>int</em>\u578B\u53D8\u91CF\uFF0C\u5B9A\u4E49\u4E86\u4E00\u4E2A<em>boolean</em>\u7C7B\u578B\u53D8\u91CF\uFF0C\u7136\u540E\u5206\u522B\u5BF9\u4E24\u4E2A\u53D8\u91CF\u8FDB\u884C\u8D4B\u503C\u64CD\u4F5C\u3002\u4ECE\u4EE3\u7801\u987A\u5E8F\u4E0A\u770B\uFF0C\u8BED\u53E51\u662F\u5728\u8BED\u53E52\u524D\u9762\u7684\uFF0C\u90A3\u4E48 JVM \u5728\u771F\u6B63\u6267\u884C\u8FD9\u6BB5\u4EE3\u7801\u7684\u65F6\u5019\u4F1A\u4FDD\u8BC1\u8BED\u53E51\u4E00\u5B9A\u4F1A\u5728\u8BED\u53E52\u524D\u9762\u6267\u884C\u5417\uFF1F\u4E0D\u4E00\u5B9A\uFF0C\u4E3A\u4EC0\u4E48\u5462\uFF1F\u8FD9\u91CC\u53EF\u80FD\u4F1A\u53D1\u751F<strong>\u6307\u4EE4\u91CD\u6392\u5E8F\uFF08Instruction Reorder\uFF09</strong>\u3002</p><p>\u5728\u6267\u884C\u7A0B\u5E8F\u65F6\u4E3A\u4E86\u63D0\u9AD8\u6027\u80FD\uFF0C\u7F16\u8BD1\u5668\u548C\u5904\u7406\u5668\u5E38\u5E38\u4F1A\u5BF9\u6307\u4EE4\u505A\u91CD\u6392\u5E8F\u3002\u91CD\u6392\u5E8F\u5206\u4E09\u79CD\u7C7B\u578B\uFF1A</p><p>1\uFF09\u7F16\u8BD1\u5668\u4F18\u5316\u7684\u91CD\u6392\u5E8F\u3002\u7F16\u8BD1\u5668\u5728\u4E0D\u6539\u53D8\u5355\u7EBF\u7A0B\u7A0B\u5E8F\u8BED\u4E49\u7684\u524D\u63D0\u4E0B\uFF0C\u53EF\u4EE5\u91CD\u65B0\u5B89\u6392\u8BED\u53E5\u7684\u6267\u884C\u987A\u5E8F\u3002</p><p>2\uFF09\u6307\u4EE4\u7EA7\u5E76\u884C\u7684\u91CD\u6392\u5E8F\u3002\u73B0\u4EE3\u5904\u7406\u5668\u91C7\u7528\u4E86\u6307\u4EE4\u7EA7\u5E76\u884C\u6280\u672F\uFF08Instruction-Level Parallelism\uFF0C ILP\uFF09\u6765\u5C06\u591A\u6761\u6307\u4EE4\u91CD\u53E0\u6267\u884C\u3002\u5982\u679C\u4E0D\u5B58\u5728\u6570\u636E\u4F9D\u8D56\u6027\uFF0C\u5904\u7406\u5668\u53EF\u4EE5\u6539\u53D8\u8BED\u53E5\u5BF9\u5E94\u673A\u5668\u6307\u4EE4\u7684\u6267\u884C\u987A\u5E8F\u3002</p><p>3\uFF09\u5185\u5B58\u7CFB\u7EDF\u7684\u91CD\u6392\u5E8F\u3002\u7531\u4E8E\u5904\u7406\u5668\u4F7F\u7528\u7F13\u5B58\u548C\u8BFB / \u5199\u7F13\u51B2\u533A\uFF0C\u8FD9\u4F7F\u5F97\u52A0\u8F7D\u548C\u5B58\u50A8\u64CD\u4F5C\u770B\u4E0A\u53BB\u53EF\u80FD\u662F\u5728\u4E71\u5E8F\u6267\u884C\u3002</p><p>\u4ECE Java \u6E90\u4EE3\u7801\u5230\u6700\u7EC8\u5B9E\u9645\u6267\u884C\u7684\u6307\u4EE4\u5E8F\u5217\uFF0C\u4F1A\u5206\u522B\u7ECF\u5386\u4E0B\u9762\u4E09\u79CD\u91CD\u6392\u5E8F\uFF1A</p><p><img src="`+b+`" alt=""></p><p>\u4E0A\u8FF0\u7684 1 \u5C5E\u4E8E\u7F16\u8BD1\u5668\u91CD\u6392\u5E8F\uFF0C2 \u548C 3 \u5C5E\u4E8E\u5904\u7406\u5668\u91CD\u6392\u5E8F\u3002\u8FD9\u4E9B\u91CD\u6392\u5E8F\u90FD\u53EF\u80FD\u4F1A\u5BFC\u81F4\u591A\u7EBF\u7A0B\u7A0B\u5E8F\u51FA\u73B0\u5185\u5B58\u53EF\u89C1\u6027\u95EE\u9898\u3002\u5BF9\u4E8E\u7F16\u8BD1\u5668\uFF0CJMM \u7684\u7F16\u8BD1\u5668\u91CD\u6392\u5E8F\u89C4\u5219\u4F1A\u7981\u6B62\u7279\u5B9A\u7C7B\u578B\u7684\u7F16\u8BD1\u5668\u91CD\u6392\u5E8F\uFF08\u4E0D\u662F\u6240\u6709\u7684\u7F16\u8BD1\u5668\u91CD\u6392\u5E8F\u90FD\u8981\u7981\u6B62\uFF09\u3002\u5BF9\u4E8E\u5904\u7406\u5668\u91CD\u6392\u5E8F\uFF0CJMM \u7684\u5904\u7406\u5668\u91CD\u6392\u5E8F\u89C4\u5219\u4F1A\u8981\u6C42 Java \u7F16\u8BD1\u5668\u5728\u751F\u6210\u6307\u4EE4\u5E8F\u5217\u65F6\uFF0C\u63D2\u5165\u7279\u5B9A\u7C7B\u578B\u7684\u5185\u5B58\u5C4F\u969C\uFF08memory barriers\uFF0Cintel \u79F0\u4E4B\u4E3A memory fence\uFF09\u6307\u4EE4\uFF0C\u901A\u8FC7\u5185\u5B58\u5C4F\u969C\u6307\u4EE4\u6765\u7981\u6B62\u7279\u5B9A\u7C7B\u578B\u7684\u5904\u7406\u5668\u91CD\u6392\u5E8F\uFF08\u4E0D\u662F\u6240\u6709\u7684\u5904\u7406\u5668\u91CD\u6392\u5E8F\u90FD\u8981\u7981\u6B62\uFF09\u3002</p><p><strong>Java \u4E2D\u7684\u6709\u5E8F\u6027</strong></p><blockquote><p>\u5728 Java \u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7 volatile \u5173\u952E\u5B57\u6765\u4FDD\u8BC1\u4E00\u5B9A\u7684\u6709\u5E8F\u6027</p></blockquote><p>volatile \u5173\u952E\u5B57\u4F1A\u7981\u6B62\u6307\u4EE4\u91CD\u6392\u5E8F\uFF0C\u6765\u4FDD\u8BC1\u4EE3\u7801\u8BED\u53E5\u6309\u7167\u987A\u5E8F\u6267\u884C</p><blockquote><p>\u26A0\uFE0F \u53EF\u4EE5\u901A\u8FC7 synchronized \u548C Lock \u6765\u4FDD\u8BC1\u6709\u5E8F\u6027\uFF0Csynchronized \u548C Lock \u4FDD\u8BC1\u6BCF\u4E2A\u65F6\u523B\u662F\u6709\u4E00\u4E2A\u7EBF\u7A0B\u6267\u884C\u540C\u6B65\u4EE3\u7801\uFF0C\u76F8\u5F53\u4E8E\u662F\u8BA9\u7EBF\u7A0B\u987A\u5E8F\u6267\u884C\u540C\u6B65\u4EE3\u7801\uFF0C\u81EA\u7136\u5C31\u4FDD\u8BC1\u4E86\u6709\u5E8F\u6027\u3002JMM \u662F\u901A\u8FC7 Happens-Before \u89C4\u5219\u6765\u4FDD\u8BC1\u6709\u5E8F\u6027\u7684\u3002</p></blockquote><br><h3 id="java-\u5982\u4F55\u89E3\u51B3\u5E76\u53D1\u95EE\u9898" tabindex="-1">Java \u5982\u4F55\u89E3\u51B3\u5E76\u53D1\u95EE\u9898 <a class="header-anchor" href="#java-\u5982\u4F55\u89E3\u51B3\u5E76\u53D1\u95EE\u9898" aria-hidden="true">#</a></h3><blockquote><p>\u53EF\u4EE5\u4ECE\u4E24\u4E2A\u65B9\u9762\u51FA\u53D1\u6765\u7406\u89E3\u8FD9\u4E2A\u95EE\u9898</p></blockquote><p><strong>\u6838\u5FC3\u77E5\u8BC6\u70B9</strong></p><p>1\u3001Happens-Before \u539F\u5219</p><p>2\u3001synchronized &amp; volatile &amp; final \u5173\u952E\u5B57</p><br><h4 id="happens-before-\u539F\u5219" tabindex="-1">Happens-Before \u539F\u5219 <a class="header-anchor" href="#happens-before-\u539F\u5219" aria-hidden="true">#</a></h4><p>1\u3001\u5355\u4E00\u539F\u5219\u3002\u5728\u4E00\u4E2A\u7EBF\u7A0B\u5185\uFF0C\u5728\u7A0B\u5E8F\u524D\u9762\u7684\u64CD\u4F5C\u5148\u884C\u53D1\u751F\u4E8E\u540E\u9762\u7684\u64CD\u4F5C</p><p>2\u3001\u7BA1\u7A0B\u9501\u5B9A\u89C4\u5219\u3002\u4E00\u4E2A unlock \u64CD\u4F5C\u5148\u884C\u53D1\u751F\u4E8E\u540E\u9762\u5BF9\u540C\u4E00\u4E2A\u9501\u7684 lock \u64CD\u4F5C</p><p>3\u3001volatile \u53D8\u91CF\u89C4\u5219\u3002\u5BF9\u4E00\u4E2A volatile \u53D8\u91CF\u7684\u5199\u64CD\u4F5C\u5148\u884C\u53D1\u751F\u4E8E\u540E\u9762\u5BF9\u8FD9\u4E2A\u53D8\u91CF\u7684\u8BFB\u64CD\u4F5C</p><p>4\u3001\u7EBF\u7A0B\u542F\u52A8\u89C4\u5219\u3002Thread \u5BF9\u8C61\u7684<code>start()</code>\u65B9\u6CD5\u8C03\u7528\u5148\u884C\u53D1\u751F\u4E8E\u6B64\u7EBF\u7A0B\u7684\u6BCF\u4E00\u4E2A\u52A8\u4F5C</p><p>5\u3001\u7EBF\u7A0B\u52A0\u5165\u89C4\u5219\u3002Thread \u5BF9\u8C61\u7684\u7ED3\u675F\u5148\u884C\u53D1\u751F\u4E8E<code>join()</code>\u65B9\u6CD5\u8FD4\u56DE</p><p>6\u3001\u7EBF\u7A0B\u4E2D\u65AD\u89C4\u5219\u3002\u5BF9\u7EBF\u7A0B<code>interrupt()</code>\u65B9\u6CD5\u7684\u8C03\u7528\u5148\u884C\u53D1\u751F\u4E8E\u88AB\u4E2D\u65AD\u7EBF\u7A0B\u7684\u4EE3\u7801\u68C0\u6D4B\u5230\u4E2D\u65AD\u4E8B\u4EF6\u7684\u53D1\u751F\uFF0C\u53EF\u4EE5\u901A\u8FC7<code>interrupted()</code>\u65B9\u6CD5\u68C0\u6D4B\u5230\u662F\u5426\u6709\u4E2D\u65AD\u53D1\u751F</p><p>7\u3001\u5BF9\u8C61\u7EC8\u7ED3\u89C4\u5219\u3002\u4E00\u4E2A\u5BF9\u8C61\u7684\u521D\u59CB\u5316\u5B8C\u6210\uFF08\u6784\u9020\u51FD\u6570\u6267\u884C\u7ED3\u675F\uFF09\u5148\u884C\u53D1\u751F\u4E8E\u5B83\u7684<code>finalize()</code>\u65B9\u6CD5\u7684\u5F00\u59CB</p><p>8\u3001\u4F20\u9012\u6027\u3002\u5982\u679C\u64CD\u4F5C A \u5148\u884C\u53D1\u751F\u4E8E\u64CD\u4F5C B\uFF0C\u64CD\u4F5C B \u5148\u884C\u53D1\u751F\u4E8E\u64CD\u4F5C C\uFF0C\u90A3\u4E48\u64CD\u4F5C A \u5148\u884C\u53D1\u751F\u4E8E\u64CD\u4F5C C</p><br><h4 id="synchronized-\u8BE6\u89E3" tabindex="-1">synchronized \u8BE6\u89E3 <a class="header-anchor" href="#synchronized-\u8BE6\u89E3" aria-hidden="true">#</a></h4><p><u><strong>1 - \u4F7F\u7528 synchronized \u7684\u6CE8\u610F\u4E8B\u9879</strong></u></p><p><strong>1\u3001\u76F8\u5173\u7406\u89E3</strong></p><p>1\uFF09\u4E00\u628A\u9501\u53EA\u80FD\u540C\u65F6\u88AB\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u53D6\uFF0C\u6CA1\u6709\u83B7\u5F97\u9501\u7684\u7EBF\u7A0B\u53EA\u80FD\u7B49\u5F85\uFF1B</p><p>2\uFF09\u6BCF\u4E2A\u5B9E\u4F8B\u90FD\u5BF9\u5E94\u6709\u81EA\u5DF1\u7684\u4E00\u628A\u9501\uFF08this\uFF09\uFF08\u5B9E\u4F8B/\u5BF9\u8C61\u9501\uFF09\uFF0C\u4E0D\u540C\u5B9E\u4F8B\u5BF9\u8C61\u4E4B\u95F4\u4E92\u4E0D\u5F71\u54CD\u3002</p><p>3\uFF09\u4EE5<code>\u7C7B\u540D.class</code>\u4F5C\u4E3A\u540C\u6B65\u76D1\u89C6\u5668\u6216\u8005\u7528 synchronized \u4FEE\u9970\u7684\u662F static \u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u6240\u6709\u5BF9\u8C61\u516C\u7528\u540C\u4E00\u628A\u9501\uFF08\u7C7B\u9501\uFF09</p><p>4\uFF09<strong>\u975E\u9759\u6001 synchronized</strong>\u65B9\u6CD5/\u4EE3\u7801\u5757\uFF0C\u9501\u8D44\u6E90\u4E3A\u5B9E\u4F8B\u5BF9\u8C61\u672C\u8EAB\uFF0C\u5373<code>this</code>\uFF1B<strong>\u9759\u6001 synchronized</strong>\u65B9\u6CD5/\u4EE3\u7801\u5757\uFF0C\u9501\u8D44\u6E90\u4E3A\u5F53\u524D\u7C7B\uFF0C\u5373<code>XXX.class</code></p><p>5\uFF09<strong>synchronized \u4FEE\u9970\u7684\u65B9\u6CD5\uFF0C\u65E0\u8BBA\u65B9\u6CD5\u6B63\u5E38\u6267\u884C\u5B8C\u6BD5\u8FD8\u662F\u629B\u51FA\u5F02\u5E38\uFF0C\u90FD\u4F1A\u91CA\u653E\u9501</strong></p><br><p><strong>2\u3001\u6CE8\u610F\u4E8B\u9879</strong></p><p>6\uFF09\u9501\u5BF9\u8C61\u4E0D\u80FD\u4E3A\u7A7A\uFF0C\u56E0\u4E3A\u9501\u7684\u4FE1\u606F\u90FD\u4FDD\u5B58\u5728\u5BF9\u8C61\u5934\u91CC</p><p>7\uFF09\u4F5C\u7528\u57DF\u4E0D\u5B9C\u8FC7\u5927\uFF0C\u5F71\u54CD\u7A0B\u5E8F\u6267\u884C\u7684\u901F\u5EA6\uFF0C\u63A7\u5236\u8303\u56F4\u8FC7\u5927\uFF0C\u7F16\u5199\u4EE3\u7801\u4E5F\u5BB9\u6613\u51FA\u9519</p><p>8\uFF09\u5728\u80FD\u9009\u62E9\u7684\u60C5\u51B5\u4E0B\uFF0C\u65E2\u4E0D\u8981\u7528 Lock \u4E5F\u4E0D\u8981\u7528 synchronized \u5173\u952E\u5B57\u3002\u800C\u662F\u4F7F\u7528<code>java.util.concurrent</code>\u5305\u4E2D\u7684\u5404\u79CD\u5404\u6837\u7684\u7C7B\uFF0C\u5982\u679C\u4E0D\u7528\u8BE5\u5305\u4E0B\u7684\u7C7B\uFF0C\u5728\u6EE1\u8DB3\u4E1A\u52A1\u7684\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u4F7F\u7528 synchronized \u5173\u952E\uFF0C\u56E0\u4E3A\u4EE3\u7801\u91CF\u5C11\uFF0C\u907F\u514D\u51FA\u9519</p><br><p><u><strong>2 - synchronized \u7684\u539F\u7406\u5206\u6790</strong></u></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SynchronizedDemo</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span> object <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">method1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
        <span class="token function">method2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">method2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// #################################################</span>
<span class="token comment">// javac Test.java</span>
<span class="token comment">// javap -v Test</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">method1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> ACC_PUBLIC
    <span class="token class-name">Code</span><span class="token operator">:</span>
      stack<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">1</span>
         <span class="token number">0</span><span class="token operator">:</span> aload_0
         <span class="token number">1</span><span class="token operator">:</span> getfield      #<span class="token number">3</span>                  <span class="token comment">// Field object:Ljava/lang/Object;</span>
         <span class="token number">4</span><span class="token operator">:</span> dup
         <span class="token number">5</span><span class="token operator">:</span> astore_1
         <span class="token comment">// 1\u3001monitorenter</span>
         <span class="token number">6</span><span class="token operator">:</span> monitorenter
         <span class="token number">7</span><span class="token operator">:</span> aload_1
         <span class="token comment">// 2\u3001monitorexit</span>
         <span class="token number">8</span><span class="token operator">:</span> monitorexit
         <span class="token number">9</span><span class="token operator">:</span> <span class="token keyword">goto</span>          <span class="token number">17</span>
        <span class="token number">12</span><span class="token operator">:</span> astore_2
        <span class="token number">13</span><span class="token operator">:</span> aload_1
        <span class="token comment">// 3\u3001monitorexit</span>
        <span class="token number">14</span><span class="token operator">:</span> monitorexit
        <span class="token number">15</span><span class="token operator">:</span> aload_2
        <span class="token number">16</span><span class="token operator">:</span> athrow
        <span class="token number">17</span><span class="token operator">:</span> invokestatic  #<span class="token number">4</span>                  <span class="token comment">// Method method2:()V</span>
        <span class="token number">20</span><span class="token operator">:</span> <span class="token keyword">return</span>
      <span class="token class-name">Exception</span> table<span class="token operator">:</span>
         from    <span class="token keyword">to</span>  <span class="token namespace">target</span> type
             <span class="token number">7</span>     <span class="token number">9</span>    <span class="token number">12</span>   any
            <span class="token number">12</span>    <span class="token number">15</span>    <span class="token number">12</span>   any
      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>
        line <span class="token number">4</span><span class="token operator">:</span> <span class="token number">0</span>
        line <span class="token number">5</span><span class="token operator">:</span> <span class="token number">7</span>
        line <span class="token number">6</span><span class="token operator">:</span> <span class="token number">17</span>
        line <span class="token number">7</span><span class="token operator">:</span> <span class="token number">20</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u53CD\u7F16\u8BD1\u51FA\u6765\u7684\u4EE3\u7801\u4E2D\u5305\u542B<code>monitorenter</code>\u548C<code>monitorexit</code>\u6307\u4EE4\u3002<code>monitorenter</code>\u548C<code>monitorexit</code>\u6307\u4EE4\uFF0C\u4F1A\u8BA9\u5BF9\u8C61\u5728\u64CD\u4F5C\u9501\u671F\u95F4\uFF0C\u4F7F\u5176\u9501\u8BA1\u6570\u5668\u52A01\u6216\u8005\u51CF1\u3002\u6BCF\u4E00\u4E2A\u5BF9\u8C61\u5728\u540C\u4E00\u65F6\u95F4\u53EA\u4E0E\u4E00\u4E2A monitor\uFF08\u9501/\u540C\u6B65\u76D1\u89C6\u5668\uFF09\u76F8\u5173\u8054\uFF0C\u800C\u4E00\u4E2A monitor \u5728\u540C\u4E00\u65F6\u95F4\u53EA\u80FD\u88AB\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u5F97\u3002</p><br><p><strong>1\u3001<code>mnitorenter</code>\u6307\u4EE4</strong></p><p>\u4E00\u4E2A\u5BF9\u8C61\u5728\u5C1D\u8BD5\u83B7\u5F97\u4E0E\u8FD9\u4E2A\u5BF9\u8C61\u76F8\u5173\u8054\u7684 monitor \u9501\u7684\u6240\u6709\u6743\u7684\u65F6\u5019\uFF0C<code>mnitorenter</code>\u6307\u4EE4\u53EF\u80FD\u4F1A\u53D1\u751F\u5982\u4E0B3\u79CD\u60C5\u51B5\u4E4B\u4E00\uFF1A</p><p>1\uFF09monitor \u8BA1\u6570\u5668\u4E3A0\uFF0C\u610F\u5473\u7740\u76EE\u524D\u8FD8\u6CA1\u6709\u88AB\u83B7\u5F97\uFF0C\u90A3\u8FD9\u4E2A\u7EBF\u7A0B\u5C31\u4F1A\u7ACB\u523B\u83B7\u5F97\u7136\u540E\u628A\u9501\u8BA1\u6570\u5668+1\uFF0C\u4E00\u65E6+1\uFF0C\u522B\u7684\u7EBF\u7A0B\u518D\u60F3\u83B7\u53D6\uFF0C\u5C31\u9700\u8981\u7B49\u5F85</p><p>2\uFF09\u5982\u679C\u8FD9\u4E2A monitor \u5DF2\u7ECF\u62FF\u5230\u4E86\u8FD9\u4E2A\u9501\u7684\u6240\u6709\u6743\uFF0C\u53C8\u91CD\u5165\u4E86\u8FD9\u628A\u9501\uFF0C\u90A3\u9501\u8BA1\u6570\u5668\u5C31\u4F1A\u7D2F\u52A0\uFF0C\u53D8\u62102\uFF0C\u5E76\u4E14\u968F\u7740\u91CD\u5165\u7684\u6B21\u6570\uFF0C\u4F1A\u4E00\u76F4\u7D2F\u52A0</p><p>3\uFF09\u8FD9\u628A\u9501\u5DF2\u7ECF\u88AB\u522B\u7684\u7EBF\u7A0B\u83B7\u53D6\u4E86\uFF0C\u7B49\u5F85\u9501\u91CA\u653E</p><br><p><strong>2\u3001<code>monitorexit</code>\u6307\u4EE4</strong></p><p><code>monitorexit</code>\u6307\u4EE4\u91CA\u653E\u5BF9 monitor \u7684\u6240\u6709\u6743\uFF0C\u91CA\u653E\u8FC7\u7A0B\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u5C06 monitor \u7684\u8BA1\u6570\u5668\u51CF1\uFF0C\u5982\u679C\u51CF\u5B8C\u4EE5\u540E\uFF0C\u8BA1\u6570\u5668\u4E0D\u662F0\uFF0C\u5219\u4EE3\u8868\u521A\u624D\u662F\u91CD\u5165\u8FDB\u6765\u7684\uFF0C\u5F53\u524D\u7EBF\u7A0B\u8FD8\u7EE7\u7EED\u6301\u6709\u8FD9\u628A\u9501\u7684\u6240\u6709\u6743\uFF0C\u5982\u679C\u8BA1\u6570\u5668\u53D8\u62100\uFF0C\u5219\u4EE3\u8868\u5F53\u524D\u7EBF\u7A0B\u4E0D\u518D\u62E5\u6709\u8BE5 monitor \u7684\u6240\u6709\u6743\uFF0C\u5373\u91CA\u653E\u9501\u3002</p><br><p><strong>3\u3001\u76D1\u89C6\u5668\u6267\u884C\u903B\u8F91</strong></p><p>\u4E0B\u56FE\u8868\u73B0\u4E86\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u76D1\u89C6\u5668\uFF0C\u540C\u6B65\u961F\u5217\u4EE5\u53CA\u6267\u884C\u7EBF\u7A0B\u72B6\u6001\u4E4B\u95F4\u7684\u5173\u7CFB\uFF1A</p><p><img src="`+m+`" alt=""></p><p>\u53EF\u4EE5\u770B\u51FA\uFF0C\u4EFB\u610F\u7EBF\u7A0B\u5BF9 Object \u7684\u8BBF\u95EE\uFF0C\u9996\u5148\u8981\u83B7\u5F97 Object \u7684\u76D1\u89C6\u5668\uFF0C\u5982\u679C\u83B7\u53D6\u5931\u8D25\uFF0C\u8BE5\u7EBF\u7A0B\u5C31\u8FDB\u5165\u540C\u6B65\u72B6\u6001\uFF0C\u7EBF\u7A0B\u72B6\u6001\u53D8\u4E3A BLOCKED\uFF0C\u5F53 Object \u7684\u76D1\u89C6\u5668\u5360\u6709\u8005\u91CA\u653E\u540E\uFF0C\u5728\u540C\u6B65\u961F\u5217\u4E2D\u5F97\u7EBF\u7A0B\u5C31\u4F1A\u6709\u673A\u4F1A\u91CD\u65B0\u83B7\u53D6\u8BE5\u76D1\u89C6\u5668</p><br><p><u><strong>3 - \u53EF\u91CD\u5165\u9501\u539F\u7406</strong></u></p><blockquote><p>\u52A0\u9501\u6B21\u6570\u8BA1\u6570\u5668\u7ED3\u5408\u5BF9\u8C61\u5934\u4E2D\u7684\u4FE1\u606F</p></blockquote><p>\u4E0A\u9762\u7684 demo \u4E2D\u5728\u6267\u884C\u5B8C\u540C\u6B65\u4EE3\u7801\u5757\u4E4B\u540E\u7D27\u63A5\u7740\u518D\u4F1A\u53BB\u6267\u884C\u4E00\u4E2A\u9759\u6001\u540C\u6B65\u65B9\u6CD5\uFF0C\u800C\u8FD9\u4E2A\u65B9\u6CD5\u9501\u7684\u5BF9\u8C61\u4F9D\u7136\u5C31\u8FD9\u4E2A\u7C7B\u5BF9\u8C61\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u6B63\u5728\u6267\u884C\u7684\u7EBF\u7A0B\u8FD8\u9700\u8981\u83B7\u53D6\u8BE5\u9501\u5417\uFF1F</p><p>\u7B54\u6848\u662F\u4E0D\u5FC5\u7684\uFF0C\u4ECE\u4E0A\u56FE\u4E2D\u5C31\u53EF\u4EE5\u770B\u51FA\u6765\uFF0C\u6267\u884C\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u7684\u65F6\u5019\u5C31\u53EA\u6709\u4E00\u6761 monitorexit \u6307\u4EE4\uFF0C\u5E76\u6CA1\u6709 monitorenter \u83B7\u53D6\u9501\u7684\u6307\u4EE4\u3002\u8FD9\u5C31\u662F\u9501\u7684\u91CD\u5165\u6027\uFF0C\u5373\u5728\u540C\u4E00\u9501\u7A0B\u4E2D\uFF0C\u7EBF\u7A0B\u4E0D\u9700\u8981\u518D\u6B21\u83B7\u53D6\u540C\u4E00\u628A\u9501\u3002\u5728\u83B7\u53D6\u9501\u7684\u65F6\u5019\u53EA\u9700\u8981\u5BF9\u6BD4\u5F53\u524D\u5BF9\u50CF hashCode \u548C\u9501\u5BF9\u8C61\u5934\u4E2D\u7684 hashCode \u4FE1\u606F\u548C\u7EBF\u7A0BID</p><blockquote><p>\u26A0\uFE0F synchronized \u5148\u5929\u5177\u6709\u91CD\u5165\u6027\u3002\u6BCF\u4E2A\u5BF9\u8C61\u62E5\u6709\u4E00\u4E2A\u8BA1\u6570\u5668\uFF0C\u5F53\u7EBF\u7A0B\u83B7\u53D6\u8BE5\u5BF9\u8C61\u9501\u540E\uFF0C\u8BA1\u6570\u5668\u5C31\u4F1A\u52A0\u4E00\uFF0C\u91CA\u653E\u9501\u540E\u5C31\u4F1A\u5C06\u8BA1\u6570\u5668\u51CF\u4E00\u3002</p></blockquote><br><p><u><strong>4 - synchronized \u4FDD\u8BC1\u53EF\u89C1\u6027\u7684\u539F\u7406</strong></u></p><blockquote><p>synchronized \u7684 happens-before \u89C4\u5219\uFF0C\u5373<strong>\u76D1\u89C6\u5668\u9501\u89C4\u5219</strong>\uFF1A\u5BF9\u540C\u4E00\u4E2A\u76D1\u89C6\u5668\u7684\u89E3\u9501\uFF0Chappens-before \u4E8E\u5BF9\u8BE5\u76D1\u89C6\u5668\u7684\u52A0\u9501</p></blockquote><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MonitorDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">writer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// 1</span>
        a<span class="token operator">++</span><span class="token punctuation">;</span>                                <span class="token comment">// 2</span>
    <span class="token punctuation">}</span>                                       <span class="token comment">// 3</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">reader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 4</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> a<span class="token punctuation">;</span>                         <span class="token comment">// 5</span>
    <span class="token punctuation">}</span>                                      <span class="token comment">// 6</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8BE5\u4EE3\u7801\u7684happens-before\u5173\u7CFB\u5982\u56FE\u6240\u793A\uFF1A</p><p><img src="`+d+`" alt=""></p><p>\u5728\u56FE\u4E2D\u6BCF\u4E00\u4E2A\u7BAD\u5934\u8FDE\u63A5\u7684\u4E24\u4E2A\u8282\u70B9\u5C31\u4EE3\u8868\u4E4B\u95F4\u7684 happens-before \u5173\u7CFB\uFF0C\u9ED1\u8272\u7684\u662F\u901A\u8FC7\u7A0B\u5E8F\u987A\u5E8F\u89C4\u5219\u63A8\u5BFC\u51FA\u6765\uFF0C\u7EA2\u8272\u7684\u4E3A\u76D1\u89C6\u5668\u9501\u89C4\u5219\u63A8\u5BFC\u800C\u51FA\uFF1A\u7EBF\u7A0BA\u91CA\u653E\u9501 happens-before \u7EBF\u7A0BB\u52A0\u9501\uFF0C\u84DD\u8272\u7684\u5219\u662F\u901A\u8FC7\u7A0B\u5E8F\u987A\u5E8F\u89C4\u5219\u548C\u76D1\u89C6\u5668\u9501\u89C4\u5219\u63A8\u6D4B\u51FA\u6765 happens-befor \u5173\u7CFB\uFF0C\u901A\u8FC7\u4F20\u9012\u6027\u89C4\u5219\u8FDB\u4E00\u6B65\u63A8\u5BFC\u7684 happens-before \u5173\u7CFB\u3002</p><br><blockquote><p>\u73B0\u5728\u6211\u4EEC\u6765\u91CD\u70B9\u5173\u6CE82 happens-before 5\uFF0C\u901A\u8FC7\u8FD9\u4E2A\u5173\u7CFB\u6211\u4EEC\u53EF\u4EE5\u5F97\u51FA\u4EC0\u4E48\u2753</p></blockquote><p>\u6839\u636E happens-before \u7684\u5B9A\u4E49\u4E2D\u7684\u4E00\u6761\uFF1A\u5982\u679CA happens-before B\uFF0C\u5219A\u7684\u6267\u884C\u7ED3\u679C\u5BF9B\u53EF\u89C1\uFF0C\u5E76\u4E14A\u7684\u6267\u884C\u987A\u5E8F\u5148\u4E8EB\u3002\u7EBF\u7A0BA\u5148\u5BF9\u5171\u4EAB\u53D8\u91CFA\u8FDB\u884C\u52A0\u4E00\uFF0C\u75312 happens-before 5\u5173\u7CFB\u53EF\u77E5\u7EBF\u7A0BA\u7684\u6267\u884C\u7ED3\u679C\u5BF9\u7EBF\u7A0BB\u53EF\u89C1\u5373\u7EBF\u7A0BB\u6240\u8BFB\u53D6\u5230\u7684a\u7684\u503C\u4E3A1\u3002</p><br><p><u><strong>5 - JVM \u4E2D\u9501\u7684\u4F18\u5316</strong></u></p><p>\u5728 JVM \u4E2D monitorenter \u548C monitorexit \u5B57\u8282\u7801\u4F9D\u8D56\u4E8E\u5E95\u5C42\u7684\u64CD\u4F5C\u7CFB\u7EDF\u7684<code>Mutex Lock</code>\u6765\u5B9E\u73B0\u7684\uFF0C\u4F46\u662F\u7531\u4E8E\u4F7F\u7528 Mutex Lock \u9700\u8981\u5C06\u5F53\u524D\u7EBF\u7A0B\u6302\u8D77\u5E76\u4ECE\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u6001\u6765\u6267\u884C\uFF0C\u8FD9\u79CD\u5207\u6362\u7684\u4EE3\u4EF7\u662F\u975E\u5E38\u6602\u8D35\u7684\u3002</p><p>\u5728\u73B0\u5B9E\u4E2D\u7684\u5927\u90E8\u5206\u60C5\u51B5\u4E0B\uFF0C\u540C\u6B65\u65B9\u6CD5\u662F\u8FD0\u884C\u5728\u5355\u7EBF\u7A0B\u73AF\u5883\uFF08\u65E0\u9501\u7ADE\u4E89\u73AF\u5883\uFF09\uFF0C\u5982\u679C\u6BCF\u6B21\u90FD\u8C03\u7528 Mutex Lock \u90A3\u4E48\u5C06\u4E25\u91CD\u7684\u5F71\u54CD\u7A0B\u5E8F\u7684\u6027\u80FD\u3002<strong>\u5728 JDK 1.6 \u4E2D\u5BF9\u9501\u7684\u5B9E\u73B0\u5F15\u5165\u4E86\u5927\u91CF\u7684\u4F18\u5316\uFF0C\u5982\u9501\u7C97\u5316\uFF08Lock Coarsening\uFF09\u3001\u9501\u6D88\u9664\uFF08Lock Elimination\uFF09\u3001\u8F7B\u91CF\u7EA7\u9501\uFF08Lightweight Locking\uFF09\u3001\u504F\u5411\u9501\uFF08Biased Locking\uFF09\u3001\u9002\u5E94\u6027\u81EA\u65CB\uFF08Adaptive Spinning\uFF09\u7B49\u6280\u672F\u6765\u51CF\u5C11\u9501\u64CD\u4F5C\u7684\u5F00\u9500</strong></p><ul><li><p><code>\u9501\u7C97\u5316(Lock Coarsening)</code>\uFF1A\u4E5F\u5C31\u662F\u51CF\u5C11\u4E0D\u5FC5\u8981\u7684\u7D27\u8FDE\u5728\u4E00\u8D77\u7684 unlock\uFF0Clock \u64CD\u4F5C\uFF0C\u5C06\u591A\u4E2A\u8FDE\u7EED\u7684\u9501\u6269\u5C55\u6210\u4E00\u4E2A\u8303\u56F4\u66F4\u5927\u7684\u9501\u3002</p></li><li><p><code>\u9501\u6D88\u9664(Lock Elimination)</code>\uFF1A\u901A\u8FC7\u8FD0\u884C\u65F6 JIT \u7F16\u8BD1\u5668\u7684\u9003\u9038\u5206\u6790\u6765\u6D88\u9664\u4E00\u4E9B\u6CA1\u6709\u5728\u5F53\u524D\u540C\u6B65\u5757\u4EE5\u5916\u88AB\u5176\u4ED6\u7EBF\u7A0B\u5171\u4EAB\u7684\u6570\u636E\u7684\u9501\u4FDD\u62A4\uFF0C\u901A\u8FC7\u9003\u9038\u5206\u6790\u4E5F\u53EF\u4EE5\u5728\u7EBF\u7A0B\u672C\u5730 Stack \u4E0A\u8FDB\u884C\u5BF9\u8C61\u7A7A\u95F4\u7684\u5206\u914D\uFF08\u540C\u65F6\u8FD8\u53EF\u4EE5\u51CF\u5C11Heap\u4E0A\u7684\u5783\u573E\u6536\u96C6\u5F00\u9500\uFF09\u3002</p></li><li><p><code>\u8F7B\u91CF\u7EA7\u9501(Lightweight Locking)</code>\uFF1A\u8FD9\u79CD\u9501\u5B9E\u73B0\u7684\u80CC\u540E\u57FA\u4E8E\u8FD9\u6837\u4E00\u79CD\u5047\u8BBE\uFF0C\u5373\u5728\u771F\u5B9E\u7684\u60C5\u51B5\u4E0B\u6211\u4EEC\u7A0B\u5E8F\u4E2D\u7684\u5927\u90E8\u5206\u540C\u6B65\u4EE3\u7801\u4E00\u822C\u90FD\u5904\u4E8E\u65E0\u9501\u7ADE\u4E89\u72B6\u6001\uFF08\u5373\u5355\u7EBF\u7A0B\u6267\u884C\u73AF\u5883\uFF09\uFF0C\u5728\u65E0\u9501\u7ADE\u4E89\u7684\u60C5\u51B5\u4E0B\u5B8C\u5168\u53EF\u4EE5\u907F\u514D\u8C03\u7528\u64CD\u4F5C\u7CFB\u7EDF\u5C42\u9762\u7684\u91CD\u91CF\u7EA7\u4E92\u65A5\u9501\uFF0C\u53D6\u800C\u4EE3\u4E4B\u7684\u662F\u5728 monitorenter \u548C monitorexit \u4E2D\u53EA\u9700\u8981\u4F9D\u9760\u4E00\u6761 CAS \u539F\u5B50\u6307\u4EE4\u5C31\u53EF\u4EE5\u5B8C\u6210\u9501\u7684\u83B7\u53D6\u53CA\u91CA\u653E\u3002\u5F53\u5B58\u5728\u9501\u7ADE\u4E89\u7684\u60C5\u51B5\u4E0B\uFF0C\u6267\u884C CAS \u6307\u4EE4\u5931\u8D25\u7684\u7EBF\u7A0B\u5C06\u8C03\u7528\u64CD\u4F5C\u7CFB\u7EDF\u4E92\u65A5\u9501\u8FDB\u5165\u5230\u963B\u585E\u72B6\u6001\uFF0C\u5F53\u9501\u88AB\u91CA\u653E\u7684\u65F6\u5019\u88AB\u5524\u9192\uFF08\u5177\u4F53\u5904\u7406\u6B65\u9AA4\u4E0B\u9762\u8BE6\u7EC6\u8BA8\u8BBA\uFF09\u3002</p></li><li><p><code>\u504F\u5411\u9501(Biased Locking)</code>\uFF1A\u662F\u4E3A\u4E86\u5728\u65E0\u9501\u7ADE\u4E89\u7684\u60C5\u51B5\u4E0B\u907F\u514D\u5728\u9501\u83B7\u53D6\u8FC7\u7A0B\u4E2D\u6267\u884C\u4E0D\u5FC5\u8981\u7684 CAS \u539F\u5B50\u6307\u4EE4\uFF0C\u56E0\u4E3A CAS \u539F\u5B50\u6307\u4EE4\u867D\u7136\u76F8\u5BF9\u4E8E\u91CD\u91CF\u7EA7\u9501\u6765\u8BF4\u5F00\u9500\u6BD4\u8F83\u5C0F\u4F46\u8FD8\u662F\u5B58\u5728\u975E\u5E38\u53EF\u89C2\u7684\u672C\u5730\u5EF6\u8FDF\u3002</p></li><li><p><code>\u9002\u5E94\u6027\u81EA\u65CB(Adaptive Spinning)</code>\uFF1A\u5F53\u7EBF\u7A0B\u5728\u83B7\u53D6\u8F7B\u91CF\u7EA7\u9501\u7684\u8FC7\u7A0B\u4E2D\u6267\u884C CAS \u64CD\u4F5C\u5931\u8D25\u65F6\uFF0C\u5728\u8FDB\u5165\u4E0E monitor \u76F8\u5173\u8054\u7684\u64CD\u4F5C\u7CFB\u7EDF\u91CD\u91CF\u7EA7\u9501\uFF08mutex semaphore\uFF09\u524D\u4F1A\u8FDB\u5165\u5FD9\u7B49\u5F85\uFF08Spinning\uFF09\u7136\u540E\u518D\u6B21\u5C1D\u8BD5\uFF0C\u5F53\u5C1D\u8BD5\u4E00\u5B9A\u7684\u6B21\u6570\u540E\u5982\u679C\u4ECD\u7136\u6CA1\u6709\u6210\u529F\u5219\u8C03\u7528\u4E0E\u8BE5 monitor \u5173\u8054\u7684 semaphore \uFF08\u5373\u4E92\u65A5\u9501\uFF09\u8FDB\u5165\u5230\u963B\u585E\u72B6\u6001\u3002</p></li></ul><br><p><u><strong>6 - \u9501\u7C7B\u578B</strong></u></p><p><strong>1\u3001\u81EA\u65CB\u9501</strong></p><p>1\uFF09\u5F15\u5165\u539F\u56E0</p><p>\u5728\u591A\u7EBF\u7A0B\u7ADE\u4E89\u9501\u65F6\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u53D6\u9501\u65F6\uFF0C\u5B83\u4F1A\u963B\u585E\u6240\u6709\u6B63\u5728\u7ADE\u4E89\u7684\u7EBF\u7A0B\uFF0C\u8FD9\u6837\u5BF9\u6027\u80FD\u5E26\u6765\u4E86\u6781\u5927\u7684\u5F71\u54CD\u3002\u5728\u6302\u8D77\u7EBF\u7A0B\u548C\u6062\u590D\u7EBF\u7A0B\u7684\u64CD\u4F5C\u90FD\u9700\u8981\u8F6C\u5165\u5185\u6838\u6001\u4E2D\u5B8C\u6210\uFF0C\u8FD9\u4E9B\u64CD\u4F5C\u5BF9\u7CFB\u7EDF\u7684\u5E76\u53D1\u6027\u80FD\u5E26\u6765\u4E86\u5F88\u5927\u7684\u538B\u529B\u3002</p><p>\u540C\u65F6 HotSpot \u56E2\u961F\u6CE8\u610F\u5230\u5728\u5F88\u591A\u60C5\u51B5\u4E0B\uFF0C\u5171\u4EAB\u6570\u636E\u7684\u9501\u5B9A\u72B6\u6001\u53EA\u4F1A\u6301\u7EED\u5F88\u77ED\u7684\u4E00\u6BB5\u65F6\u95F4\uFF0C\u4E3A\u4E86\u8FD9\u6BB5\u65F6\u95F4\u53BB\u6302\u8D77\u548C\u56DE\u590D\u963B\u585E\u7EBF\u7A0B\u5E76\u4E0D\u503C\u5F97\u3002\u5728\u5982\u4ECA\u591A\u5904\u7406\u5668\u73AF\u5883\u4E0B\uFF0C\u5B8C\u5168\u53EF\u4EE5\u8BA9\u53E6\u4E00\u4E2A\u6CA1\u6709\u83B7\u53D6\u5230\u9501\u7684\u7EBF\u7A0B\u5728\u95E8\u5916\u7B49\u5F85\u4E00\u4F1A\uFF08\u81EA\u65CB\uFF09\uFF0C\u4F46\u4E0D\u653E\u5F03CPU\u7684\u6267\u884C\u65F6\u95F4\u3002\u7B49\u5F85\u6301\u6709\u9501\u7684\u7EBF\u7A0B\u662F\u5426\u5F88\u5FEB\u5C31\u4F1A\u91CA\u653E\u9501\u3002\u4E3A\u4E86\u8BA9\u7EBF\u7A0B\u7B49\u5F85\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u8BA9\u7EBF\u7A0B\u6267\u884C\u4E00\u4E2A\u5FD9\u5FAA\u73AF\uFF08\u81EA\u65CB\uFF09\uFF0C\u8FD9\u4FBF\u662F\u81EA\u65CB\u9501\u7531\u6765\u7684\u539F\u56E0\u3002</p><p>2\uFF09\u81EA\u65CB\u9501\u7684\u672C\u8D28</p><p>\u81EA\u65CB\u9501\u672C\u8D28\u4E0A\u4E0E\u963B\u585E\u5E76\u4E0D\u76F8\u540C\uFF0C\u5148\u4E0D\u8003\u8651\u5176\u5BF9\u591A\u5904\u7406\u5668\u7684\u8981\u6C42\uFF0C\u5982\u679C\u9501\u5360\u7528\u7684\u65F6\u95F4\u975E\u5E38\u7684\u77ED\uFF0C\u90A3\u4E48\u81EA\u65CB\u9501\u7684\u6027\u80FD\u4F1A\u975E\u5E38\u7684\u597D\uFF0C\u5982\u679C\u9501\u5360\u7528\u7684\u65F6\u95F4\u975E\u5E38\u7684\u957F\uFF0C\u4F1A\u5E26\u6765\u66F4\u591A\u7684\u6027\u80FD\u5F00\u9500\uFF08\u56E0\u4E3A\u5728\u7EBF\u7A0B\u81EA\u65CB\u65F6\uFF0C\u59CB\u7EC8\u4F1A\u5360\u7528CPU\u7684\u65F6\u95F4\u7247\uFF0C\u5982\u679C\u9501\u5360\u7528\u7684\u65F6\u95F4\u592A\u957F\uFF0C\u90A3\u4E48\u81EA\u65CB\u7684\u7EBF\u7A0B\u4F1A\u767D\u767D\u6D88\u8017\u6389CPU\u8D44\u6E90\uFF09\u3002</p><p>\u56E0\u6B64\u81EA\u65CB\u7B49\u5F85\u7684\u65F6\u95F4\u5FC5\u987B\u8981\u6709\u4E00\u5B9A\u7684\u9650\u5EA6\uFF0C\u5982\u679C\u81EA\u9009\u8D85\u8FC7\u4E86\u9650\u5B9A\u7684\u6B21\u6570\u4ECD\u7136\u6CA1\u6709\u6210\u529F\u83B7\u53D6\u5230\u9501\uFF0C\u5C31\u5E94\u8BE5\u4F7F\u7528\u4F20\u7EDF\u7684\u65B9\u5F0F\u53BB\u6302\u8D77\u7EBF\u7A0B\u4E86\uFF0C\u5728 JDK \u5B9A\u4E49\u4E2D\uFF0C\u81EA\u65CB\u9501\u9ED8\u8BA4\u7684\u81EA\u65CB\u6B21\u6570\u4E3A10\u6B21\uFF0C\u7528\u6237\u53EF\u4EE5\u4F7F\u7528\u53C2\u6570<code>-XX:PreBlockSpin</code>\u6765\u66F4\u6539\u3002</p><blockquote><p>\u26A0\uFE0F \u81EA\u65CB\u672C\u8EAB\u6765\u8BF4\u867D\u7136\u80FD\u591F\u907F\u514D\u4E86\u7EBF\u7A0B\u5207\u6362\u7684\u5F00\u9500\uFF0C\u4F46\u662F\u4ECD\u7136\u8981\u5360\u7528\u5904\u7406\u5668\u7684\u65F6\u95F4\uFF0C\u6240\u4EE5\u8981\u662F\u7B49\u5F85\u65F6\u95F4\u8F83\u77ED\u6548\u679C\u8FD8\u662F\u6BD4\u8F83\u597D\uFF0C\u4F46\u662F\u7B49\u5F85\u65F6\u95F4\u957F\uFF0C\u5C31\u4F1A\u767D\u767D\u6D6A\u8D39\u8D44\u6E90\uFF0C\u800C\u8D77\u4E0D\u5230\u4EFB\u4F55\u7684\u4F5C\u7528\u3002\u6240\u4EE5\u8FD9\u4E2A\u81EA\u65CB\u7684\u6B21\u6570\u8981\u8FDB\u884C\u9650\u5236\uFF0C\u4F46\u662F\u8FD9\u4E2A\u6B21\u6570\u662F\u591A\u5C11\u5462\uFF0C\u5F15\u51FA\u4E86\u81EA\u9002\u5E94\u81EA\u65CB\u9501\u3002</p></blockquote><br><p><strong>2\u3001\u81EA\u9002\u5E94\u81EA\u65CB\u9501</strong></p><blockquote><p>\u81EA\u9002\u5E94\u81EA\u65CB\u9501\uFF0C\u610F\u5473\u7740\u81EA\u65CB\u7684\u65F6\u95F4\u4E0D\u518D\u56FA\u5B9A\uFF0C\u800C\u662F<strong>\u7531\u4E0A\u6B21\u5728\u540C\u4E00\u4E2A\u9501\u4E0A\u7684\u81EA\u65CB\u65F6\u95F4\u53CA\u9501\u7684\u62E5\u6709\u8005\u7684\u72B6\u6001\u6765\u51B3\u5B9A\u7684</strong>\u3002</p></blockquote><p>1\uFF09\u5982\u679C\u5728\u540C\u4E00\u4E2A\u9501\u5BF9\u8C61\u4E0A\uFF0C\u81EA\u65CB\u7B49\u5F85\u521A\u521A\u6210\u529F\u83B7\u53D6\u8FC7\u9501\uFF0C\u5E76\u4E14\u6301\u6709\u9501\u7684\u7EBF\u7A0B\u6B63\u5728\u8FD0\u884C\u4E2D\uFF0C\u90A3\u4E48 JVM \u4F1A\u8BA4\u4E3A\u8BE5\u9501\u81EA\u65CB\u83B7\u53D6\u5230\u9501\u7684\u53EF\u80FD\u6027\u5F88\u5927\uFF0C\u4F1A\u81EA\u52A8\u589E\u52A0\u7B49\u5F85\u65F6\u95F4\u3002\u6BD4\u5982\u589E\u52A0\u5230100\u6B64\u5FAA\u73AF\u3002</p><p>2\uFF09\u76F8\u53CD\uFF0C\u5982\u679C\u5BF9\u4E8E\u67D0\u4E2A\u9501\uFF0C\u81EA\u65CB\u5F88\u5C11\u6210\u529F\u83B7\u53D6\u9501\u3002\u90A3\u518D\u4EE5\u540E\u8981\u83B7\u53D6\u8FD9\u4E2A\u9501\u65F6\u5C06\u53EF\u80FD\u7701\u7565\u6389\u81EA\u65CB\u8FC7\u7A0B\uFF0C\u4EE5\u907F\u514D\u6D6A\u8D39\u5904\u7406\u5668\u8D44\u6E90\u3002\u6709\u4E86\u81EA\u9002\u5E94\u81EA\u65CB\uFF0CJVM \u5BF9\u7A0B\u5E8F\u7684\u9501\u7684\u72B6\u6001\u9884\u6D4B\u4F1A\u8D8A\u6765\u8D8A\u51C6\u5907\uFF0CJVM \u4E5F\u4F1A\u8D8A\u6765\u8D8A\u806A\u660E\u3002</p><br><p><strong>3\u3001\u9501\u6D88\u9664</strong></p><p>\u9501\u6D88\u9664\u65F6\u6307\u865A\u62DF\u673A\u5373\u65F6\u7F16\u8BD1\u5668\u518D\u8FD0\u884C\u65F6\uFF0C\u5BF9\u4E00\u4E9B\u4EE3\u7801\u4E0A\u8981\u6C42\u540C\u6B65\uFF0C\u4F46\u662F\u88AB\u68C0\u6D4B\u5230\u4E0D\u53EF\u80FD\u5B58\u5728\u5171\u4EAB\u6570\u636E\u7ADE\u4E89\u7684\u9501\u8FDB\u884C\u6D88\u9664\u3002\u9501\u6D88\u9664\u7684\u4E3B\u8981\u5224\u5B9A\u4F9D\u636E\u6765\u6E90\u4E8E\u9003\u9038\u5206\u6790\u7684\u6570\u636E\u652F\u6301\u3002\u610F\u601D\u5C31\u662F\uFF1AJVM \u4F1A\u5224\u65AD\u518D\u4E00\u6BB5\u7A0B\u5E8F\u4E2D\u7684\u540C\u6B65\u660E\u663E\u4E0D\u4F1A\u9003\u9038\u51FA\u53BB\u4ECE\u800C\u88AB\u5176\u4ED6\u7EBF\u7A0B\u8BBF\u95EE\u5230\uFF0C\u90A3 JVM \u5C31\u628A\u5B83\u4EEC\u5F53\u4F5C\u6808\u4E0A\u6570\u636E\u5BF9\u5F85\uFF0C\u8BA4\u4E3A\u8FD9\u4E9B\u6570\u636E\u65F6\u7EBF\u7A0B\u72EC\u6709\u7684\uFF0C\u4E0D\u9700\u8981\u52A0\u540C\u6B65\u3002\u6B64\u65F6\u5C31\u4F1A\u8FDB\u884C\u9501\u6D88\u9664\u3002</p><p>\u5728\u5B9E\u9645\u5F00\u53D1\u4E2D\uFF0C\u6211\u4EEC\u5F88\u6E05\u695A\u7684\u77E5\u9053\u90A3\u4E9B\u5730\u65B9\u65F6\u7EBF\u7A0B\u72EC\u6709\u7684\uFF0C\u4E0D\u9700\u8981\u52A0\u540C\u6B65\u9501\uFF0C\u4F46\u662F\u5728 Java API \u4E2D\u6709\u5F88\u591A\u65B9\u6CD5\u90FD\u662F\u52A0\u4E86\u540C\u6B65\u7684\uFF0C\u90A3\u4E48\u6B64\u65F6 JVM \u4F1A\u5224\u65AD\u8FD9\u6BB5\u4EE3\u7801\u662F\u5426\u9700\u8981\u52A0\u9501\u3002\u5982\u679C\u6570\u636E\u5E76\u4E0D\u4F1A\u9003\u9038\uFF0C\u5219\u4F1A\u8FDB\u884C\u9501\u6D88\u9664\u3002</p><p>\u6BD4\u5982\uFF0C\u5728\u64CD\u4F5C String \u7C7B\u578B\u6570\u636E\u65F6\uFF0C\u7531\u4E8E String \u662F\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7C7B\uFF0C\u5BF9\u5B57\u7B26\u4E32\u7684\u8FDE\u63A5\u64CD\u4F5C\u603B\u662F\u901A\u8FC7\u751F\u6210\u7684\u65B0\u7684 String \u5BF9\u8C61\u6765\u8FDB\u884C\u7684\u3002\u56E0\u6B64 Javac \u7F16\u8BD1\u5668\u4F1A\u5BF9 String \u8FDE\u63A5\u505A\u81EA\u52A8\u4F18\u5316\u3002\u5728 JDK 1.5 \u4E4B\u524D\u4F1A\u4F7F\u7528 StringBuffer \u5BF9\u8C61\u7684\u8FDE\u7EED<code>append()</code>\u64CD\u4F5C\uFF0C\u5728 JDK 1.5 \u53CA\u4EE5\u540E\u7684\u7248\u672C\u4E2D\uFF0C\u4F1A\u8F6C\u5316\u4E3A StringBuidler \u5BF9\u8C61\u7684\u8FDE\u7EED<code>append()</code>\u64CD\u4F5C\u3002</p><p>StringBuilder \u4E0D\u662F\u5B89\u5168\u540C\u6B65\u7684\uFF0C\u4F46\u662F\u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0CJVM \u5224\u65AD\u8BE5\u6BB5\u4EE3\u7801\u5E76\u4E0D\u4F1A\u9003\u9038\uFF0C\u5219\u5C06\u8BE5\u4EE3\u7801\u5E26\u9ED8\u8BA4\u4E3A\u7EBF\u7A0B\u72EC\u6709\u7684\u8D44\u6E90\uFF0C\u5E76\u4E0D\u9700\u8981\u540C\u6B65\uFF0C\u6240\u4EE5\u6267\u884C\u4E86\u9501\u6D88\u9664\u64CD\u4F5C\u3002\uFF08\u8FD8\u6709Vector\u4E2D\u7684\u5404\u79CD\u64CD\u4F5C\u4E5F\u53EF\u5B9E\u73B0\u9501\u6D88\u9664\u3002\u5728\u6CA1\u6709\u9003\u9038\u51FA\u6570\u636E\u5B89\u5168\u9632\u536B\u5185\uFF09</p><br><p><strong>4\u3001\u9501\u7C97\u5316</strong></p><p>\u6211\u4EEC\u90FD\u77E5\u9053\u5728\u52A0\u540C\u6B65\u9501\u65F6\uFF0C\u5C3D\u53EF\u80FD\u7684\u5C06\u540C\u6B65\u5757\u7684\u4F5C\u7528\u8303\u56F4\u9650\u5236\u5230\u5C3D\u91CF\u5C0F\u7684\u8303\u56F4\uFF08\u53EA\u5728\u5171\u4EAB\u6570\u636E\u7684\u5B9E\u9645\u4F5C\u7528\u57DF\u4E2D\u624D\u8FDB\u884C\u540C\u6B65\uFF0C\u8FD9\u6837\u662F\u4E3A\u4E86\u4F7F\u5F97\u9700\u8981\u540C\u6B65\u7684\u64CD\u4F5C\u6570\u91CF\u5C3D\u53EF\u80FD\u53D8\u5C0F\u3002\u5728\u5B58\u5728\u9501\u540C\u6B65\u7ADE\u4E89\u4E2D\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u5F97\u7B49\u5F85\u9501\u7684\u7EBF\u7A0B\u5C3D\u65E9\u7684\u62FF\u5230\u9501\uFF09\u3002</p><p>\u5927\u90E8\u5206\u4E0A\u8FF0\u60C5\u51B5\u662F\u5B8C\u7F8E\u6B63\u786E\u7684\uFF0C\u4F46\u662F\u5982\u679C\u5B58\u5728\u8FDE\u4E32\u7684\u4E00\u7CFB\u5217\u64CD\u4F5C\u90FD\u5BF9\u540C\u4E00\u4E2A\u5BF9\u8C61\u53CD\u590D\u52A0\u9501\u548C\u89E3\u9501\uFF0C\u751A\u81F3\u52A0\u9501\u64CD\u4F5C\u65F6\u51FA\u73B0\u5728\u5FAA\u73AF\u4F53\u4E2D\u7684\uFF0C\u90A3\u5373\u4F7F\u6CA1\u6709\u7EBF\u7A0B\u7ADE\u4E89\uFF0C\u9891\u7E41\u5730\u8FDB\u884C\u4E92\u65A5\u540C\u6B65\u64CD\u4F5C\u4E5F\u4F1A\u5BFC\u81F4\u4E0D\u5FC5\u8981\u5730\u6027\u80FD\u64CD\u4F5C\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> s1<span class="token punctuation">,</span> <span class="token class-name">String</span> s2<span class="token punctuation">,</span> <span class="token class-name">String</span> s3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5728\u4E0A\u8FF0\u5730\u8FDE\u7EED<code>append()</code>\u64CD\u4F5C\u4E2D\u5C31\u5C5E\u4E8E\u8FD9\u7C7B\u60C5\u51B5\u3002JVM \u4F1A\u68C0\u6D4B\u5230\u8FD9\u6837\u4E00\u8FDE\u4E32\u5730\u64CD\u4F5C\u90FD\u662F\u5BF9\u540C\u4E00\u4E2A\u5BF9\u8C61\u52A0\u9501\uFF0C\u90A3\u4E48 JVM \u4F1A\u5C06\u52A0\u9501\u540C\u6B65\u5730\u8303\u56F4\u6269\u5C55\uFF08\u7C97\u5316\uFF09\u5230\u6574\u4E2A\u4E00\u7CFB\u5217\u64CD\u4F5C\u7684 \u5916\u90E8\uFF0C\u4F7F\u6574\u4E2A\u4E00\u8FDE\u4E32\u5730<code>append()</code>\u64CD\u4F5C\u53EA\u9700\u8981\u52A0\u9501\u4E00\u6B21\u5C31\u53EF\u4EE5\u4E86\u3002</p><br><p><strong>5\u3001\u8F7B\u91CF\u7EA7\u9501</strong></p><p>\u5728 JDK 1.6 \u4E4B\u540E\u5F15\u5165\u7684\u8F7B\u91CF\u7EA7\u9501\uFF0C<strong>\u9700\u8981\u6CE8\u610F\u7684\u662F\u8F7B\u91CF\u7EA7\u9501\u5E76\u4E0D\u662F\u66FF\u4EE3\u91CD\u91CF\u7EA7\u9501\u7684</strong>\uFF0C\u800C\u662F\u5BF9\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\u540C\u6B65\u5757\u5E76\u4E0D\u4F1A\u6709\u7ADE\u4E89\u51FA\u73B0\u63D0\u51FA\u7684\u4E00\u79CD\u4F18\u5316\u3002\u5B83\u53EF\u4EE5\u51CF\u5C11\u91CD\u91CF\u7EA7\u9501\u5BF9\u7EBF\u7A0B\u7684\u963B\u585E\u5E26\u6765\u5730\u7EBF\u7A0B\u5F00\u9500\uFF0C\u4ECE\u800C\u63D0\u9AD8\u5E76\u53D1\u6027\u80FD\u3002</p><br><p><strong>6\u3001\u504F\u5411\u9501</strong></p><p>\u5728\u5927\u591A\u5B9E\u9645\u73AF\u5883\u4E0B\uFF0C\u9501\u4E0D\u4EC5\u4E0D\u5B58\u5728\u591A\u7EBF\u7A0B\u7ADE\u4E89\uFF0C\u800C\u4E14\u603B\u662F\u7531\u540C\u4E00\u4E2A\u7EBF\u7A0B\u591A\u6B21\u83B7\u53D6\u3002\u5728\u540C\u4E00\u4E2A\u7EBF\u7A0B\u53CD\u590D\u83B7\u53D6\u6240\u91CA\u653E\u9501\u4E2D\u5E76\u6CA1\u6709\u9501\u7684\u7ADE\u4E89\uFF0C\u90A3\u4E48\u8FD9\u6837\u770B\u4E0A\u53BB\uFF0C\u591A\u6B21\u7684\u83B7\u53D6\u9501\u548C\u91CA\u653E\u9501\u5E26\u6765\u4E86\u5F88\u591A\u4E0D\u5FC5\u8981\u7684\u6027\u80FD\u5F00\u9500\u548C\u4E0A\u4E0B\u6587\u5207\u6362\u3002\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E00\u95EE\u9898\uFF0CJDK 1.6 \u4E2D\u5BF9 synchronized \u8FDB\u884C\u4E86\u4F18\u5316\uFF0C\u5F15\u5165\u4E86\u504F\u5411\u9501\u3002</p><p>\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8BBF\u95EE\u540C\u6B65\u5757\u5E76\u83B7\u53D6\u9501\u65F6\uFF0C\u4F1A\u5728\u5BF9\u8C61\u5934\u548C\u6808\u5E27\u4E2D\u7684\u9501\u8BB0\u5F55\u91CC\u5B58\u50A8\u9501\u504F\u5411\u7684\u7EBF\u7A0BID\uFF0C\u4EE5\u540E\u8BE5\u7EBF\u7A0B\u5728\u8FDB\u5165\u548C\u63A8\u51FA\u540C\u6B65\u5757\u65F6\u4E0D\u9700\u8981\u8FDB\u884C CAS \u64CD\u4F5C\u6765\u52A0\u9501\u548C\u89E3\u9501\u3002\u53EA\u9700\u8981\u7B80\u5355\u5730\u5BF9\u6BD4\u4E00\u4E0B\u5BF9\u8C61\u5934\u7684<code>Mark Word</code>\u91CC\u662F\u5426\u5B58\u50A8\u7740\u6307\u5411\u5F53\u524D\u7EBF\u7A0B\u7684\u504F\u5411\u9501\u3002\u5982\u679C\u6210\u529F\uFF0C\u8868\u793A\u7EBF\u7A0B\u5DF2\u7ECF\u83B7\u53D6\u5230\u4E86\u9501\u3002</p><p><strong>\u504F\u5411\u9501\u7684\u64A4\u9500</strong></p><p>\u504F\u5411\u9501\u4F7F\u7528\u4E86\u4E00\u79CD\u7B49\u5F85\u7ADE\u4E89\u51FA\u73B0\u624D\u4F1A\u91CA\u653E\u9501\u7684\u673A\u5236\u3002\u6240\u4EE5\u5F53\u5176\u4ED6\u7EBF\u7A0B\u5C1D\u8BD5\u83B7\u53D6\u504F\u5411\u9501\u65F6\uFF0C\u6301\u6709\u504F\u5411\u9501\u7684\u7EBF\u7A0B\u624D\u4F1A\u91CA\u653E\u9501\u3002</p><p>\u4F46\u662F\u504F\u5411\u9501\u7684\u64A4\u9500\u9700\u8981\u7B49\u5230\u5168\u5C40\u5B89\u5168\u70B9\uFF08\u5C31\u662F\u5F53\u524D\u7EBF\u7A0B\u6CA1\u6709\u6B63\u5728\u6267\u884C\u7684\u5B57\u8282\u7801\uFF09\u3002\u9996\u5148\u5B83\u4F1A\u6682\u505C\u62E5\u6709\u504F\u5411\u9501\u7684\u7EBF\u7A0B\uFF0C\u7136\u540E\u68C0\u67E5\u6301\u6709\u504F\u5411\u9501\u7684\u7EBF\u7A0B\u662F\u5426\u6D3B\u7740\u3002\u5982\u679C\u7EBF\u7A0B\u4E0D\u5904\u4E8E\u6D3B\u52A8\u72B6\u6001\uFF0C\u76F4\u63A5\u5C06\u5BF9\u8C61\u5934\u8BBE\u7F6E\u4E3A\u65E0\u9501\u72B6\u6001\u3002\u5982\u679C\u7EBF\u7A0B\u6D3B\u7740\uFF0CJVM \u4F1A\u904D\u5386\u6808\u5E27\u4E2D\u7684\u9501\u8BB0\u5F55\uFF0C\u6808\u5E27\u4E2D\u7684\u9501\u8BB0\u5F55\u548C\u5BF9\u8C61\u5934\u8981\u4E48\u504F\u5411\u4E8E\u5176\u4ED6\u7EBF\u7A0B\uFF0C\u8981\u4E48\u6062\u590D\u5230\u65E0\u9501\u72B6\u6001\u6216\u8005\u6807\u8BB0\u5BF9\u8C61\u4E0D\u9002\u5408\u4F5C\u4E3A\u504F\u5411\u9501\u3002</p><br><p><strong>7\u3001\u9501\u7684\u4F18\u7F3A\u70B9\u5BF9\u6BD4</strong></p><table><thead><tr><th>\u9501</th><th>\u4F18\u70B9</th><th>\u7F3A\u70B9</th><th>\u4F7F\u7528\u573A\u666F</th></tr></thead><tbody><tr><td>\u504F\u5411\u9501</td><td>\u52A0\u9501\u548C\u89E3\u9501\u4E0D\u9700\u8981 CAS \u64CD\u4F5C\uFF0C\u6CA1\u6709\u989D\u5916\u7684\u6027\u80FD\u6D88\u8017\uFF0C\u548C\u6267\u884C\u975E\u540C\u6B65\u65B9\u6CD5\u76F8\u6BD4\u4EC5\u5B58\u5728\u7EB3\u79D2\u7EA7\u7684\u5DEE\u8DDD</td><td>\u5982\u679C\u7EBF\u7A0B\u95F4\u5B58\u5728\u9501\u7ADE\u4E89\uFF0C\u4F1A\u5E26\u6765\u989D\u5916\u7684\u9501\u64A4\u9500\u7684\u6D88\u8017</td><td>\u9002\u7528\u4E8E\u53EA\u6709\u4E00\u4E2A\uFF1A\u7EBF\u7A0B\u8BBF\u95EE\u540C\u6B65\u5757\u7684\u573A\u666F</td></tr><tr><td>\u8F7B\u91CF\u7EA7\u9501</td><td>\u7ADE\u4E89\u7684\u7EBF\u7A0B\u4E0D\u4F1A\u963B\u585E\uFF0C\u63D0\u9AD8\u4E86\u54CD\u5E94\u901F\u5EA6</td><td>\u5982\u7EBF\u7A0B\u6210\u59CB\u7EC8\u5F97\u4E0D\u5230\u9501\u7ADE\u4E89\u7684\u7EBF\u7A0B\uFF0C\u4F7F\u7528\u81EA\u65CB\u4F1A\u6D88\u8017 CPU \u6027\u80FD</td><td>\u8FFD\u6C42\u54CD\u5E94\u65F6\u95F4\uFF0C\u540C\u6B65\u5FEB\u6267\u884C\u901F\u5EA6\u975E\u5E38\u5FEB</td></tr><tr><td>\u91CD\u91CF\u7EA7\u9501</td><td>\u7EBF\u7A0B\u7ADE\u4E89\u4E0D\u4F7F\u7528\u81EA\u65CB\uFF0C\u4E0D\u4F1A\u6D88\u8017 CPU</td><td>\u7EBF\u7A0B\u963B\u585E\uFF0C\u54CD\u5E94\u65F6\u95F4\u7F13\u6162\uFF0C\u5728\u591A\u7EBF\u7A0B\u4E0B\uFF0C\u9891\u7E41\u7684\u83B7\u53D6\u91CA\u653E\u9501\uFF0C\u4F1A\u5E26\u6765\u5DE8\u5927\u7684\u6027\u80FD\u6D88\u8017</td><td>\u8FFD\u6C42\u54CD\u5E94\u65F6\u95F4\uFF0C\u540C\u6B65\u5FEB\u6267\u884C\u901F\u5EA6\u975E\u5E38\u5FEB</td></tr></tbody></table><br><p><u><strong>7 - Java \u5BF9\u8C61\u5934\u5185\u5BB9</strong></u></p><p>\u5728\u5BF9\u8C61\u5934\u4E2D(<code>Object Header</code>)\u5B58\u5728\u4E24\u90E8\u5206\u3002\u7B2C\u4E00\u90E8\u5206\u7528\u4E8E\u5B58\u50A8\u5BF9\u8C61\u81EA\u8EAB\u7684\u8FD0\u884C\u65F6\u6570\u636E\uFF0C<code>HashCode</code>\u3001<code>GC Age</code>\u3001<code>\u9501\u6807\u8BB0\u4F4D</code>\u3001<code>\u662F\u5426\u4E3A\u504F\u5411\u9501</code>\u7B49\u3002\u4E00\u822C\u4E3A32\u4F4D\u6216\u800564\u4F4D\uFF08\u89C6\u64CD\u4F5C\u7CFB\u7EDF\u4F4D\u6570\u5B9A\uFF09\u3002\u5B98\u65B9\u79F0\u4E4B\u4E3A<code>Mark Word</code>\uFF0C\u5B83\u662F\u5B9E\u73B0\u8F7B\u91CF\u7EA7\u9501\u548C\u504F\u5411\u9501\u7684\u5173\u952E\u3002 \u53E6\u5916\u4E00\u90E8\u5206\u5B58\u50A8\u7684\u662F\u6307\u5411\u65B9\u6CD5\u533A\u5BF9\u8C61\u7C7B\u578B\u6570\u636E\u7684\u6307\u9488(<code>Klass Point</code>)\uFF0C\u5982\u679C\u5BF9\u8C61\u662F\u6570\u7EC4\u7684\u8BDD\uFF0C\u8FD8\u4F1A\u6709\u4E00\u4E2A\u989D\u5916\u7684\u90E8\u5206\u7528\u4E8E\u5B58\u50A8\u6570\u636E\u7684\u957F\u5EA6\u3002</p><p><img src="`+y+'" alt=""></p><p><img src="'+w+`" alt=""></p><br><p><strong>JVM \u4E2D\u9501\u548CMark Word\u7684\u4F7F\u7528\uFF08synchronied \u9501\u5347\u7EA7\u8FC7\u7A0B\uFF09</strong></p><blockquote><p>JDK 1.6 \u7684 synchronied \u540C\u6B65\u9501\uFF0C\u4E00\u5171\u6709\u56DB\u79CD\u72B6\u6001\uFF1A<code>\u65E0\u9501</code>\u3001<code>\u504F\u5411\u9501</code>\u3001<code>\u8F7B\u91CF\u7EA7\u6240</code>\u3001<code>\u91CD\u91CF\u7EA7\u9501</code>\uFF0C\u5B83\u4F1A\u968F\u7740\u7ADE\u4E89\u60C5\u51B5\u9010\u6E10\u5347\u7EA7\u3002synchronized \u9501\u53EF\u4EE5\u5347\u7EA7\u4F46\u662F\u4E0D\u53EF\u4EE5\u964D\u7EA7\uFF0C\u76EE\u7684\u662F\u4E3A\u4E86\u63D0\u4F9B\u83B7\u53D6\u9501\u548C\u91CA\u653E\u9501\u7684\u6548\u7387\u3002</p></blockquote><p>\u9501\u5347\u7EA7\u65B9\u5411\uFF1A\u65E0\u9501 \u2192 \u504F\u5411\u9501 \u2192 \u8F7B\u91CF\u7EA7\u9501 \u2192 \u91CD\u91CF\u7EA7\u9501 \uFF08\u6B64\u8FC7\u7A0B\u662F\u4E0D\u53EF\u9006\u7684\uFF09\uFF0832bit \u865A\u62DF\u673A\u4E3A\u4F8B\uFF09</p><p>1\uFF09\u5F53\u6CA1\u6709\u88AB\u5F53\u6210\u9501\u65F6\uFF0C\u8FD9\u5C31\u662F\u4E00\u4E2A\u666E\u901A\u7684\u5BF9\u8C61\u3002Mark Word \u8BB0\u5F55\u5BF9\u8C61\u7684 HashCode\uFF0C\u9501\u6807\u5FD7\u4F4D\u662F01\uFF0C\u662F\u5426\u504F\u5411\u9501\u90A3\u4E00\u4F4D\u662F0\uFF1B</p><p>2\uFF09\u5F53\u5BF9\u8C61\u88AB\u5F53\u505A\u540C\u6B65\u9501\u5E76\u6709\u4E00\u4E2A\u7EBF\u7A0BA\u62A2\u5230\u4E86\u9501\u65F6\uFF0C\u9501\u6807\u5FD7\u4F4D\u8FD8\u662F01\uFF0C\u662F\u5426\u504F\u5411\u9501\u4F4D\u7F6E\u6539\u62101\uFF0C\u524D23 bit\u8BB0\u5F55\u62A2\u5230\u9501\u7684\u7EBF\u7A0BID\uFF0C\u8868\u793A\u8FDB\u5165\u504F\u5411\u9501\u72B6\u6001\uFF1B</p><p>3\uFF09\u5F53\u7EBF\u7A0BA\u518D\u6B21\u8BD5\u56FE\u6765\u83B7\u5F97\u9501\u65F6\uFF0CJVM \u53D1\u73B0\u540C\u6B65\u9501\u5BF9\u8C61\u7684\u6807\u5FD7\u4F4D\u662F01\uFF0C\u662F\u5426\u504F\u5411\u9501\u662F1\uFF0C\u4E5F\u5C31\u662F\u504F\u5411\u72B6\u6001\uFF0CMark Word\u4E2D\u8BB0\u5F55\u7684\u7EBF\u7A0BID\u5C31\u662F\u7EBF\u7A0BA\u81EA\u5DF1\u7684ID\uFF0C\u8868\u793A\u7EBF\u7A0BA\u5DF2\u7ECF\u83B7\u5F97\u4E86\u8FD9\u4E2A\u504F\u5411\u9501\uFF0C\u53EF\u4EE5\u6267\u884C\u540C\u6B65\u9501\u7684\u4EE3\u7801\uFF1B</p><p>4\uFF09\u5F53\u7EBF\u7A0BB\u8BD5\u56FE\u83B7\u5F97\u8FD9\u4E2A\u9501\u65F6\uFF0CJVM \u53D1\u73B0\u540C\u6B65\u9501\u5904\u4E8E\u504F\u5411\u72B6\u6001\uFF0C\u4F46\u662F Mark Word \u4E2D\u7684\u7EBF\u7A0BID\u8BB0\u5F55\u7684\u4E0D\u662FB\uFF0C\u90A3\u4E48\u7EBF\u7A0BB\u4F1A\u5148\u7528 CAS \u64CD\u4F5C\u8BD5\u56FE\u83B7\u5F97\u9501\uFF0C\u8FD9\u91CC\u7684\u83B7\u5F97\u9501\u64CD\u4F5C\u662F\u6709\u53EF\u80FD\u6210\u529F\u7684\uFF0C\u56E0\u4E3A\u7EBF\u7A0BA\u4E00\u822C\u4E0D\u4F1A\u81EA\u52A8\u91CA\u653E\u504F\u5411\u9501\u3002\u5982\u679C\u62A2\u9501\u6210\u529F\uFF0C\u5C31\u628A Mark Word \u91CC\u7684\u7EBF\u7A0BID\u6539\u4E3A\u7EBF\u7A0BB\u7684ID\uFF0C\u4EE3\u8868\u7EBF\u7A0BB\u83B7\u5F97\u4E86\u8FD9\u4E2A\u504F\u5411\u9501\uFF0C\u53EF\u4EE5\u6267\u884C\u540C\u6B65\u9501\u4EE3\u7801\u3002\u5982\u679C\u62A2\u9501\u5931\u8D25\uFF0C\u5219\u7EE7\u7EED\u6267\u884C\u6B65\u9AA45\uFF1B</p><p>5\uFF09<strong>\u504F\u5411\u9501\u72B6\u6001\u62A2\u9501\u5931\u8D25\uFF0C\u4EE3\u8868\u5F53\u524D\u9501\u6709\u4E00\u5B9A\u7684\u7ADE\u4E89\uFF0C\u504F\u5411\u9501\u5C06\u5347\u7EA7\u4E3A\u8F7B\u91CF\u7EA7\u9501</strong>\u3002JVM \u4F1A\u5728\u5F53\u524D\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6808\u4E2D\u5F00\u8F9F\u4E00\u5757\u5355\u72EC\u7684\u7A7A\u95F4\uFF0C\u91CC\u9762<strong>\u4FDD\u5B58\u6307\u5411\u5BF9\u8C61\u9501 Mark Word \u7684\u6307\u9488</strong>\uFF0C\u540C\u65F6\u5728\u5BF9\u8C61\u9501 Mark Word \u4E2D\u4FDD\u5B58\u6307\u5411\u8FD9\u7247\u7A7A\u95F4\u7684\u6307\u9488\u3002\u4E0A\u8FF0\u4E24\u4E2A\u4FDD\u5B58\u64CD\u4F5C\u90FD\u662F CAS \u64CD\u4F5C\uFF0C\u5982\u679C\u4FDD\u5B58\u6210\u529F\uFF0C\u4EE3\u8868\u7EBF\u7A0B\u62A2\u5230\u4E86\u540C\u6B65\u9501\uFF0C\u5C31\u628A Mark Word \u4E2D\u7684\u9501\u6807\u5FD7\u4F4D\u6539\u621000\uFF0C\u53EF\u4EE5\u6267\u884C\u540C\u6B65\u9501\u4EE3\u7801\u3002\u5982\u679C\u4FDD\u5B58\u5931\u8D25\uFF0C\u8868\u793A\u62A2\u9501\u5931\u8D25\uFF0C\u7ADE\u4E89\u592A\u6FC0\u70C8\uFF0C\u7EE7\u7EED\u6267\u884C\u6B65\u9AA46\uFF1B</p><p>6\uFF09\u8F7B\u91CF\u7EA7\u9501\u62A2\u9501\u5931\u8D25\uFF0CJVM \u4F1A\u4F7F\u7528\u81EA\u65CB\u9501\uFF0C\u81EA\u65CB\u9501\u4E0D\u662F\u4E00\u4E2A\u9501\u72B6\u6001\uFF0C\u53EA\u662F\u4EE3\u8868\u4E0D\u65AD\u7684\u91CD\u8BD5\uFF0C\u5C1D\u8BD5\u62A2\u9501\u3002\u4ECE JDK 1.7 \u5F00\u59CB\uFF0C\u81EA\u65CB\u9501\u9ED8\u8BA4\u542F\u7528\uFF0C\u81EA\u65CB\u6B21\u6570\u7531 JVM \u51B3\u5B9A\uFF08\u81EA\u9002\u5E94\u81EA\u65CB\u9501\uFF09\u3002\u5982\u679C\u62A2\u9501\u6210\u529F\u5219\u6267\u884C\u540C\u6B65\u9501\u4EE3\u7801\uFF0C\u5982\u679C\u5931\u8D25\u5219\u7EE7\u7EED\u6267\u884C\u6B65\u9AA47\uFF1B</p><p>7\uFF09<strong>\u81EA\u65CB\u9501\u91CD\u8BD5\u4E4B\u540E\u5982\u679C\u62A2\u9501\u4F9D\u7136\u5931\u8D25\uFF0C\u540C\u6B65\u9501\u4F1A\u5347\u7EA7\u81F3\u91CD\u91CF\u7EA7\u9501</strong>\uFF0C\u9501\u6807\u5FD7\u4F4D\u6539\u4E3A10\u3002\u5728\u8FD9\u4E2A\u72B6\u6001\u4E0B\uFF0C\u672A\u62A2\u5230\u9501\u7684\u7EBF\u7A0B\u90FD\u4F1A\u88AB\u963B\u585E\u3002</p><br><p><u><strong>8 - synchronized &amp; Lock</strong></u></p><p><strong>1\u3001\u76F8\u540C\u70B9</strong></p><p>\u90FD\u80FD\u89E3\u51B3\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898</p><p><strong>2\u3001\u4E0D\u540C\u70B9</strong></p><p>1\uFF09\u5B9E\u73B0\u65B9\u5F0F\u3002synchronized \u662F JVM \u5B9E\u73B0\u7684\uFF0C\u800C ReentrantLock \u662F JDK \u5B9E\u73B0\u7684\u3002</p><p>2\uFF09<code>synchronized</code>\u673A\u5236\u5728\u6267\u884C\u5B8C\u76F8\u5E94\u7684\u540C\u6B65\u4EE3\u7801\u4EE5\u540E\uFF0C<strong>\u81EA\u52A8\u91CA\u653E\u540C\u6B65\u76D1\u89C6\u5668</strong>\uFF0C==\u81EA\u52A8\u91CA\u653E\u8D44\u6E90==</p><p>3\uFF09<code>Lock</code>\u9501\u9700\u8981\u624B\u52A8<code>lock()</code>\uFF0C\u540C\u6B65\u7ED3\u675F\u9700\u8981<code>unlock()</code>\uFF0C==\u624B\u52A8\u91CA\u653E\u8D44\u6E90==\uFF0C\u6240\u4EE5\u4E00\u822C\u4F7F\u7528<code>synchronized</code>\u8F83\u591A</p><p>4\uFF09\u591A\u7EBF\u7A0B\u7ADE\u4E89\u4E00\u4E2A\u9501\u65F6\uFF0C\u5176\u4F59\u672A\u5F97\u5230\u9501\u7684\u7EBF\u7A0B\u53EA\u80FD\u4E0D\u505C\u7684\u5C1D\u8BD5\u83B7\u5F97\u9501\uFF0C\u800C\u4E0D\u80FD\u4E2D\u65AD\u3002\u9AD8\u5E76\u53D1\u7684\u60C5\u51B5\u4E0B\u4F1A\u5BFC\u81F4\u6027\u80FD\u4E0B\u964D\u3002<code>ReentrantLock</code>\u7684<code>lockInterruptibly()</code>\u65B9\u6CD5\u53EF\u4EE5\u4F18\u5148\u8003\u8651\u54CD\u5E94\u4E2D\u65AD\u3002 \u4E00\u4E2A\u7EBF\u7A0B\u7B49\u5F85\u65F6\u95F4\u8FC7\u957F\uFF0C\u5B83\u53EF\u4EE5\u4E2D\u65AD\u81EA\u5DF1\uFF0C\u7136\u540E ReentrantLock \u54CD\u5E94\u8FD9\u4E2A\u4E2D\u65AD\uFF0C\u4E0D\u518D\u8BA9\u8FD9\u4E2A\u7EBF\u7A0B\u7EE7\u7EED\u7B49\u5F85\u3002\u6709\u4E86\u8FD9\u4E2A\u673A\u5236\uFF0C\u4F7F\u7528 ReentrantLock \u65F6\u5C31\u4E0D\u4F1A\u50CF synchronized \u90A3\u6837\u4EA7\u751F\u6B7B\u9501\u4E86\u3002</p><p>5\uFF09\u516C\u5E73\u4E0E\u975E\u516C\u5E73\u3002synchronized \u662F\u975E\u516C\u5E73\u9501\uFF0C\u65B0\u6765\u7684\u7EBF\u7A0B\u6709\u53EF\u80FD\u7ACB\u5373\u83B7\u5F97\u76D1\u89C6\u5668\uFF0C\u800C\u5728\u7B49\u5F85\u533A\u4E2D\u7B49\u5019\u5DF2\u4E45\u7684\u7EBF\u7A0B\u53EF\u80FD\u518D\u6B21\u7B49\u5F85\uFF0C\u4E0D\u8FC7\u8FD9\u79CD\u62A2\u5360\u7684\u65B9\u5F0F\u53EF\u4EE5\u9884\u9632\u9965\u997F\uFF1BLock \u9ED8\u8BA4\u662F\u975E\u516C\u5E73\u9501\uFF0C\u53EF\u4EE5\u5728\u5B9E\u4F8B\u5316\u65F6\u4F20\u5165\u5BF9\u5E94\u7684\u53C2\u6570\u6765\u83B7\u53D6\u516C\u5E73\u9501\u6216\u8005\u975E\u516C\u5E73\u9501</p><p>6\uFF09\u4E00\u4E2A ReentrantLock \u53EF\u4EE5\u540C\u65F6\u7ED1\u5B9A\u591A\u4E2A Condition \u5BF9\u8C61\u3002</p><br><p><strong>3\u3001\u4F7F\u7528\u5EFA\u8BAE</strong></p><p>1\uFF09Lock</p><p>2\uFF09\u540C\u6B65\u4EE3\u7801\u5757</p><p>3\uFF09\u540C\u6B65\u65B9\u6CD5</p><blockquote><p>\u64CD\u4F5C\u7684\u4EE3\u7801\u91CF\u7531\u5C11\u5230\u591A</p></blockquote><p>\u9664\u975E\u9700\u8981\u4F7F\u7528 ReentrantLock \u7684\u9AD8\u7EA7\u529F\u80FD\uFF0C\u5426\u5219\u4F18\u5148\u4F7F\u7528 synchronized\u3002\u8FD9\u662F\u56E0\u4E3A synchronized \u662F JVM \u5B9E\u73B0\u7684\u4E00\u79CD\u9501\u673A\u5236\uFF0CJVM \u539F\u751F\u5730\u652F\u6301\u5B83\u3002\u800C ReentrantLock \u4E0D\u662F\u6240\u6709\u7684 JDK \u7248\u672C\u90FD\u652F\u6301\u3002\u5E76\u4E14\u4F7F\u7528 synchronized \u4E0D\u7528\u62C5\u5FC3\u6CA1\u6709\u91CA\u653E\u9501\u800C\u5BFC\u81F4\u6B7B\u9501\u95EE\u9898\uFF0C\u56E0\u4E3A JVM \u4F1A\u786E\u4FDD\u9501\u7684\u91CA\u653E\u3002</p><br><h4 id="volatile-\u8BE6\u89E3" tabindex="-1">volatile \u8BE6\u89E3 <a class="header-anchor" href="#volatile-\u8BE6\u89E3" aria-hidden="true">#</a></h4><blockquote><p>\u9632\u6B62\u6307\u4EE4\u91CD\u6392\u3001\u5B9E\u73B0\u53EF\u89C1\u6027\u3001\u4FDD\u8BC1\u5355\u6B21\u8BFB\u5199\u7684\u539F\u5B50\u6027</p></blockquote><p><strong><u>1 - \u9632\u6B62\u91CD\u6392\u5E8F</u></strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token class-name">Singleton</span> singleton<span class="token punctuation">;</span>
    <span class="token comment">/**
     * \u6784\u9020\u51FD\u6570\u79C1\u6709\uFF0C\u7981\u6B62\u5916\u90E8\u5B9E\u4F8B\u5316
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Singleton</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>singleton <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>singleton<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>singleton <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    singleton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> singleton<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u6839\u636E\u4E0A\u9762\u7684\u4EE3\u7801\u5206\u6790\u4E00\u4E0B\u4E3A\u4EC0\u4E48\u8981\u5728\u53D8\u91CF Singleton \u4E4B\u524D\u52A0\u4E0A volatile \u5173\u952E\u5B57\u3002\u8981\u7406\u89E3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5148\u8981\u4E86\u89E3\u5BF9\u8C61\u7684\u6784\u9020\u8FC7\u7A0B\uFF0C\u5B9E\u4F8B\u5316\u4E00\u4E2A\u5BF9\u8C61\u5176\u5B9E\u53EF\u4EE5\u5206\u4E3A\u4E09\u4E2A\u6B65\u9AA4\uFF1A</p><p>1\u3001\u5206\u914D\u5185\u5B58\u7A7A\u95F4</p><p>2\u3001\u521D\u59CB\u5316\u5BF9\u8C61</p><p>3\u3001\u5C06\u5185\u5B58\u7A7A\u95F4\u7684\u5730\u5740\u8D4B\u503C\u7ED9\u5BF9\u5E94\u7684\u5F15\u7528</p><br><p>\u4F46\u662F\u7531\u4E8E\u64CD\u4F5C\u7CFB\u7EDF\u53EF\u4EE5<code>\u5BF9\u6307\u4EE4\u8FDB\u884C\u91CD\u6392\u5E8F</code>\uFF0C\u6240\u4EE5\u4E0A\u9762\u7684\u8FC7\u7A0B\u4E5F\u53EF\u80FD\u4F1A\u53D8\u6210\u5982\u4E0B\u8FC7\u7A0B\uFF1A</p><p>1\u3001\u5206\u914D\u5185\u5B58\u7A7A\u95F4</p><p>2\u3001\u5C06\u5185\u5B58\u7A7A\u95F4\u7684\u5730\u5740\u8D4B\u503C\u7ED9\u5BF9\u5E94\u7684\u5F15\u7528</p><p>3\u3001\u521D\u59CB\u5316\u5BF9\u8C61</p><p>\u5982\u679C\u662F\u8FD9\u4E2A\u6D41\u7A0B\uFF0C\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\u5C31\u53EF\u80FD\u5C06\u4E00\u4E2A\u672A\u521D\u59CB\u5316\u7684\u5BF9\u8C61\u5F15\u7528\u66B4\u9732\u51FA\u6765\uFF0C\u4ECE\u800C\u5BFC\u81F4\u4E0D\u53EF\u9884\u6599\u7684\u7ED3\u679C\u3002\u4E3A\u4E86\u9632\u6B62\u8FD9\u4E2A\u8FC7\u7A0B\u7684\u91CD\u6392\u5E8F\uFF0C\u6211\u4EEC\u9700\u8981\u4F7F\u7528 volatile \u6765\u4FEE\u9970\u53D8\u91CF\uFF0C\u9632\u6B62\u6307\u4EE4\u91CD\u6392\u5E8F\u3002</p><br><p><strong><u>2 - \u5B9E\u73B0\u53EF\u89C1\u6027</u></strong></p><p>\u53EF\u89C1\u6027\u95EE\u9898\u4E3B\u8981\u6307\u4E00\u4E2A\u7EBF\u7A0B\u4FEE\u6539\u4E86\u5171\u4EAB\u53D8\u91CF\u503C\uFF0C\u800C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u5374\u770B\u4E0D\u5230\u3002\u5F15\u8D77\u53EF\u89C1\u6027\u95EE\u9898\u7684\u4E3B\u8981\u539F\u56E0\u662F\u6BCF\u4E2A\u7EBF\u7A0B\u62E5\u6709\u81EA\u5DF1\u7684\u4E00\u4E2A\u9AD8\u901F\u7F13\u5B58\u533A\uFF0C\u5373\u7EBF\u7A0B\u5DE5\u4F5C\u5185\u5B58\u3002\u5F53\u4E00\u4E2A\u5171\u4EAB\u53D8\u91CF\u88AB volatile \u4FEE\u9970\u65F6\uFF0C\u5B83\u4F1A\u4FDD\u8BC1\u4FEE\u6539\u7684\u503C\u4F1A\u7ACB\u5373\u88AB\u66F4\u65B0\u5230\u4E3B\u5185\u5B58\uFF0C\u5F53\u6709\u5176\u4ED6\u7EBF\u7A0B\u9700\u8981\u8BFB\u53D6\u65F6\uFF0C\u5B83\u4F1A\u53BB\u4E3B\u5185\u5B58\u4E2D\u8BFB\u53D6\u65B0\u503C\u3002</p><br><p><strong><u>3 - \u4FDD\u8BC1\u5355\u6B21\u8BFB/\u5199\u539F\u5B50\u6027</u></strong></p><blockquote><p><code>i++</code>\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u4FDD\u8BC1\u539F\u5B50\u6027\u2753</p></blockquote><p><code>i++</code>\u5176\u5B9E\u662F\u4E00\u4E2A\u590D\u5408\u64CD\u4F5C\uFF0C\u5305\u62EC\u4E09\u6B65\u9AA4\uFF1A</p><p>1\u3001\u8BFB\u53D6i\u7684\u503C</p><p>2\u3001\u5BF9i\u52A01</p><p>3\u3001\u5C06i\u7684\u503C\u5199\u56DE\u5185\u5B58</p><p>volatile \u4E0D\u80FD\u4FDD\u8BC1\u5B8C\u5168\u7684\u539F\u5B50\u6027\uFF0C\u53EA\u80FD\u4FDD\u8BC1\u5355\u6B21\u7684\u8BFB/\u5199\u64CD\u4F5C\u5177\u6709\u539F\u5B50\u6027\u3002\u6240\u4EE5 volatile \u662F\u65E0\u6CD5\u4FDD\u8BC1\u8FD9\u4E09\u4E2A\u64CD\u4F5C\u662F\u5177\u6709\u539F\u5B50\u6027\u7684\uFF0C\u53EF\u4EE5\u901A\u8FC7<code>AtomicInteger</code>\u6216\u8005 synchronized \u6765\u4FDD\u8BC1+1\u64CD\u4F5C\u7684\u539F\u5B50\u6027</p><blockquote><p>\u5171\u4EAB\u7684<code>double</code> \u548C<code>long</code>\u53D8\u91CF\u4E3A\u4EC0\u4E48\u9700\u8981 volatile \u4FEE\u9970\u2753</p></blockquote><p>\u56E0\u4E3A long \u548C double \u4E24\u79CD\u6570\u636E\u7C7B\u578B\u7684\u64CD\u4F5C\u53EF\u5206\u4E3A\u9AD832\u4F4D\u548C\u4F4E32\u4F4D\u4E24\u90E8\u5206\uFF0C\u56E0\u6B64\u666E\u901A\u7684 long \u6216 double \u7C7B\u578B\u8BFB/\u5199\u53EF\u80FD\u4E0D\u662F\u539F\u5B50\u7684\u3002\u6240\u4EE5\u5EFA\u8BAE\u5C06\u5171\u4EAB\u7684 long \u548C double \u53D8\u91CF\u8BBE\u7F6E\u4E3A volatile \u7C7B\u578B\uFF0C\u8FD9\u6837\u80FD\u4FDD\u8BC1\u4EFB\u4F55\u60C5\u51B5\u4E0B\u5BF9 long \u548C double \u7684\u5355\u6B21\u8BFB/\u5199\u64CD\u4F5C\u90FD\u5177\u6709\u539F\u5B50\u6027\u3002</p><br><p><strong><u>4 - \u6DF1\u5165\u7406\u89E3 volatile</u></strong></p><p><strong>1\u3001\u7981\u6B62\u91CD\u6392\u5B9E\u73B0\u539F\u7406</strong></p><blockquote><p>\u57FA\u4E8E\u5185\u5B58\u5C4F\u969C\uFF08Memory Barrier\uFF09\u5B9E\u73B0</p></blockquote><p>\u5185\u5B58\u5C4F\u969C\uFF0C\u53C8\u79F0\u5185\u5B58\u6805\u680F\uFF0C\u662F\u4E00\u4E2A CPU \u6307\u4EE4\u3002\u5728\u7A0B\u5E8F\u8FD0\u884C\u65F6\uFF0C\u4E3A\u4E86\u63D0\u9AD8\u6267\u884C\u6027\u80FD\uFF0C\u7F16\u8BD1\u5668\u548C\u5904\u7406\u5668\u4F1A\u5BF9\u6307\u4EE4\u8FDB\u884C\u91CD\u6392\u5E8F\uFF0CJMM \u4E3A\u4E86\u4FDD\u8BC1\u5728\u4E0D\u540C\u7684\u7F16\u8BD1\u5668\u548C CPU \u4E0A\u6709\u76F8\u540C\u7684\u7ED3\u679C\uFF0C\u901A\u8FC7\u63D2\u5165\u7279\u5B9A\u7C7B\u578B\u7684\u5185\u5B58\u5C4F\u969C\u6765\u7981\u6B62+\u7279\u5B9A\u7C7B\u578B\u7684\u7F16\u8BD1\u5668\u91CD\u6392\u5E8F\u548C\u5904\u7406\u5668\u91CD\u6392\u5E8F\uFF0C\u63D2\u5165\u4E00\u6761\u5185\u5B58\u5C4F\u969C\u4F1A\u544A\u8BC9\u7F16\u8BD1\u5668\u548C CPU\uFF1A\u4E0D\u7BA1\u4EC0\u4E48\u6307\u4EE4\u90FD\u4E0D\u80FD\u548C\u8FD9\u6761 Memory Barrier \u6307\u4EE4\u91CD\u6392\u5E8F\u3002</p><br><p><strong>\u5185\u5B58\u5C4F\u969C\u7C7B\u578B</strong></p><table><thead><tr><th>\u5185\u5B58\u5C4F\u969C</th><th>\u63D2\u5165\u4F4D\u7F6E</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>StoreStore \u5C4F\u969C</td><td>\u5728\u6BCF\u4E2A volatile \u5199\u64CD\u4F5C\u7684\u524D\u9762\u63D2\u5165\u4E00\u4E2A StoreStore \u5C4F\u969C</td><td>\u7981\u6B62\u524D\u9762\u7684\u666E\u901A\u5199\u548C\u540E\u9762\u7684 volatile \u5199\u91CD\u6392\u5E8F</td></tr><tr><td>StoreLoad \u5C4F\u969C</td><td>\u5728\u6BCF\u4E2A volatile \u5199\u64CD\u4F5C\u7684\u540E\u9762\u63D2\u5165\u4E00\u4E2A StoreLoad \u5C4F\u969C</td><td>\u9632\u6B62\u524D\u9762\u7684 volatile \u5199\u4E0E\u540E\u9762\u53EF\u80FD\u6709\u7684 volatile \u8BFB/\u5199\u91CD\u6392\u5E8F</td></tr><tr><td>LoadLoad \u5C4F\u969C</td><td>\u5728\u6BCF\u4E2A volatile \u8BFB\u64CD\u4F5C\u7684\u540E\u9762\u63D2\u5165\u4E00\u4E2A LoadLoad \u5C4F\u969C</td><td>\u7981\u6B62\u524D\u9762\u6240\u6709\u7684\u666E\u901A\u8BFB\u64CD\u4F5C\u548C\u540E\u9762\u7684 volatile \u8BFB\u91CD\u6392\u5E8F</td></tr><tr><td>LoadStore \u5C4F\u969C</td><td>\u5728\u6BCF\u4E2A volatile \u8BFB\u64CD\u4F5C\u7684\u540E\u9762\u63D2\u5165\u4E00\u4E2A LoadStore \u5C4F\u969C</td><td>\u7981\u6B62\u524D\u9762\u6240\u6709\u7684\u666E\u901A\u5199\u64CD\u4F5C\u548C\u540E\u9762\u7684 volatile \u8BFB\u91CD\u6392\u5E8F</td></tr></tbody></table><p><img src="`+g+'" alt="">\u3001<img src="'+h+`" alt=""></p><br><p><strong><u>5 - volatile \u5E94\u7528\u573A\u666F</u></strong></p><p>1\u3001\u5BF9\u53D8\u91CF\u7684\u5199\u64CD\u4F5C\u4E0D\u4F9D\u8D56\u4E8E\u5F53\u524D\u503C</p><p>2\u3001\u8BE5\u53D8\u91CF\u6CA1\u6709\u5305\u542B\u5728\u5177\u6709\u5176\u4ED6\u53D8\u91CF\u7684\u4E0D\u53D8\u5F0F\u4E2D</p><p>2\u3001\u53EA\u6709\u5728\u72B6\u6001\u771F\u6B63\u72EC\u7ACB\u4E8E\u7A0B\u5E8F\u5185\u5176\u4ED6\u5185\u5BB9\u65F6\u624D\u80FD\u4F7F\u7528 volatile</p><br><h4 id="final-\u8BE6\u89E3" tabindex="-1">final \u8BE6\u89E3 <a class="header-anchor" href="#final-\u8BE6\u89E3" aria-hidden="true">#</a></h4><p><a href="https://pdai.tech/md/java/thread/java-thread-x-key-final.html" target="_blank" rel="noopener noreferrer">\u5173\u952E\u5B57: final\u8BE6\u89E3 | Java \u5168\u6808\u77E5\u8BC6\u4F53\u7CFB (pdai.tech)</a></p><blockquote><p>\u7A0D\u540E\u8FDB\u884C\u8865\u5145\u2026</p></blockquote><br><h3 id="juc-\u5305\u4F53\u7CFB" tabindex="-1">JUC \u5305\u4F53\u7CFB <a class="header-anchor" href="#juc-\u5305\u4F53\u7CFB" aria-hidden="true">#</a></h3><blockquote><p>JUC \u6307\u7684\u662F<code>java.util.concurrent</code>\u5305\u53CA\u5176\u5B50\u5305\u4E0B\u7528\u4E8E\u5E76\u53D1\u573A\u666F\u7684\u7C7B</p></blockquote><br><h4 id="cas" tabindex="-1">CAS <a class="header-anchor" href="#cas" aria-hidden="true">#</a></h4><p><strong><u>1 - \u4EC0\u4E48\u662F CAS</u></strong></p><p>CAS \u7684\u5168\u79F0 Compare-And-Swap\uFF08\u5BF9\u6BD4\u4EA4\u6362\uFF09\uFF0C\u662F\u4E00\u6761 CPU \u7684\u539F\u5B50\u6307\u4EE4\u3002\u5176\u4F5C\u7528\u662F\u8BA9 CPU \u5148\u6BD4\u8F83\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49\uFF0C\u7136\u540E\u539F\u5B50\u5730\u66F4\u65B0\u67D0\u4E2A\u4F4D\u7F6E\u7684\u503C\u3002\u5176\u5B9E\u73B0\u65B9\u5F0F\u662F\u57FA\u4E8E\u786C\u4EF6\u5E73\u53F0\u7684\u6C47\u7F16\u6307\u4EE4\uFF0C\u4E5F\u5C31\u662F\u8BF4 CAS \u662F\u9760\u786C\u4EF6\u5B9E\u73B0\u7684\uFF0CJVM \u53EA\u662F\u5C01\u88C5\u4E86\u6C47\u7F16\u8C03\u7528\uFF0C\u90A3\u4E9B<code>Atomic</code>\u76F8\u5173\u7C7B\u4FBF\u662F\u4F7F\u7528\u4E86\u8FD9\u4E9B\u5C01\u88C5\u540E\u7684\u63A5\u53E3\u3002</p><p>\u7B80\u5355\u89E3\u91CA\uFF1ACAS \u64CD\u4F5C\u9700\u8981\u8F93\u5165\u4E24\u4E2A\u6570\u503C\uFF0C\u4E00\u4E2A\u65E7\u503C\uFF08\u671F\u671B\u64CD\u4F5C\u524D\u7684\u503C\uFF09\u548C\u4E00\u4E2A\u65B0\u503C\uFF0C\u5728\u64CD\u4F5C\u671F\u95F4\u5148\u6BD4\u8F83\u4E0B\u65E7\u503C\u6709\u6CA1\u6709\u53D1\u751F\u53D8\u5316\uFF0C\u5982\u679C\u6CA1\u6709\u53D1\u751F\u53D8\u5316\uFF0C\u624D\u4EA4\u6362\u6210\u65B0\u503C\uFF0C\u82E5\u53D1\u751F\u4E86\u53D8\u5316\u5219\u4E0D\u4EA4\u6362\u3002</p><p><strong>CAS \u64CD\u4F5C\u662F\u539F\u5B50\u6027\u7684\uFF0C\u6240\u4EE5\u591A\u7EBF\u7A0B\u5E76\u53D1\u4F7F\u7528 CAS \u66F4\u65B0\u6570\u636E\u65F6\uFF0C\u53EF\u4EE5\u4E0D\u4F7F\u7528\u9501</strong>\u3002JDK \u4E2D\u5927\u91CF\u4F7F\u7528\u4E86 CAS \u6765\u66F4\u65B0\u6570\u636E\u800C\u9632\u6B62\u52A0\u9501\uFF08synchronized \u91CD\u91CF\u7EA7\u9501\uFF0CLock \u5E95\u5C42\u7684 AQS \u4E5F\u662F\u57FA\u4E8E CAS \u8FDB\u884C\u83B7\u53D6\u9501\u7684\uFF09\u6765\u4FDD\u6301\u539F\u5B50\u66F4\u65B0\u3002</p><p>CAS \u5B9E\u73B0\u65B9\u5F0F\u4E3A\u4E50\u89C2\u9501\uFF0Csynchronized \u4E3A\u60B2\u89C2\u9501\u3002\u56E0\u6B64\u4F7F\u7528 CAS \u89E3\u51B3\u5E76\u53D1\u95EE\u9898\u901A\u5E38\u60C5\u51B5\u4E0B\u6027\u80FD\u66F4\u4F18\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u4F7F\u7528 synchronized</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F7F\u7528\u539F\u5B50\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span>  <span class="token class-name">AtomicInteger</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> i<span class="token punctuation">.</span><span class="token function">addAndGet</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><br><p><strong><u>2 - CAS \u5E26\u6765\u7684\u95EE\u9898</u></strong></p><p><strong>1\u3001ABA \u95EE\u9898</strong></p><p>CAS \u9700\u8981\u5728\u64CD\u4F5C\u503C\u7684\u65F6\u5019\uFF0C\u68C0\u67E5\u503C\u6709\u6CA1\u6709\u53D1\u751F\u53D8\u5316\uFF0C\u6CA1\u6709\u53D1\u751F\u53D8\u5316\u5219\u66F4\u65B0\uFF0C\u5982\u679C\u5C06A\u503C\u6539\u6210\u4E86B\uFF0C\u518D\u5C06B\u6539\u56DEA\uFF0C\u867D\u7136\u671F\u671B\u503C\u4E00\u6837\u662FA\uFF0C\u4F46\u662F\u5DF2\u7ECF\u662F\u88AB\u4FEE\u6539\u8FC7\u4E86\u7684\u3002</p><blockquote><p>\u53EF\u4EE5\u4F7F\u7528\u4E50\u89C2\u9501\u6765\u89E3\u51B3 ABA \u95EE\u9898</p></blockquote><p>JDK \u7684 Atomic \u5305\u91CC\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7C7B<code>AtomicStampedReference</code>\u6765\u89E3\u51B3 ABA \u95EE\u9898\u3002<code>AtomicStampedReference</code>\u7C7B\u7684<code>compareAndSet()</code>\u65B9\u6CD5\u7684\u4F5C\u7528\u662F\u9996\u5148\u68C0\u67E5\u5F53\u524D\u5F15\u7528\u662F\u5426\u7B49\u4E8E\u9884\u671F\u5F15\u7528\uFF0C\u5E76\u4E14\u68C0\u67E5\u5F53\u524D\u6807\u5FD7\uFF08\u7248\u672C\uFF09\u662F\u5426\u7B49\u4E8E\u9884\u671F\u6807\u5FD7\uFF08\u7248\u672C\uFF09\uFF0C\u5982\u679C\u5168\u90E8\u76F8\u7B49\uFF0C\u5219\u4EE5\u539F\u5B50\u65B9\u5F0F\u5C06\u8BE5\u5F15\u7528\u548C\u8BE5\u6807\u5FD7\u7684\u503C\u8BBE\u7F6E\u4E3A\u7ED9\u5B9A\u7684\u66F4\u65B0\u503C\u3002</p><p>\u603B\u7684\u6765\u8BF4\u5C31\u662F\uFF1A</p><p>1\uFF09\u4F7F\u7528\u7248\u672C\u53F7\u63A7\u5236</p><p>2\uFF09\u4E0D\u91CD\u590D\u4F7F\u7528\u8282\u70B9\uFF08Pair\uFF09\u7684\u5F15\u7528\uFF0C\u6BCF\u6B21\u90FD\u65B0\u5EFA\u4E00\u4E2A\u65B0\u7684 Pair \u6765\u4F5C\u4E3A CAS \u6BD4\u8F83\u7684\u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u590D\u7528\u65E7\u7684</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * CASTest
 * @author gnl
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CASTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/**
         * AtomicStampedReference \u5E26\u65F6\u95F4\u6233\u7684\u539F\u5B50\u5F15\u7528
         * @param initialRef \u521D\u59CB\u5F15\u7528\u503C
         * @param initialStamp \u521D\u59CB\u7248\u672C
         */</span>
        <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> integerRef <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ref: &quot;</span> <span class="token operator">+</span> integerRef<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;stamp: &quot;</span> <span class="token operator">+</span> integerRef<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\tupdate now&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">/**
             * compareAndSet(\u671F\u671B\u503C, \u65B0\u503C, \u671F\u671B\u7248\u672C, \u65B0\u7248\u672C)
             */</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>integerRef<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> integerRef<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> integerRef<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ref: &quot;</span> <span class="token operator">+</span> integerRef<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;stamp: &quot;</span> <span class="token operator">+</span> integerRef<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\tupdate now&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>integerRef<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> integerRef<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> integerRef<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ref: &quot;</span> <span class="token operator">+</span> integerRef<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;stamp: &quot;</span> <span class="token operator">+</span> integerRef<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><br><p><strong>2\u3001\u81EA\u65CB\u5FAA\u73AF\u65F6\u95F4\u957F\u5F00\u9500\u5927</strong></p><p>\u81EA\u65CB CAS \u5982\u679C\u957F\u65F6\u95F4\u4E0D\u6210\u529F\uFF0C\u4F1A\u7ED9 CPU \u5E26\u6765\u975E\u5E38\u5927\u7684\u6267\u884C\u5F00\u9500\u3002</p><blockquote><p>\u{1F4DD} \u5BF9\u4E8E CAS \u81EA\u65CB\u7684\u5F00\u9500\uFF0C\u5982\u679C JVM \u80FD\u652F\u6301\u5904\u7406\u5668\u63D0\u4F9B\u7684 pause \u6307\u4EE4\uFF0C\u90A3\u4E48\u6548\u7387\u4F1A\u6709\u4E00\u5B9A\u7684\u63D0\u5347\u3002pause \u6307\u4EE4\u6709\u4E24\u4E2A\u4F5C\u7528\uFF1A\u7B2C\u4E00\uFF0C\u5B83\u53EF\u4EE5\u5EF6\u8FDF\u6D41\u6C34\u7EBF\u6267\u884C\u547D\u4EE4\uFF08de-pipeline\uFF09\uFF0C\u4F7F CPU \u4E0D\u4F1A\u6D88\u8017\u8FC7\u591A\u7684\u6267\u884C\u8D44\u6E90\uFF0C\u5EF6\u8FDF\u7684\u65F6\u95F4\u53D6\u51B3\u4E8E\u5177\u4F53\u5B9E\u73B0\u7684\u7248\u672C\uFF0C\u4E00\u4E9B\u5904\u7406\u5668\u4E0A\u5EF6\u8FDF\u65F6\u95F4\u662F\u96F6\uFF1B\u7B2C\u4E8C\uFF0C\u5B83\u53EF\u4EE5\u907F\u514D\u5728\u9000\u51FA\u5FAA\u73AF\u7684\u65F6\u5019\u56E0\u5185\u5B58\u987A\u5E8F\u51B2\u7A81\uFF08Memory Order Violation\uFF09\u800C\u5F15\u8D77 CPU \u6D41\u6C34\u7EBF\u88AB\u6E05\u7A7A\uFF08CPU Pipeline Flush\uFF09\uFF0C\u4ECE\u800C\u63D0\u9AD8 CPU \u7684\u6267\u884C\u6548\u7387</p></blockquote><br><p><strong>3\u3001\u53EA\u80FD\u4FDD\u8BC1\u4E00\u4E2A\u5171\u4EAB\u53D8\u91CF\u7684\u539F\u5B50\u64CD\u4F5C</strong></p><p>\u5F53\u5BF9\u4E00\u4E2A\u5171\u4EAB\u53D8\u91CF\u6267\u884C\u64CD\u4F5C\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 CAS \u7684\u65B9\u5F0F\u6765\u4FDD\u8BC1\u539F\u5B50\u64CD\u4F5C\uFF0C\u4F46\u662F\u5BF9\u591A\u4E2A\u5171\u4EAB\u53D8\u91CF\u64CD\u4F5C\u65F6\uFF0CCAS \u5C31\u65E0\u6CD5\u4FDD\u8BC1\u64CD\u4F5C\u7684\u539F\u5B50\u6027\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5C31\u53EF\u4EE5\u7528\u9501\u6765\u5B9E\u73B0\u3002</p><blockquote><p>\u{1F4DD} \u8FD8\u6709\u4E00\u4E2A\u53D6\u5DE7\u7684\u529E\u6CD5\uFF0C\u5C31\u662F\u628A\u591A\u4E2A\u5171\u4EAB\u53D8\u91CF\u5408\u5E76\u6210\u4E00\u4E2A\u5171\u4EAB\u53D8\u91CF\u6765\u64CD\u4F5C\u3002\u6BD4\u5982\uFF0C\u6709\u4E24\u4E2A\u5171\u4EAB\u53D8\u91CF\uFF1A<code>i = 2\uFF0Cj = a</code>\uFF0C\u5408\u5E76\u4E00\u4E0B<code>ij = 2a</code>\uFF0C\u7136\u540E\u7528 CAS \u6765\u64CD\u4F5C<code>ij</code>\u3002</p></blockquote><p>\u4ECE Java 1.5 \u5F00\u59CB\uFF0CJDK \u63D0\u4F9B\u4E86<code>AtomicReference</code>\u7C7B\u6765\u4FDD\u8BC1\u5F15\u7528\u5BF9\u8C61\u4E4B\u95F4\u7684\u539F\u5B50\u6027\uFF0C\u5C31\u53EF\u4EE5\u628A\u591A\u4E2A\u53D8\u91CF\u653E\u5728\u4E00\u4E2A\u5BF9\u8C61\u91CC\u6765\u8FDB\u884C CAS \u64CD\u4F5C\u3002</p><br><h4 id="unsafe-\u7C7B" tabindex="-1">Unsafe \u7C7B <a class="header-anchor" href="#unsafe-\u7C7B" aria-hidden="true">#</a></h4><blockquote><p>\u539F\u5B50\u7C7B\uFF08AtomicXXX \u7C7B\uFF09\u662F\u901A\u8FC7<code>Unsafe</code>\u7C7B\u5B9E\u73B0\u7684</p></blockquote><p>Unsafe \u662F\u4F4D\u4E8E<code>sun.misc</code>\u5305\u4E0B\u7684\u4E00\u4E2A\u7C7B\uFF0C\u4E3B\u8981\u63D0\u4F9B\u4E00\u4E9B\u7528\u4E8E\u6267\u884C\u4F4E\u7EA7\u522B\u3001\u4E0D\u5B89\u5168\u64CD\u4F5C\u7684\u65B9\u6CD5\uFF0C\u5982\u76F4\u63A5\u8BBF\u95EE\u7CFB\u7EDF\u5185\u5B58\u8D44\u6E90\u3001\u81EA\u4E3B\u7BA1\u7406\u5185\u5B58\u8D44\u6E90\u7B49\u3002\u8FD9\u4E9B\u65B9\u6CD5\u5728\u63D0\u5347 Java \u8FD0\u884C\u6548\u7387\u3001\u589E\u5F3A Java \u8BED\u8A00\u5E95\u5C42\u8D44\u6E90\u64CD\u4F5C\u80FD\u529B\u65B9\u9762\u8D77\u5230\u4E86\u5F88\u5927\u7684\u4F5C\u7528\u3002</p><p>\u4F46\u7531\u4E8E Unsafe \u7C7B\u4F7F Java \u8BED\u8A00\u62E5\u6709\u4E86\u7C7B\u4F3C C \u8BED\u8A00\u6307\u9488\u4E00\u6837\u64CD\u4F5C\u5185\u5B58\u7A7A\u95F4\u7684\u80FD\u529B\uFF0C\u8FD9\u4E5F\u589E\u52A0\u4E86\u7A0B\u5E8F\u53D1\u751F\u76F8\u5173\u6307\u9488\u95EE\u9898\u7684\u98CE\u9669\u3002\u5728\u7A0B\u5E8F\u4E2D\u8FC7\u5EA6\u3001\u4E0D\u6B63\u786E\u4F7F\u7528 Unsafe \u7C7B\u4F1A\u4F7F\u5F97\u7A0B\u5E8F\u51FA\u9519\u7684\u6982\u7387\u53D8\u5927\uFF0C\u4F7F\u5F97 Java \u8FD9\u79CD\u5185\u5B58\u5B89\u5168\u7684\u8BED\u8A00\u53D8\u5F97\u4E0D\u518D\u5B89\u5168\uFF0C\u56E0\u6B64\u5BF9 Unsafe \u7684\u4F7F\u7528\u4E00\u5B9A\u8981\u614E\u91CD\u3002</p><p>\u5C3D\u7BA1 Unsafe \u7C7B\u91CC\u9762\u7684\u65B9\u6CD5\u90FD\u662F public \u7684\uFF0C\u4F46\u662F\u5E76\u6CA1\u6709\u529E\u6CD5\u4F7F\u7528\u5B83\u4EEC\uFF0CJDK API \u6587\u6863\u4E5F\u6CA1\u6709\u63D0\u4F9B\u4EFB\u4F55\u5173\u4E8E\u8FD9\u4E2A\u7C7B\u7684\u65B9\u6CD5\u7684\u89E3\u91CA\u3002\u603B\u800C\u8A00\u4E4B\uFF0C\u5BF9\u4E8E Unsafe \u7C7B\u7684\u4F7F\u7528\u90FD\u662F\u53D7\u9650\u5236\u7684\uFF0C\u53EA\u6709\u6388\u4FE1\u7684\u4EE3\u7801\u624D\u80FD\u83B7\u5F97\u8BE5\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u5F53\u7136 JDK \u5E93\u91CC\u9762\u7684\u7C7B\u662F\u53EF\u4EE5\u968F\u610F\u4F7F\u7528\u7684\u3002</p><br><p><strong>UnSafe \u7C7B\u603B\u4F53\u529F\u80FD</strong></p><p>Unsafe \u63D0\u4F9B\u7684 API \u5927\u81F4\u53EF\u5206\u4E3A\uFF1A\u5185\u5B58\u64CD\u4F5C\u3001CAS\u3001Class \u76F8\u5173\u3001\u5BF9\u8C61\u64CD\u4F5C\u3001\u7EBF\u7A0B\u8C03\u5EA6\u3001\u7CFB\u7EDF\u4FE1\u606F\u83B7\u53D6\u3001\u5185\u5B58\u5C4F\u969C\u3001\u6570\u7EC4\u64CD\u4F5C\u7B49</p><p><img src="`+f+`" alt=""></p><blockquote><p>Unsafe \u7C7B\u66F4\u591A\u7EC6\u8282\u7A0D\u540E\u8865\u5145\u2026</p></blockquote><br><h4 id="atomic-\u539F\u5B50\u7C7B" tabindex="-1">Atomic \u539F\u5B50\u7C7B <a class="header-anchor" href="#atomic-\u539F\u5B50\u7C7B" aria-hidden="true">#</a></h4><blockquote><p>\u4EE5 AtomicInteger \u4E3A\u4F8B</p></blockquote><p><strong><u>1 - \u57FA\u672C\u539F\u5B50\u7C7B</u></strong></p><p><strong>1\u3001\u5E38\u7528 API</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\uFF1A\u83B7\u53D6\u5F53\u524D\u7684\u503C
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> newValue<span class="token punctuation">)</span>\uFF1A\u83B7\u53D6\u5F53\u524D\u7684\u503C\uFF0C\u5E76\u8BBE\u7F6E\u65B0\u7684\u503C
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\uFF1A\u83B7\u53D6\u5F53\u524D\u7684\u503C\uFF0C\u5E76\u81EA\u589E
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\uFF1A\u83B7\u53D6\u5F53\u524D\u7684\u503C\uFF0C\u5E76\u81EA\u51CF
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndAdd</span><span class="token punctuation">(</span><span class="token keyword">int</span> delta<span class="token punctuation">)</span>\uFF1A\u83B7\u53D6\u5F53\u524D\u7684\u503C\uFF0C\u5E76\u52A0\u4E0A\u9884\u671F\u7684\u503C
<span class="token keyword">void</span> <span class="token function">lazySet</span><span class="token punctuation">(</span><span class="token keyword">int</span> newValue<span class="token punctuation">)</span><span class="token operator">:</span> \u6700\u7EC8\u4F1A\u8BBE\u7F6E\u6210newValue<span class="token punctuation">,</span>\u4F7F\u7528lazySet\u8BBE\u7F6E\u503C\u540E\uFF0C\u53EF\u80FD\u5BFC\u81F4\u5176\u4ED6\u7EBF\u7A0B\u5728\u4E4B\u540E\u7684\u4E00\u5C0F\u6BB5\u65F6\u95F4\u5185\u8FD8\u662F\u53EF\u4EE5\u8BFB\u5230\u65E7\u7684\u503C\u3002
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// 1\u3001synchronized + volatile \u5B9E\u73B0</span>
<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">// \u82E5\u8981\u7EBF\u7A0B\u5B89\u5168\u6267\u884C\u6267\u884C count++\uFF0C\u9700\u8981\u52A0\u9501</span>
<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">// 2\u3001AtomicInteger \u5B9E\u73B0</span>
<span class="token keyword">private</span> <span class="token class-name">AtomicInteger</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F7F\u7528 AtomicInteger \u540E\uFF0C\u4E0D\u9700\u8981\u52A0\u9501\uFF0C\u4E5F\u53EF\u4EE5\u5B9E\u73B0\u7EBF\u7A0B\u5B89\u5168</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> count<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><br><p><strong>2\u3001AtomicInteger \u5B9E\u73B0\u7EC6\u8282</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicInteger</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">6214790243416807050L</span><span class="token punctuation">;</span>

    <span class="token comment">// setup to use Unsafe.compareAndSwapInt for updates</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Unsafe</span> unsafe <span class="token operator">=</span> <span class="token class-name">Unsafe</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> valueOffset<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            valueOffset <span class="token operator">=</span> unsafe<span class="token punctuation">.</span>objectFieldOffset
                    <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span>AtomicInteger</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

      <span class="token comment">// \u5B58\u50A8\u5F53\u524D\u503C</span>
      <span class="token comment">// volatile \u4FDD\u8BC1\u7EBF\u7A0B\u7684\u53EF\u89C1\u6027\uFF0C\u591A\u7EBF\u7A0B\u5E76\u53D1\u65F6\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u4FEE\u6539\u6570\u636E\uFF0C\u53EF\u4EE5\u4FDD\u8BC1\u5176\u5B83\u7EBF\u7A0B\u7ACB\u9A6C\u770B\u5230\u4FEE\u6539\u540E\u7684\u503C</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> value<span class="token punctuation">;</span>

    <span class="token comment">/**
     * Creates a new AtomicInteger with the given initial value.
     *
     * @param initialValue the initial value
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value <span class="token operator">=</span> initialValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Creates a new AtomicInteger with initial value {@code 0}.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Gets the current value.
     * \u8FD4\u56DE\u5F53\u524D\u503C
     * @return the current value
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Sets to the given value.
     *
     * @param newValue the new value
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">int</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value <span class="token operator">=</span> newValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Eventually sets to the given value.
     *
     * @param newValue the new value
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">lazySet</span><span class="token punctuation">(</span><span class="token keyword">int</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        unsafe<span class="token punctuation">.</span><span class="token function">putOrderedInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Atomically sets to the given value and returns the old value.
     *
     * @param newValue the new value
     * @return the previous value
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">getAndSetInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Atomically sets the value to the given updated value
     * if the current value {@code ==} the expected value.
     *
     * @param expect the expected value
     * @param update the new value
     * @return {@code true} if successful. False return indicates that
     * the actual value was not equal to the expected value.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> expect<span class="token punctuation">,</span> <span class="token keyword">int</span> update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> expect<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br></div></div><blockquote><p>\u5728\u5176\u4ED6\u57FA\u672C\u7C7B\u578B\u7684\u539F\u5B50\u7C7B\u65B9\u6CD5\u7C7B\u4F3C AtomicInteger\uFF0C\u4E0D\u518D\u5C55\u5F00</p></blockquote><br><p><strong>3\u3001\u539F\u5B50\u6570\u7EC4</strong></p><ul><li>AtomicIntegerArray\uFF0C\u539F\u5B50\u66F4\u65B0\u6574\u578B\u6570\u7EC4\u91CC\u7684\u5143\u7D20</li><li>AtomicLongArray\uFF0C\u539F\u5B50\u66F4\u65B0\u957F\u6574\u578B\u6570\u7EC4\u91CC\u7684\u5143\u7D20</li><li>AtomicReferenceArray\uFF0C\u539F\u5B50\u66F4\u65B0\u5F15\u7528\u7C7B\u578B\u6570\u7EC4\u91CC\u7684\u5143\u7D20</li></ul><p>\u5E38\u7528\u65B9\u6CD5\uFF1A</p><ul><li>get(int index)\uFF0C\u83B7\u53D6\u7D22\u5F15\u4E3A index \u7684\u5143\u7D20\u503C</li><li>compareAndSet(int i,E expect,E update)\uFF0C\u5982\u679C\u5F53\u524D\u503C\u7B49\u4E8E\u9884\u671F\u503C\uFF0C\u5219\u4EE5\u539F\u5B50\u65B9\u5F0F\u5C06\u6570\u7EC4\u4F4D\u7F6E i \u7684\u5143\u7D20\u8BBE\u7F6E\u4E3A update \u503C</li></ul><br><p><strong>4\u3001\u539F\u5B50\u5F15\u7528</strong></p><ul><li>AtomicReference\uFF0C\u539F\u5B50\u66F4\u65B0\u5F15\u7528\u7C7B\u578B</li><li>AtomicStampedReference\uFF0C\u539F\u5B50\u66F4\u65B0\u5F15\u7528\u7C7B\u578B, \u5185\u90E8\u4F7F\u7528<code>Pair</code>\u7C7B\u6765\u5B58\u50A8\u5143\u7D20\u503C\u53CA\u5176\u7248\u672C\u53F7</li><li>AtomicMarkableReferce\uFF0C\u539F\u5B50\u66F4\u65B0\u5E26\u6709\u6807\u8BB0\u4F4D\u7684\u5F15\u7528\u7C7B\u578B</li></ul><br><h4 id="lock-\u6846\u67B6\u548C\u5DE5\u5177\u7C7B" tabindex="-1">Lock \u6846\u67B6\u548C\u5DE5\u5177\u7C7B <a class="header-anchor" href="#lock-\u6846\u67B6\u548C\u5DE5\u5177\u7C7B" aria-hidden="true">#</a></h4><p><strong>\u7C7B\u7ED3\u6784</strong></p><p><img src="`+v+'" alt=""></p><br><h5 id="locksupport" tabindex="-1">LockSupport <a class="header-anchor" href="#locksupport" aria-hidden="true">#</a></h5><blockquote><p>\u7A0D\u540E\u8865\u5145\u2026</p></blockquote><br><h5 id="aqs" tabindex="-1">AQS <a class="header-anchor" href="#aqs" aria-hidden="true">#</a></h5><br><p><strong><u>1 - AQS \u662F\u4EC0\u4E48</u></strong></p><p>AbstractQueuedSynchronizer\uFF08\u62BD\u8C61\u961F\u5217\u540C\u6B65\u5668\uFF09\uFF0C<strong>\u662F\u4E00\u4E2A\u7528\u6765\u6784\u5EFA\u9501\u548C\u540C\u6B65\u5668\u7684\u6846\u67B6</strong>\uFF0C\u4F7F\u7528 AQS \u80FD\u7B80\u5355\u4E14\u9AD8\u6548\u5730\u6784\u9020\u51FA\u5E94\u7528\u5E7F\u6CDB\u7684\u5927\u91CF\u7684\u540C\u6B65\u5668\u3002</p><p>\u6BD4\u5982\u6211\u4EEC\u63D0\u5230\u7684 ReentrantLock\uFF0CSemaphore\uFF0C\u5176\u4ED6\u7684\u8BF8\u5982 ReentrantReadWriteLock\uFF0CSynchronousQueue\uFF0CFutureTask \u7686\u662F\u57FA\u4E8E AQS\u3002\u5F53\u7136\u6211\u4EEC\u81EA\u5DF1\u4E5F\u80FD\u5229\u7528 AQS \u975E\u5E38\u8F7B\u677E\u5BB9\u6613\u5730\u6784\u9020\u51FA\u7B26\u5408\u6211\u4EEC\u81EA\u5DF1\u9700\u6C42\u7684\u540C\u6B65\u5668\u3002</p><br><p><strong><u>2 - AQS \u6838\u5FC3\u601D\u60F3</u></strong></p><p>AQS \u6838\u5FC3\u601D\u60F3\u662F\uFF1A</p><p>1\uFF09\u5982\u679C\u88AB\u8BF7\u6C42\u7684\u5171\u4EAB\u8D44\u6E90\u7A7A\u95F2\uFF0C\u5219\u5C06\u5F53\u524D\u8BF7\u6C42\u8D44\u6E90\u7684\u7EBF\u7A0B\u8BBE\u7F6E\u4E3A\u6709\u6548\u7684\u5DE5\u4F5C\u7EBF\u7A0B\uFF0C\u5E76\u4E14\u5C06\u5171\u4EAB\u8D44\u6E90\u8BBE\u7F6E\u4E3A\u9501\u5B9A\u72B6\u6001\uFF1B</p><p>2\uFF09\u5982\u679C\u88AB\u8BF7\u6C42\u7684\u5171\u4EAB\u8D44\u6E90\u88AB\u5360\u7528\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u4E00\u5957<strong>\u7EBF\u7A0B\u963B\u585E\u7B49\u5F85\u673A\u5236</strong>\u4EE5\u53CA<strong>\u88AB\u5524\u9192\u65F6\u9501\u5206\u914D\u673A\u5236</strong>\uFF0C\u8FD9\u4E2A\u673A\u5236 AQS \u662F\u7528 CLH \u961F\u5217\u9501\u5B9E\u73B0\u7684\uFF0C\u5C06\u6682\u65F6\u83B7\u53D6\u4E0D\u5230\u9501\u7684\u7EBF\u7A0B\u52A0\u5165\u5230\u961F\u5217\u4E2D\u3002</p><br><p><strong>1\u3001CLH \u961F\u5217</strong></p><p>CLH\uFF08Craig\uFF0CLandin\uFF0Cand Hagersten \u4E09\u4E2A\u4EBA\u540D\u7F29\u5199\uFF09\u961F\u5217\u662F\u4E00\u4E2A<strong>\u865A\u62DF\u7684\u53CC\u5411\u961F\u5217</strong>\uFF08\u865A\u62DF\u7684\u53CC\u5411\u961F\u5217\u5373\u4E0D\u5B58\u5728\u961F\u5217\u5B9E\u4F8B\uFF0C\u4EC5\u5B58\u5728\u7ED3\u70B9\u4E4B\u95F4\u7684\u5173\u8054\u5173\u7CFB\uFF09\u3002<strong>AQS \u662F\u5C06\u6BCF\u6761\u8BF7\u6C42\u5171\u4EAB\u8D44\u6E90\u7684\u7EBF\u7A0B\u5C01\u88C5\u6210\u4E00\u4E2A CLH \u9501\u961F\u5217\u7684\u4E00\u4E2A\u7ED3\u70B9\uFF08Node\uFF09\u6765\u5B9E\u73B0\u9501\u7684\u5206\u914D\u3002</strong></p><p><img src="'+C+`" alt=""></p><p><strong>2\u3001\u5185\u90E8 Node \u7C7B</strong></p><p>\u5728<code>AQS</code>\u4E2D\u5982\u679C\u7EBF\u7A0B\u83B7\u53D6\u8D44\u6E90\u5931\u8D25\uFF0C\u4F1A\u5305\u88C5\u6210\u4E00\u4E2A\u8282\u70B9\u6302\u8F7D\u5230<code>CLH</code>\u961F\u5217\u4E0A\uFF0C<code>AQS</code>\u4E2D\u5B9A\u4E49\u4E86<code>Node</code>\u7C7B\u7528\u4E8E\u5305\u88C5\u7EBF\u7A0B\u3002</p><p><code>Node</code>\u4E3B\u8981\u5305\u542B5\u4E2A\u6838\u5FC3\u5B57\u6BB5\uFF1A</p><p>1\uFF09<code>waitStatus</code>\uFF1A\u5F53\u524D\u8282\u70B9\u72B6\u6001\uFF0C\u8BE5\u5B57\u6BB5\u5171\u67095\u79CD\u53D6\u503C\uFF1A</p><ul><li><code>CANCELLED = 1</code>\u3002\u8282\u70B9\u5F15\u7528\u7EBF\u7A0B\u7531\u4E8E\u7B49\u5F85\u8D85\u65F6\u6216\u88AB\u6253\u65AD\u65F6\u7684\u72B6\u6001\u3002</li><li><code>SIGNAL = -1</code>\u3002\u540E\u7EE7\u8282\u70B9\u7EBF\u7A0B\u9700\u8981\u88AB\u5524\u9192\u65F6\u7684\u5F53\u524D\u8282\u70B9\u72B6\u6001\u3002\u5F53\u961F\u5217\u4E2D\u52A0\u5165\u540E\u7EE7\u8282\u70B9\u88AB\u6302\u8D77<code>(block)</code>\u65F6\uFF0C\u5176\u524D\u9A71\u8282\u70B9\u4F1A\u88AB\u8BBE\u7F6E\u4E3A<code>SIGNAL</code>\u72B6\u6001\uFF0C\u8868\u793A\u8BE5\u8282\u70B9\u9700\u8981\u88AB\u5524\u9192\u3002</li><li><code>CONDITION = -2</code>\u3002\u5F53\u8282\u70B9\u7EBF\u7A0B\u8FDB\u5165<code>condition</code>\u961F\u5217\u65F6\u7684\u72B6\u6001\u3002(\u89C1<code>ConditionObject</code>)</li><li><code>PROPAGATE = -3</code>\u3002\u4EC5\u5728\u91CA\u653E\u5171\u4EAB\u9501<code>releaseShared</code>\u65F6\u5BF9\u5934\u8282\u70B9\u4F7F\u7528\u3002(\u89C1\u5171\u4EAB\u9501\u5206\u6790)</li><li><code>0</code>\u3002\u8282\u70B9\u521D\u59CB\u5316\u65F6\u7684\u72B6\u6001\u3002</li></ul><p>2\uFF09<code>prev</code>\uFF1A\u524D\u9A71\u8282\u70B9\u3002</p><p>3\uFF09<code>next</code>\uFF1A\u540E\u7EE7\u8282\u70B9\u3002</p><p>4\uFF09<code>thread</code>\uFF1A\u5F15\u7528\u7EBF\u7A0B\uFF0C\u5934\u8282\u70B9\u4E0D\u5305\u542B\u7EBF\u7A0B\u3002</p><p>5\uFF09<code>nextWaiter</code>\uFF1A<code>condition</code>\u6761\u4EF6\u961F\u5217\u3002(\u89C1<code>ConditionObject</code>)</p><br><p><strong>3\u3001AQS \u7EC6\u8282</strong></p><p>AQS \u7EF4\u62A4\u4E86\u4E00\u4E2A<code>volatile int state</code>\u53D8\u91CF\u6765\u8868\u793A\u540C\u6B65\u72B6\u6001\u548C\u4E00\u4E2A FIFO \u7684 CLH \u961F\u5217\u6765\u5B8C\u6210\u83B7\u53D6\u8D44\u6E90\u7EBF\u7A0B\u7684\u6392\u961F\u5DE5\u4F5C\u3002\u961F\u5217\u4E2D\u7684\u8282\u70B9\u6301\u6709\u7EBF\u7A0B\u5F15\u7528\uFF0C\u6BCF\u4E2A\u8282\u70B9\u5747\u53EF\u901A\u8FC7<code>getState()</code>\u3001<code>setState()</code>\u548C<code>compareAndSetState()</code>\u5BF9<code>state</code>\u8FDB\u884C\u4FEE\u6539\u548C\u8BBF\u95EE\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// AbstractQueuedSynchronizer.java</span>

<span class="token comment">/**
 * \u5171\u4EAB\u53D8\u91CF\uFF0C\u4F7F\u7528volatile\u4FEE\u9970\u4FDD\u8BC1\u7EBF\u7A0B\u53EF\u89C1\u6027
 * The synchronization state.
 */</span>
<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> state<span class="token punctuation">;</span>

<span class="token comment">/**
 * \u8FD4\u56DE\u540C\u6B65\u72B6\u6001\u7684\u5F53\u524D\u503C Returns the current value of synchronization state.
 * This operation has memory semantics of a {@code volatile} read.
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> state<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u8BBE\u7F6E\u540C\u6B65\u72B6\u6001\u7684\u503C Sets the value of synchronization state.
 * This operation has memory semantics of a {@code volatile} write.
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token keyword">int</span> newState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    state <span class="token operator">=</span> newState<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">/**
 * \u5982\u679C\u5F53\u524D\u540C\u6B65\u72B6\u6001\u7684\u503C\u7B49\u4E8Eexpect(\u671F\u671B\u503C)\uFF0C\u5219\u539F\u5B50\u5730\uFF08CAS\u64CD\u4F5C\uFF09\u5C06\u540C\u6B65\u72B6\u6001\u503C\u8BBE\u7F6E\u4E3A\u7ED9\u5B9A\u503Cupdate
 * Atomically sets synchronization state to the given updated
 * value if the current state value equals the expected value.
 * This operation has memory semantics of a {@code volatile} read
 * and write.
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token keyword">int</span> expect<span class="token punctuation">,</span> <span class="token keyword">int</span> update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// See below for intrinsics setup to support this</span>
    <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> stateOffset<span class="token punctuation">,</span> expect<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// acquire\u6838\u5FC3\u4E3AtryAcquire\u3001addWaiter\u548CacquireQueued\u4E09\u4E2A\u51FD\u6570\uFF0C\u5176\u4E2DtryAcquire\u9700\u5177\u4F53\u7C7B\u5B9E\u73B0\u3002</span>
<span class="token comment">// \u6BCF\u5F53\u7EBF\u7A0B\u8C03\u7528acquire\u65F6\u90FD\u9996\u5148\u4F1A\u8C03\u7528 tryAcquire\uFF0C\u5931\u8D25\u540E\u624D\u4F1A\u6302\u8F7D\u5230\u961F\u5217\uFF0C\u56E0\u6B64acquire\u5B9E\u73B0\u9ED8\u8BA4\u4E3A\u975E\u516C\u5E73\u9501\u3002</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      <span class="token comment">// \u5982\u83B7\u53D6\u8D44\u6E90\u5931\u8D25\uFF0C\u5C06\u7EBF\u7A0B\u5305\u88C5\u4E3ANode\u6DFB\u52A0\u5230\u961F\u5217\u4E2D\u963B\u585E\u7B49\u5F85</span>
      <span class="token comment">// addWaiter\u5C06\u7EBF\u7A0B\u5305\u88C5\u4E3A\u72EC\u5360\u8282\u70B9\uFF0C\u5C3E\u63D2\u5F0F\u52A0\u5165\u5230\u961F\u5217\u4E2D\u3002\u5982\u961F\u5217\u4E3A\u7A7A\uFF0C\u5219\u4F1A\u6DFB\u52A0\u4E00\u4E2A\u7A7A\u7684\u5934\u8282\u70B9\u3002</span>
      <span class="token comment">// \u503C\u5F97\u6CE8\u610F\u7684\u662FaddWaiter\u4E2D\u7684enq\u65B9\u6CD5\uFF0C\u901A\u8FC7CAS+\u81EA\u65CB\u7684\u65B9\u5F0F\u5904\u7406\u5C3E\u8282\u70B9\u6DFB\u52A0\u51B2\u7A81\u3002</span>
      <span class="token function">acquireQueued</span><span class="token punctuation">(</span><span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span>EXCLUSIVE<span class="token punctuation">)</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><br><p><strong><u>2 - AQS \u5BF9\u8D44\u6E90\u7684\u5360\u6709\u65B9\u5F0F</u></strong></p><p>1\u3001Exclusive\uFF08\u72EC\u5360\uFF09\uFF0C\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u80FD\u6267\u884C\uFF0C\u5982 ReentrantLock\uFF0C\u53C8\u53EF\u5206\u4E3A\u516C\u5E73\u9501\u548C\u975E\u516C\u5E73\u9501</p><ul><li>\u516C\u5E73\u9501\uFF1A\u6309\u7167\u7EBF\u7A0B\u5728\u961F\u5217\u4E2D\u7684\u6392\u961F\u987A\u5E8F\uFF0C\u5148\u5230\u8005\u5148\u62FF\u5230\u9501</li><li>\u975E\u516C\u5E73\u9501\uFF1A\u5F53\u7EBF\u7A0B\u8981\u83B7\u53D6\u9501\u65F6\uFF0C\u65E0\u89C6\u961F\u5217\u987A\u5E8F\u76F4\u63A5\u53BB\u62A2\u9501\uFF0C\u8C01\u62A2\u5230\u5C31\u662F\u8C01\u7684</li></ul><p>2\u3001Share\uFF08\u5171\u4EAB\uFF09\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u53EF\u540C\u65F6\u6267\u884C\uFF0C\u5982 Semaphore/CountDownLatch</p><blockquote><p>\u26A0\uFE0F <code>ReentrantReadWriteLock</code>\u53EF\u4EE5\u770B\u6210\u662F\u7EC4\u5408\u5F0F\uFF0C\u56E0\u4E3A ReentrantReadWriteLock\uFF08\u8BFB\u5199\u9501\uFF09\u5141\u8BB8\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u5BF9\u67D0\u4E00\u8D44\u6E90\u8FDB\u884C\u8BFB</p></blockquote><p>\u4E0D\u540C\u7684\u81EA\u5B9A\u4E49\u540C\u6B65\u5668\u4E89\u7528\u5171\u4EAB\u8D44\u6E90\u7684\u65B9\u5F0F\u4E5F\u4E0D\u540C\u3002\u81EA\u5B9A\u4E49\u540C\u6B65\u5668\u5728\u5B9E\u73B0\u65F6\u53EA\u9700\u8981\u5B9E\u73B0\u5171\u4EAB\u8D44\u6E90 state \u7684\u83B7\u53D6\u4E0E\u91CA\u653E\u65B9\u5F0F\u5373\u53EF\uFF0C\u81F3\u4E8E\u5177\u4F53\u7EBF\u7A0B\u7B49\u5F85\u961F\u5217\u7684\u7EF4\u62A4\uFF08\u5982\u83B7\u53D6\u8D44\u6E90\u5931\u8D25\u5165\u961F/\u5524\u9192\u51FA\u961F\u7B49\uFF09\uFF0CAQS \u5DF2\u7ECF\u5728\u4E0A\u5C42\u5DF2\u7ECF\u5E2E\u6211\u4EEC\u5B9E\u73B0\u597D\u4E86\u3002</p><br><p><strong><u>3 - AQS \u6A21\u7248\u65B9\u6CD5</u></strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u8BE5\u7EBF\u7A0B\u662F\u5426\u6B63\u5728\u72EC\u5360\u8D44\u6E90\u3002\u53EA\u6709\u7528\u5230condition\u624D\u9700\u8981\u53BB\u5B9E\u73B0\u5B83\u3002</span>
<span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token comment">// \u72EC\u5360\u65B9\u5F0F\u3002\u5C1D\u8BD5\u83B7\u53D6\u8D44\u6E90\uFF0C\u6210\u529F\u5219\u8FD4\u56DEtrue\uFF0C\u5931\u8D25\u5219\u8FD4\u56DEfalse\u3002</span>
<span class="token function">tryRelease</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token comment">// \u72EC\u5360\u65B9\u5F0F\u3002\u5C1D\u8BD5\u91CA\u653E\u8D44\u6E90\uFF0C\u6210\u529F\u5219\u8FD4\u56DEtrue\uFF0C\u5931\u8D25\u5219\u8FD4\u56DEfalse\u3002</span>
<span class="token function">tryAcquireShared</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token comment">// \u5171\u4EAB\u65B9\u5F0F\u3002\u5C1D\u8BD5\u83B7\u53D6\u8D44\u6E90\u3002\u8D1F\u6570\u8868\u793A\u5931\u8D25\uFF1B0\u8868\u793A\u6210\u529F\uFF0C\u4F46\u6CA1\u6709\u5269\u4F59\u53EF\u7528\u8D44\u6E90\uFF1B\u6B63\u6570\u8868\u793A\u6210\u529F\uFF0C\u4E14\u6709\u5269\u4F59\u8D44\u6E90\u3002</span>
<span class="token function">tryReleaseShared</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token comment">// \u5171\u4EAB\u65B9\u5F0F\u3002\u5C1D\u8BD5\u91CA\u653E\u8D44\u6E90\uFF0C\u6210\u529F\u5219\u8FD4\u56DEtrue\uFF0C\u5931\u8D25\u5219\u8FD4\u56DEfalse\u3002</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u6BCF\u4E2A\u65B9\u6CD5\u90FD\u629B\u51FA<code>UnsupportedOperationException</code>\u3002 \u8FD9\u4E9B\u65B9\u6CD5\u7684\u5B9E\u73B0\u5FC5\u987B\u662F\u5185\u90E8\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u5E76\u4E14\u901A\u5E38\u5E94\u8BE5\u7B80\u77ED\u800C\u4E0D\u662F\u963B\u585E\u3002AQS \u7C7B\u4E2D\u7684\u5176\u4ED6\u65B9\u6CD5\u90FD\u662F final \uFF0C\u6240\u4EE5\u65E0\u6CD5\u88AB\u5176\u4ED6\u7C7B\u4F7F\u7528\uFF0C\u53EA\u6709\u8FD9\u51E0\u4E2A\u65B9\u6CD5\u53EF\u4EE5\u88AB\u5176\u4ED6\u7C7B\u4F7F\u7528\u3002</p><p><strong>AQS \u4E0E\u53EF\u91CD\u5165</strong></p><p>\u4EE5 ReentrantLock \u4E3A\u4F8B\uFF0Cstate \u521D\u59CB\u5316\u4E3A0\uFF0C\u8868\u793A\u672A\u9501\u5B9A\u72B6\u6001\u3002A\u7EBF\u7A0B<code>lock()</code>\u65F6\uFF0C\u4F1A\u8C03\u7528<code>tryAcquire()</code>\u72EC\u5360\u8BE5\u9501\u5E76\u5C06 state+1\u3002\u6B64\u540E\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u518D<code>tryAcquire()</code>\u65F6\u5C31\u4F1A\u5931\u8D25\uFF0C\u76F4\u5230A\u7EBF\u7A0B<code>unlock()</code>\u5230state\u4E3A0\uFF08\u5373\u91CA\u653E\u9501\uFF09\u4E3A\u6B62\uFF0C\u5176\u5B83\u7EBF\u7A0B\u624D\u6709\u673A\u4F1A\u83B7\u53D6\u8BE5\u9501\u3002\u5F53\u7136\uFF0C\u91CA\u653E\u9501\u4E4B\u524D\uFF0CA\u7EBF\u7A0B\u81EA\u5DF1\u662F\u53EF\u4EE5\u91CD\u590D\u83B7\u53D6\u6B64\u9501\u7684\uFF08state\u4F1A\u7D2F\u52A0\uFF09\uFF0C\u8FD9\u5C31\u662F\u53EF\u91CD\u5165\u7684\u6982\u5FF5\u3002\u4F46\u8981\u6CE8\u610F\uFF0C<strong>\u83B7\u53D6\u591A\u5C11\u6B21\u5C31\u8981\u91CA\u653E\u591A\u5C11\u6B21\uFF0C\u8FD9\u6837\u624D\u80FD\u4FDD\u8BC1state\u662F\u80FD\u56DE\u5230\u96F6\u6001\u7684\u3002</strong></p><blockquote><p>\u66F4\u591A\u7EC6\u8282\u7A0D\u540E\u8865\u5145\u2026</p></blockquote><br><h5 id="reentrantlock" tabindex="-1">ReentrantLock <a class="header-anchor" href="#reentrantlock" aria-hidden="true">#</a></h5><br><p><strong><u>1 - \u53EF\u91CD\u5165\u9501\uFF1F</u></strong></p><p>1\u3001ReentrantLock \u53EF\u91CD\u5165</p><p>\u4EE5 ReentrantLock \u4E3A\u4F8B\uFF0Cstate \u521D\u59CB\u5316\u4E3A0\uFF0C\u8868\u793A\u672A\u9501\u5B9A\u72B6\u6001\u3002A \u7EBF\u7A0B<code>lock()</code>\u65F6\uFF0C\u4F1A\u8C03\u7528<code>tryAcquire()</code>\u72EC\u5360\u8BE5\u9501\u5E76\u5C06 state+1\u3002\u6B64\u540E\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u518D<code>tryAcquire()</code>\u65F6\u5C31\u4F1A\u5931\u8D25\uFF0C\u76F4\u5230A\u7EBF\u7A0B<code>unlock()</code>\u5230 state \u4E3A0\uFF08\u5373\u91CA\u653E\u9501\uFF09\u4E3A\u6B62\uFF0C\u5176\u5B83\u7EBF\u7A0B\u624D\u6709\u673A\u4F1A\u83B7\u53D6\u8BE5\u9501\u3002\u5F53\u7136\uFF0C\u91CA\u653E\u9501\u4E4B\u524D\uFF0CA\u7EBF\u7A0B\u81EA\u5DF1\u662F\u53EF\u4EE5\u91CD\u590D\u83B7\u53D6\u6B64\u9501\u7684\uFF08state \u4F1A\u7D2F\u52A0\uFF09\uFF0C\u8FD9\u5C31\u662F\u53EF\u91CD\u5165\u7684\u6982\u5FF5\u3002\u4F46\u8981\u6CE8\u610F\uFF0C<strong>\u83B7\u53D6\u591A\u5C11\u6B21\u5C31\u8981\u91CA\u653E\u591A\u5C11\u6B21\uFF0C\u8FD9\u6837\u624D\u80FD\u4FDD\u8BC1state\u662F\u80FD\u56DE\u5230\u96F6\u6001\u7684\u3002</strong></p><p>2\u3001synchronized \u53EF\u91CD\u5165</p><blockquote><p>\u8BE6\u89C1 synchronized \u8BE6\u89E3</p></blockquote><br><p><strong><u>2 - ReentrantLock \u7684\u5185\u90E8\u7ED3\u6784</u></strong></p><p>ReentrantLock \u603B\u5171\u6709\u4E09\u4E2A\u5185\u90E8\u7C7B\uFF1A<code>Sync</code>\u3001<code>NonfairSync</code>\u548C<code>FairSync</code>\u3002\u4E09\u4E2A\u5185\u90E8\u7C7B\u7684\u5173\u7CFB\u5982\u4E0B\uFF1A</p><p><img src="`+A+`" alt=""></p><br><p><strong>1\u3001Sync \u7C7B</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">AbstractQueuedSynchronizer</span></span><span class="token punctuation">;</span>

<span class="token comment">/**
 * Base of synchronization control for this lock. Subclassed
 * into fair and nonfair versions below. Uses AQS state to
 * represent the number of holds on the lock.
 */</span>
<span class="token comment">// \u7EE7\u627F\u81EA AbstractQueuedSynchronizer</span>
<span class="token keyword">abstract</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Sync</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5179523762034025860L</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     * lock\uFF0C\u7559\u7ED9\u5B50\u7C7B\uFF1AFairSync\u548CNonfairSync\u5B9E\u73B0
     */</span>
    <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     * \u975E\u516C\u5E73\u65B9\u5F0F\u5C1D\u8BD5\u83B7\u53D6\u9501
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">nonfairTryAcquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> acquires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u7EBF\u7A0B</span>
        <span class="token keyword">final</span> <span class="token class-name">Thread</span> current <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u9501\u7684\u72B6\u6001</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token comment">// state \u4E3A0\uFF0C\u8BF4\u660E\u5F53\u524D\u9501\u5904\u4E8E\u7A7A\u95F2\u72B6\u6001</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u4F7F\u7528CAS \u66F4\u65B0state \u503C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> acquires<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token comment">// \u8BBE\u7F6E\u72EC\u5360\u9501\u7684\u6301\u6709\u8005\u4E3A\u5F53\u524D\u7EBF\u7A0B</span>
                <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
          <span class="token comment">// state \u4E0D\u4E3A0\uFF0C\u68C0\u67E5\u72EC\u5360\u9501\u7684\u6301\u6709\u8005\u662F\u5426\u4E3A\u5F53\u524D\u7EBF\u7A0B</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u9501\u7684\u6301\u6709\u8005\u4E3A\u5F53\u524D\u7EBF\u7A0B\uFF0CnextState \u4E5F\u5373nextc= \u5F53\u524Dstate + acquires</span>
              <span class="token comment">// \u589E\u52A0\u91CD\u5165\u6B21\u6570</span>
            <span class="token keyword">int</span> nextc <span class="token operator">=</span> c <span class="token operator">+</span> acquires<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nextc <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// overflow</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Maximum lock count exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token comment">// \u8BBE\u7F6Estate \u503C</span>
            <span class="token function">setState</span><span class="token punctuation">(</span>nextc<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
          <span class="token comment">// \u9501\u7684\u6301\u6709\u8005\u975E\u5F53\u524D\u7EBF\u7A0B\uFF0C\u8FD4\u56DEfalse</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

      <span class="token comment">// \u5C1D\u8BD5\u91CA\u653E\u9501</span>
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryRelease</span><span class="token punctuation">(</span><span class="token keyword">int</span> releases<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u83B7\u53D6\u5F53\u524Dstate\uFF0C c = state - relase\u8868\u793A\u91CA\u653E\u9501\u4E4B\u540E\u7684\u72B6\u6001</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> releases<span class="token punctuation">;</span>
          <span class="token comment">// \u9501\u7684\u6301\u6709\u8005\u975E\u5F53\u524D\u5BF9\u8C61\uFF0C\u629B\u51FA\u5F02\u5E38</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// \u82E5\u9501\u91CA\u653E\u4E4B\u540E\u7684\u72B6\u6001\u4E3A0\uFF0C\u8BF4\u660E\u91CA\u653E\u6210\u529F</span>
        <span class="token keyword">boolean</span> free <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            free <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
              <span class="token comment">// \u8BBE\u7F6E\u9501\u7684\u6301\u6709\u8005\u4E3Anull</span>
            <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
          <span class="token comment">// \u8BBE\u7F6Estate\u4E3A0</span>
        <span class="token function">setState</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> free<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

      <span class="token comment">// \u5224\u65AD\u5F53\u524D\u7EBF\u7A0B\u662F\u5426\u6301\u6709\u72EC\u5360\u9501</span>
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// While we must in general read state before owner,</span>
        <span class="token comment">// we don&#39;t need to do so to check if current thread is owner</span>
        <span class="token keyword">return</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

      <span class="token comment">// \u65B0\u5EFACondition\u5BF9\u8C61</span>
    <span class="token keyword">final</span> <span class="token class-name">AbstractQueuedSynchronizer<span class="token punctuation">.</span>ConditionObject</span> <span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConditionObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Methods relayed from outer class</span>

      <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u9501\u7684\u6301\u6709\u8005</span>
    <span class="token keyword">final</span> <span class="token class-name">Thread</span> <span class="token function">getOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

      <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u9501\u88AB\u91CD\u5165\u7684\u6B21\u6570</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getHoldCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

      <span class="token comment">// \u68C0\u67E5\u9501\u8D44\u6E90\u662F\u5426\u5DF2\u88AB\u5360\u7528</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">isLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * \u81EA\u5B9A\u4E49\u53CD\u5E8F\u5217\u5316\u903B\u8F91
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectInputStream</span> s<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        s<span class="token punctuation">.</span><span class="token function">defaultReadObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// reset to unlocked state</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br></div></div><br><p><strong>2\u3001NonfairSync \u7C7B</strong></p><blockquote><p>NonfairSync \u7EE7\u627F\u81EA Sync \u7C7B\uFF0C\u8868\u793A\u91C7\u7528\u975E\u516C\u5E73\u7B56\u7565\u83B7\u53D6\u9501\uFF0C\u5176\u5B9E\u73B0\u4E86 Sync \u7C7B\u4E2D\u62BD\u8C61\u7684 lock \u65B9\u6CD5</p></blockquote><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u975E\u516C\u5E73\u9501</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">NonfairSync</span> <span class="token keyword">extends</span> <span class="token class-name">Sync</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">7316153563782823691L</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     * \u83B7\u53D6\u9501
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u4E00\u8FDB\u5165\u65B9\u6CD5\u5C31\u7ACB\u5373\u8BBE\u7F6Estate\u4E3A1\uFF0C\u5C06\u6301\u6709\u9501\u7684\u7EBF\u7A0B\u8BBE\u7F6E\u6210\u5F53\u524D\u7EBF\u7A0B</span>
          <span class="token comment">// \u82E5\u83B7\u53D6\u5931\u8D25\u5219\u81EA\u65CB\u7B49\u5F85</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> acquires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">nonfairTryAcquire</span><span class="token punctuation">(</span>acquires<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><br><p><strong>3\u3001FairSync \u7C7B</strong></p><blockquote><p>\u516C\u5E73\u9501</p></blockquote><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u516C\u5E73\u9501</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">FairSync</span> <span class="token keyword">extends</span> <span class="token class-name">Sync</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3000897897090466540L</span><span class="token punctuation">;</span>

    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u8FDB\u5165\u65B9\u6CD5\u5C31\u5728\u5C06\u5F53\u524D\u83B7\u53D6\u9501\u7684\u8BF7\u6C42\u8BBE\u7F6E\u5230\u7B49\u5F85\u961F\u5217\u4E2D\uFF0C\u7B49\u5F85\u83B7\u53D6\u9501</span>
        <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * \u5C1D\u8BD5\u53D6\u9501\u516C\u5E73\u83B7
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> acquires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u7EBF\u7A0B</span>
        <span class="token keyword">final</span> <span class="token class-name">Thread</span> current <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// \u83B7\u53D6state</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// state\u4E3A0\uFF0C\u5F53\u524D\u9501\u8D44\u6E90\u7A7A\u95F2\uFF0C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// hasQueuedPredecessors \u68C0\u67E5\u662F\u5426\u6709\u6B63\u5728\u7B49\u5F85\u83B7\u53D6\u516C\u5E73\u9501\u8D44\u6E90\u7684\u961F\u5217</span>
              <span class="token comment">// \u82E5\u6CA1\u6709\u7B49\u5F85\u961F\u5217\uFF0C\u5219\u83B7\u53D6\u516C\u5E73\u9501\u6210\u529F\uFF0CCAS\u66F4\u65B0state \u503C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasQueuedPredecessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> acquires<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token comment">// state \u66F4\u65B0\u6210\u529F\uFF0C\u5C06\u72EC\u5360\u9501\u6301\u6709\u8005\u8BBE\u7F6E\u6210\u5F53\u524D\u7EBF\u7A0B</span>
                <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
          <span class="token comment">// state \u4E0D\u4E3A0\uFF0C\u5224\u65AD\u6301\u6709\u72EC\u5360\u9501\u8D44\u6E90\u7684\u7EBF\u7A0B\u662F\u5426\u662F\u5F53\u524D\u7EBF\u7A0B</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u589E\u52A0\u91CD\u5165\u6B21\u6570</span>
            <span class="token keyword">int</span> nextc <span class="token operator">=</span> c <span class="token operator">+</span> acquires<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nextc <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Maximum lock count exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token comment">// \u66F4\u65B0state\u7684\u503C</span>
            <span class="token function">setState</span><span class="token punctuation">(</span>nextc<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
          <span class="token comment">// state\u4E0D\u4E3A0\uFF0C\u5E76\u4E14\u9501\u8D44\u6E90\u6301\u6709\u8005\u975E\u5F53\u524D\u7EBF\u7A0B</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><br><p><strong><code>FairSync#lock </code>\u65B9\u6CD5\u6267\u884C\u6D41\u7A0B\uFF1A</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// 1\u3001\u8C03\u7528 AbstractQueuedSynchronizer#acquire</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 2\u3001\u8C03\u7528 FairSync#tryAcquire \u5C1D\u8BD5\u83B7\u53D6\u9501</span>
  <span class="token comment">// 3\u3001\u82E5\u662F tryAcquire \u4E0D\u6210\u529F\uFF0C\u8C03\u7528AbstractQueuedSynchronizer#acquireQueued \u83B7\u53D6\u7B49\u5F85\u961F\u5217</span>
  <span class="token comment">// 4\u3001\u5C06\u5F53\u524D\u8BF7\u6C42\u5305\u88C5\u6210 CLH Node \u8282\u70B9\u52A0\u5165\u7B49\u5F85\u961F\u5217</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      <span class="token function">acquireQueued</span><span class="token punctuation">(</span><span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span>EXCLUSIVE<span class="token punctuation">)</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span> mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A Node \u8282\u70B9</span>
  <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Try the fast path of enq; backup to full enq on failure</span>
  <span class="token class-name">Node</span> pred <span class="token operator">=</span> tail<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pred <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">.</span>prev <span class="token operator">=</span> pred<span class="token punctuation">;</span>
    <span class="token comment">// \u5C06 node \u63D2\u5165\u7B49\u5F85\u961F\u5217\u5C3E\u90E8</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetTail</span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      pred<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
      <span class="token keyword">return</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">enq</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> node<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">acquireQueued</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Node</span> node<span class="token punctuation">,</span> <span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">boolean</span> failed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> interrupted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">final</span> <span class="token class-name">Node</span> p <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">predecessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> head <span class="token operator">&amp;&amp;</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setHead</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// help GC</span>
        failed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> interrupted<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldParkAfterFailedAcquire</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> node<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
          <span class="token function">parkAndCheckInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        interrupted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
      <span class="token function">cancelAcquire</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><br><p><strong><u>3 - ReentrantLock \u5B9E\u73B0\u7EC6\u8282</u></strong></p><p><strong>1\u3001\u7C7B\u7684\u64CD\u4F5C</strong></p><p>ReentrantLock \u7C7B\u7684 Sync \u975E\u5E38\u91CD\u8981\uFF0C\u5BF9 ReentrantLock \u7C7B\u7684\u64CD\u4F5C\u5927\u90E8\u5206\u90FD\u76F4\u63A5\u8F6C\u5316\u4E3A\u5BF9 Sync \u548C AbstractQueuedSynchronizer \u7C7B\u7684\u64CD\u4F5C\u3002\u5982\u5C06 ReentrantLock \u7684 lock \u51FD\u6570\u8F6C\u5316\u4E3A\u5BF9 Sync \u7684 lock \u51FD\u6570\u7684\u8C03\u7528\uFF0C\u800C\u5177\u4F53\u4F1A\u6839\u636E\u91C7\u7528\u7684\u7B56\u7565\uFF08\u5982\u516C\u5E73\u7B56\u7565\u6216\u8005\u975E\u516C\u5E73\u7B56\u7565\uFF09\u7684\u4E0D\u540C\u800C\u8C03\u7528\u5230 Sync \u7684\u4E0D\u540C\u5B50\u7C7B\u3002</p><p><strong>2\u3001\u7C7B\u7684\u6784\u9020\u51FD\u6570</strong></p><p>\u65E0\u53C2\u6784\u9020\u51FD\u6570\u9ED8\u8BA4\u521B\u5EFA\u7684\u662F NonfairSync\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5E26\u4E00\u4E2A\u53C2\u6570\u7684<code>ReentrantLock(boolean fair)</code>\u578B\u6784\u9020\u51FD\u6570\u51B3\u5B9A\u521B\u5EFA\u7684\u662F\u516C\u5E73\u6216\u8005\u975E\u516C\u5E73\u9501\u3002</p><br><h5 id="reentrantreadwritelock" tabindex="-1">ReentrantReadWriteLock <a class="header-anchor" href="#reentrantreadwritelock" aria-hidden="true">#</a></h5><p><strong><u>1 - ReentrantReadWriteLock \u5185\u90E8\u7ED3\u6784</u></strong></p><p>\u76F8\u6BD4\u4E8E ReentrantLock\uFF0CReentrantReadWriteLock \u6709\u4E94\u4E2A\u5185\u90E8\u7C7B\u3002\u9664\u4E86 Sync\u3001NonfairSync\u3001FairSync \u4E4B\u5916\uFF0C\u8FD8\u591A\u4E86 <code>ReadLock</code>\u548C<code>WriteLock</code>\u4E24\u4E2A\u7C7B\u3002</p><p><img src="`+T+'" alt=""></p><blockquote><p>\u7A0D\u540E\u8FDB\u884C\u8865\u5145\u3002\u3002\u3002</p></blockquote><br><h4 id="\u5E76\u53D1\u96C6\u5408" tabindex="-1">\u5E76\u53D1\u96C6\u5408 <a class="header-anchor" href="#\u5E76\u53D1\u96C6\u5408" aria-hidden="true">#</a></h4><p><strong>\u7C7B\u7ED3\u6784</strong></p><p><img src="'+S+`" alt=""></p><br><h5 id="concurrenthashmap" tabindex="-1">ConcurrentHashMap <a class="header-anchor" href="#concurrenthashmap" aria-hidden="true">#</a></h5><blockquote><p>JDK 1.7 \u4E4B\u524D\u7684 ConcurrentHashMap \u4F7F\u7528\u5206\u6BB5\u9501\u673A\u5236\u5B9E\u73B0\uFF0CJDK 1.8 \u5219\u4F7F\u7528\u6570\u7EC4+\u94FE\u8868+\u7EA2\u9ED1\u6811\u6570\u636E\u7ED3\u6784\u548C CAS \u539F\u5B50\u64CD\u4F5C\u5B9E\u73B0 ConcurrentHashMap</p></blockquote><br><p><strong><u>1 - \u4E3A\u4F55 HashTable \u6162\uFF1F</u></strong></p><p>Hashtable \u4E4B\u6240\u4EE5\u6548\u7387\u4F4E\u4E0B\u4E3B\u8981\u662F\u56E0\u4E3A\u5176\u5B9E\u73B0\u4F7F\u7528\u4E86 synchronized \u5173\u952E\u5B57\u5BF9 put() \u7B49\u64CD\u4F5C\u8FDB\u884C\u52A0\u9501\uFF0C\u800C synchronized \u5173\u952E\u5B57\u52A0\u9501\u662F<strong>\u5BF9\u6574\u4E2A\u5BF9\u8C61\u8FDB\u884C\u52A0\u9501</strong>\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5728\u8FDB\u884C put() \u7B49\u4FEE\u6539 HashTable \u7684\u64CD\u4F5C\u65F6\uFF0C\u9501\u4F4F\u4E86\u6574\u4E2A HashTable\uFF0C\u4ECE\u800C\u4F7F\u5F97\u5176\u8868\u73B0\u7684\u6548\u7387\u4F4E\u4E0B\u3002</p><br><p><strong><u>2 - JDK 1.7 \u53CA\u4E4B\u524D\u7684\u5B9E\u73B0\uFF1F</u></strong></p><p>\u5728 JDK1.5 ~ 1.7 \u7248\u672C\uFF0CJava \u4F7F\u7528\u4E86\u5206\u6BB5\u9501\u673A\u5236\u5B9E\u73B0 ConcurrentHashMap\u3002</p><p>\u5373 ConcurrentHashMap \u5728\u5BF9\u8C61\u4E2D\u4FDD\u5B58\u4E86\u4E00\u4E2A Segment \u6570\u7EC4\uFF0C\u5373\u5C06\u6574\u4E2A Hash \u8868\u5212\u5206\u4E3A\u591A\u4E2A\u5206\u6BB5\uFF1B\u800C\u6BCF\u4E2A Segment \u5143\u7D20\uFF0C\u5373\u6BCF\u4E2A\u5206\u6BB5\u5219\u7C7B\u4F3C\u4E8E\u4E00\u4E2A Hashtable\uFF1B\u8FD9\u6837\uFF0C\u5728\u6267\u884C put() \u64CD\u4F5C\u65F6\u9996\u5148\u6839\u636E hash \u7B97\u6CD5\u5B9A\u4F4D\u5230\u5143\u7D20\u5C5E\u4E8E\u54EA\u4E2A Segment\uFF0C\u7136\u540E\u5BF9\u8BE5 Segment \u52A0\u9501\u5373\u53EF\u3002\u56E0\u6B64\uFF0CConcurrentHashMap\u5728\u591A\u7EBF\u7A0B\u5E76\u53D1\u7F16\u7A0B\u4E2D\u53EF\u662F\u5B9E\u73B0\u591A\u7EBF\u7A0Bput\u64CD\u4F5C\u3002\u63A5\u4E0B\u6765\u5206\u6790JDK1.7\u7248\u672C\u4E2DConcurrentHashMap\u7684\u5B9E\u73B0\u539F\u7406\u3002</p><p><strong><u>3 - JDK 1.8 \u7684\u5B9E\u73B0</u></strong></p><p><strong>1\u3001\u6570\u636E\u7ED3\u6784</strong></p><p>\u5728 JDK 1.7 \u4E4B\u524D\uFF0CConcurrentHashMap \u662F\u901A\u8FC7\u5206\u6BB5\u9501\u673A\u5236\u6765\u5B9E\u73B0\u7684\uFF0C\u6240\u4EE5\u5176\u6700\u5927\u5E76\u53D1\u5EA6\u53D7 Segment \u7684\u4E2A\u6570\u9650\u5236\u3002\u5728 JDK 1.8 \u4E2D\uFF0CConcurrentHashMap \u7684\u5B9E\u73B0\u539F\u7406\u6452\u5F03\u4E86\u8FD9\u79CD\u8BBE\u8BA1\uFF0C\u800C\u662F\u9009\u62E9\u4E86\u4E0E HashMap \u7C7B\u4F3C\u7684\u6570\u7EC4+\u94FE\u8868+\u7EA2\u9ED1\u6811\u7684\u65B9\u5F0F\u5B9E\u73B0\uFF0C\u800C\u52A0\u9501\u5219\u91C7\u7528 CAS \u548C synchronized \u5B9E\u73B0\u3002</p><p><strong>2\u3001\u539F\u7406\u5206\u6790</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">7249069246763182397L</span><span class="token punctuation">;</span>

    <span class="token comment">/* ---------------- Constants -------------- */</span>

      <span class="token comment">// \u6700\u5927\u5BB9\u91CF\u4E3A2^30</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAXIMUM_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     * \u9ED8\u8BA4\u5BB9\u91CF\u4E3A16.  Must be a power of 2
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_CAPACITY <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     * \u9ED8\u8BA4\u8D1F\u8F7D\u56E0\u5B50
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> LOAD_FACTOR <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     * \u94FE\u8868 treeify \u7684\u9608\u503C\uFF0C\u4E00\u65E6\u94FE\u8868\u957F\u5EA6\u5927\u4E8E\u7B49\u4E8E8\uFF0C\u8FDB\u884C treeify \u64CD\u4F5C
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TREEIFY_THRESHOLD <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     * \u5728\u8FDB\u884C resize \u64CD\u4F5C\u65F6\uFF0C\u5F53\u6811\u7684\u8282\u70B9\u5C0F\u4E8E\u7B49\u4E8E6\uFF0C\u8FDB\u884Cuntreeify \u64CD\u4F5C
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UNTREEIFY_THRESHOLD <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     * \u5F53\u6570\u7EC4\u4E2D\u5BB9\u91CF\u5927\u4E8E\u7B49\u4E8E MIN_TREEIFY_CAPACITY \uFF0C\u5219\u8FDB\u884C treeifyBin \u64CD\u4F5C
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MIN_TREEIFY_CAPACITY <span class="token operator">=</span> <span class="token number">64</span><span class="token punctuation">;</span>


    <span class="token comment">/* ---------------- Nodes -------------- */</span>


    <span class="token comment">/**
     * Key-value entry.  This class is never exported out as a
     * user-mutable Map.Entry (i.e., one supporting setValue; see
     * MapEntry below), but can be used for read-only traversals used
     * in bulk tasks.  Subclasses of Node with a negative hash field
     * are special, and contain null keys and values (but are never
     * exported).  Otherwise, keys and vals are never null.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">V</span> val<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>

        <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> val<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>hash <span class="token operator">=</span> hash<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">K</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token punctuation">{</span> <span class="token keyword">return</span> key<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">{</span> <span class="token keyword">return</span> val<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span> <span class="token keyword">return</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">^</span> val<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> key <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> val<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Object</span> k<span class="token punctuation">,</span> v<span class="token punctuation">,</span> u<span class="token punctuation">;</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span>k <span class="token operator">=</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span>v <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span>k <span class="token operator">==</span> key <span class="token operator">||</span> k<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token punctuation">(</span>u <span class="token operator">=</span> val<span class="token punctuation">)</span> <span class="token operator">||</span> v<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">/**
         * Virtualized support for map.get(); overridden in subclasses.
         */</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token class-name">Object</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">do</span> <span class="token punctuation">{</span>
                    <span class="token class-name">K</span> ek<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> h <span class="token operator">&amp;&amp;</span>
                        <span class="token punctuation">(</span><span class="token punctuation">(</span>ek <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> k <span class="token operator">||</span> <span class="token punctuation">(</span>ek <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> k<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">return</span> e<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* ---------------- Fields -------------- */</span>

    <span class="token comment">/**
     * \u5E95\u5C42\u5B58\u50A8\u6570\u636E\u7684Node\u6570\u7EC4\uFF0C\u5728\u7B2C\u4E00\u6B21\u521B\u5EFA\u524D\u91C7\u7528\u61D2\u52A0\u8F7D\u7B56\u7565\uFF0C\u5BB9\u91CF\u4E00\u76F4\u662F2\u7684n\u6B21\u5E42
     * The array of bins. Lazily initialized upon first insertion.
     * Size is always a power of two. Accessed directly by iterators.
     */</span>
    <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token punctuation">;</span>

    <span class="token comment">/**
     * \u7528\u6765\u63A7\u5236\u521D\u59CB\u5316\u548Cresize\u64CD\u4F5C
     * \u5982\u679C\u4E3A\u8D1F\uFF0C\u5219\u8868\u6B63\u5728\u521D\u59CB\u5316\u6216\u8C03\u6574\u5927\u5C0F\uFF1A-1 \u8868\u793A\u521D\u59CB\u5316\uFF0C\u5426\u5219 -\uFF081 + \u6D3B\u52A8\u8C03\u6574\u5927\u5C0F\u7EBF\u7A0B\u7684\u6570\u91CF\uFF09\u3002
     * \u5F53 table \u4E3A\u7A7A\u65F6\uFF0C\u4FDD\u5B58\u521B\u5EFA\u65F6\u4F7F\u7528\u7684\u521D\u59CB\u8868\u5927\u5C0F\uFF0C\u6216\u9ED8\u8BA4\u4E3A 0\u3002
     * \u521D\u59CB\u5316\u540E\uFF0C\u4FDD\u5B58\u4E0B\u4E00\u4E2A\u8981\u8C03\u6574\u8868\u683C\u5927\u5C0F\u7684\u5143\u7D20\u8BA1\u6570\u503C\u3002
     * Table initialization and resizing control.  When negative, the
     * table is being initialized or resized: -1 for initialization,
     * else -(1 + the number of active resizing threads).  Otherwise,
     * when table is null, holds the initial table size to use upon
     * creation, or 0 for default. After initialization, holds the
     * next element count value upon which to resize the table.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> sizeCtl<span class="token punctuation">;</span>


    <span class="token comment">/* ---------------- Public operations -------------- */</span>

    <span class="token comment">/**
     * Creates a new, empty map with the default initial table size (16).
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C initialCapacity \u5927\u4E8E\u7B49\u4E8E MAXIMUM_CAPACITY = 1 &lt;&lt; 30 \u7684 1/2\uFF0C\u53731 &lt;&lt; 29</span>
      <span class="token comment">// \u5219\u5C06\u521B\u5EFA\u7684\u5BB9\u91CF\u8BBE\u7F6E\u4E3A MAXIMUM_CAPACITY = 1 &lt;&lt; 30</span>
      <span class="token comment">// tableSizeFor(initialCapacity + (initialCapacity * 1/2) + 1 )</span>
      <span class="token comment">// \u5373 tableSizeFor( 1.5*initialCapacity + 1 )</span>
      <span class="token comment">// \u5982\u679C initialCapacity = 10 ===&gt; tableSizeFor(16)</span>
      <span class="token keyword">int</span> cap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>MAXIMUM_CAPACITY <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span>
                 MAXIMUM_CAPACITY <span class="token operator">:</span>
                 <span class="token function">tableSizeFor</span><span class="token punctuation">(</span>initialCapacity <span class="token operator">+</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>sizeCtl <span class="token operator">=</span> cap<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * \u8FD4\u56DE\u7ED9\u5B9A\u5BB9\u91CF\u76842\u6B21\u5E42
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> c <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token operator">?</span> MAXIMUM_CAPACITY <span class="token operator">:</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5F97\u5230key\u7684hash\u503C</span>
      <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token function">spread</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token comment">// 1\u3001\u7B2C\u4E00\u6B21\u521B\u5EFA table = null</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> table<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// f = null</span>
        <span class="token comment">// n = i = fh = 0</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> f<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fh<span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u662F\u7A7A\u6570\u7EC4\uFF0C\u6267\u884C\u521D\u59CB\u5316\u903B\u8F91\uFF0C\u5E76\u5B58\u503C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
          <span class="token comment">// 2\u3001\u7B2C\u4E00\u6B21\u6267\u884Cput \u65B9\u6CD5\uFF0C\u521D\u59CB\u5316\u5E95\u5C42table\uFF0C\u89C1\u4E0B\u65B9initTable()</span>
          tab <span class="token operator">=</span> <span class="token function">initTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u627E\u8BE5 hash \u503C\u5BF9\u5E94\u7684\u6570\u7EC4\u4E0B\u6807\uFF0C\u5F97\u5230\u7B2C\u4E00\u4E2A\u8282\u70B9 f</span>
        <span class="token comment">// \u5982\u679C\u6570\u7EC4\u8BE5\u4F4D\u7F6E\u4E3A\u7A7A</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>f <span class="token operator">=</span> <span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u7528\u4E00\u6B21 CAS \u64CD\u4F5C\u5C06\u8FD9\u4E2A\u65B0\u503C\u653E\u5165\u5176\u4E2D\uFF0C\u8FD9\u4E2A put \u64CD\u4F5C\u5DEE\u4E0D\u591A\u5C31\u7ED3\u675F\u4E86\uFF0C\u53EF\u4EE5\u62C9\u5230\u6700\u540E\u9762\u4E86</span>
          <span class="token comment">// \u5982\u679C CAS \u64CD\u4F5C\u5931\u8D25\uFF0C\u90A3\u5C31\u662F\u6709\u5E76\u53D1\u64CD\u4F5C\uFF0C\u8FDB\u5230\u4E0B\u4E00\u4E2A\u5FAA\u73AF\u5C31\u597D\u4E86</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
                       <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>                   <span class="token comment">// no lock when adding to empty bin</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// MOVED = -1\uFF0C\u8868\u793A\u9700\u8981\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fh <span class="token operator">=</span> f<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> MOVED<span class="token punctuation">)</span>
          <span class="token comment">// \u6269\u5BB9\u65F6\u5E2E\u52A9\u6570\u636E\u8FC1\u79FB</span>
          tab <span class="token operator">=</span> <span class="token function">helpTransfer</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u975E\u7A7A\u6570\u7EC4\uFF0C\u5E76\u4E14 f \u662F\u8BE5\u4F4D\u7F6E\u7684\u5934\u7ED3\u70B9</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token class-name">V</span> oldVal <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
          <span class="token comment">// \u83B7\u53D6\u6570\u7EC4\u8BE5\u4F4D\u7F6E\u7684\u5934\u7ED3\u70B9\u7684\u76D1\u89C6\u5668\u9501</span>
          <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">==</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u5934\u7ED3\u70B9\u7684 hash \u503C\u5927\u4E8E 0\uFF0C\u8BF4\u660E\u662F\u94FE\u8868</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>fh <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// binCount \u7528\u4E8E\u7D2F\u52A0\uFF0C\u8BB0\u5F55\u94FE\u8868\u7684\u957F\u5EA6</span>
                binCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token comment">// \u904D\u5386\u94FE\u8868</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> f<span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token class-name">K</span> ek<span class="token punctuation">;</span>
                  <span class="token comment">// \u5982\u679C\u53D1\u73B0\u4E86&quot;\u76F8\u7B49&quot;\u7684 key\uFF0C\u5224\u65AD\u662F\u5426\u8981\u8FDB\u884C\u503C\u8986\u76D6\uFF0C\u7136\u540E\u4E5F\u5C31\u53EF\u4EE5 break \u4E86</span>
                  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                      <span class="token punctuation">(</span><span class="token punctuation">(</span>ek <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span>
                       <span class="token punctuation">(</span>ek <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    oldVal <span class="token operator">=</span> e<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span>
                      e<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
                  <span class="token comment">// \u5230\u4E86\u94FE\u8868\u7684\u6700\u672B\u7AEF\uFF0C\u5C06\u8FD9\u4E2A\u65B0\u503C\u653E\u5230\u94FE\u8868\u7684\u6700\u540E\u9762</span>
                  <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pred <span class="token operator">=</span> e<span class="token punctuation">;</span>
                  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    pred<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span>
                                              value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
              <span class="token comment">// \u5982\u679C\u662F\u6811\u7ED3\u6784</span>
              <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">TreeBin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span>
                binCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
                <span class="token comment">// \u8C03\u7528\u7EA2\u9ED1\u6811\u7684\u63D2\u503C\u65B9\u6CD5\u63D2\u5165\u65B0\u8282\u70B9</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span>
                                                      value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  oldVal <span class="token operator">=</span> p<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span>
                    p<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5224\u65AD\u662F\u5426\u8981\u5C06\u94FE\u8868\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u4E34\u754C\u503C\u548C HashMap \u4E00\u6837\uFF0C\u4E5F\u662F 8</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD<span class="token punctuation">)</span>
              <span class="token comment">// \u8FD9\u4E2A\u65B9\u6CD5\u548C HashMap \u4E2D\u7A0D\u5FAE\u6709\u4E00\u70B9\u70B9\u4E0D\u540C\uFF0C\u90A3\u5C31\u662F\u5B83\u4E0D\u662F\u4E00\u5B9A\u4F1A\u8FDB\u884C\u7EA2\u9ED1\u6811\u8F6C\u6362</span>
              <span class="token comment">// \u5982\u679C\u5F53\u524D\u6570\u7EC4\u7684\u957F\u5EA6\u5C0F\u4E8E 64\uFF0C\u90A3\u4E48\u4F1A\u9009\u62E9\u8FDB\u884C\u6570\u7EC4\u6269\u5BB9\uFF0C\u800C\u4E0D\u662F\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811</span>
              <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVal <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
              <span class="token keyword">return</span> oldVal<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token function">addCount</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">,</span> binCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * \u4F7F\u7528 sizeCtl \u521D\u59CB\u5316\u5E95\u5C42\u6570\u636E\u5B58\u50A8\u7684table\u6570\u7EC4
     * Initializes table, using the size recorded in sizeCtl.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">initTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token keyword">int</span> sc<span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> tab<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// sizeCtl \u5C0F\u4E8E 0\uFF0C\u4E00\u76F4\u81EA\u65CB</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sc <span class="token operator">=</span> sizeCtl<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
          <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// lost initialization race; just spin</span>
        <span class="token comment">// U = Unsafe</span>
        <span class="token comment">// valueOffset\uFF1AvalueOffset</span>
        <span class="token comment">// expect\uFF1Asc</span>
        <span class="token comment">// update\uFF1A -1</span>
        <span class="token comment">// \u4F7F\u7528CAS\u64CD\u4F5C\u5C06 sc \u66F4\u65B0\u4E3A-1\uFF0C\u8868\u793A\u6B63\u5728\u8FDB\u884C\u521D\u59CB\u5316\u64CD\u4F5C</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// tab\u4E3Anull\uFF0C\u5E76\u4E14tab.length = 0</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> tab<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u5982\u679C\u4F7F\u7528\u7684\u662F\u6709\u53C2\u6784\u9020\u5668\u8FDB\u884C\u5B9E\u4F8B\u5316\uFF0C\u5BB9\u91CF n=sc\uFF0C\u5426\u5219 n=DEFAULT_CAPACITY=16</span>
              <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token punctuation">(</span>sc <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> sc <span class="token operator">:</span> DEFAULT_CAPACITY<span class="token punctuation">;</span>
              <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
              <span class="token comment">// \u521B\u5EFA\u957F\u5EA6\u4E3An\u7684Node\u6570\u7EC4</span>
              <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
              table <span class="token operator">=</span> tab <span class="token operator">=</span> nt<span class="token punctuation">;</span>
              <span class="token comment">// sc = n - n * 1/2 = n * (1 - 1/2) = 1/2 * n</span>
              sc <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            sizeCtl <span class="token operator">=</span> sc<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> tab<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token comment">/* ---------------- Conversion from/to TreeBins -------------- */</span>

    <span class="token comment">/**
     * Replaces all linked nodes in bin at given index unless table is
     * too small, in which case resizes instead.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">treeifyBin</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> b<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> sc<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// MIN_TREEIFY_CAPACITY \u4E3A 64</span>
        <span class="token comment">// \u5982\u679C\u6570\u7EC4\u957F\u5EA6\u5C0F\u4E8E 64 \u7684\u65F6\u5019\uFF0C\u5176\u5B9E\u4E5F\u5C31\u662F 32 \u6216\u8005 16 \u6216\u8005\u66F4\u5C0F\u7684\u65F6\u5019\uFF0C\u4F1A\u8FDB\u884C\u6570\u7EC4\u6269\u5BB9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&lt;</span> MIN_TREEIFY_CAPACITY<span class="token punctuation">)</span>
          <span class="token comment">// \u4F20\u5165 n * 2</span>
          <span class="token function">tryPresize</span><span class="token punctuation">(</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">=</span> <span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>hash <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">==</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hd <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> tl <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
              <span class="token comment">// \u904D\u5386\u94FE\u8868\uFF0C\u5EFA\u7ACB\u4E00\u9897\u7EA2\u9ED1\u6811</span>
              <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> b<span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span>
                  <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash<span class="token punctuation">,</span> e<span class="token punctuation">.</span>key<span class="token punctuation">,</span> e<span class="token punctuation">.</span>val<span class="token punctuation">,</span>
                                    <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>prev <span class="token operator">=</span> tl<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                  hd <span class="token operator">=</span> p<span class="token punctuation">;</span>
                <span class="token keyword">else</span>
                  tl<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
                tl <span class="token operator">=</span> p<span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              <span class="token comment">// \u5C06\u7EA2\u9ED1\u6811\u8BBE\u7F6E\u5230\u6570\u7EC4\u76F8\u5E94\u4F4D\u7F6E\u4E2D</span>
              <span class="token function">setTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> index<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Tries to presize table to accommodate the given number of elements.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">tryPresize</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// tableSizeFor\uFF08 1.5*size +1 \uFF09</span>
          <span class="token comment">// \u82E5size &gt;= 1/2 * MAXIMUM_CAPACITY\uFF0C\u6269\u5BB9\u81F3 MAXIMUM_CAPACITY</span>
          <span class="token comment">// \u5426\u5219 c = size \u7684 1.5 \u500D\uFF0C\u518D\u52A0 1\uFF0C\u518D\u5F80\u4E0A\u53D6\u6700\u8FD1\u7684 2 \u7684 n \u6B21\u65B9\u3002</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>MAXIMUM_CAPACITY <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> MAXIMUM_CAPACITY <span class="token operator">:</span>
            <span class="token function">tableSizeFor</span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sc<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sc <span class="token operator">=</span> sizeCtl<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> table<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                n <span class="token operator">=</span> <span class="token punctuation">(</span>sc <span class="token operator">&gt;</span> c<span class="token punctuation">)</span> <span class="token operator">?</span> sc <span class="token operator">:</span> c<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>table <span class="token operator">==</span> tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
                            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
                            table <span class="token operator">=</span> nt<span class="token punctuation">;</span>
                            sc <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        sizeCtl <span class="token operator">=</span> sc<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;=</span> sc <span class="token operator">||</span> n <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> table<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">resizeStamp</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sc <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nt<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sc <span class="token operator">&gt;&gt;&gt;</span> RESIZE_STAMP_SHIFT<span class="token punctuation">)</span> <span class="token operator">!=</span> rs <span class="token operator">||</span> sc <span class="token operator">==</span> rs <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">||</span>
                        sc <span class="token operator">==</span> rs <span class="token operator">+</span> MAX_RESIZERS <span class="token operator">||</span> <span class="token punctuation">(</span>nt <span class="token operator">=</span> nextTable<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
                        transferIndex <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span> sc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token function">transfer</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> nt<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span>
                                             <span class="token punctuation">(</span>rs <span class="token operator">&lt;&lt;</span> RESIZE_STAMP_SHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token function">transfer</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br><span class="line-number">320</span><br><span class="line-number">321</span><br><span class="line-number">322</span><br><span class="line-number">323</span><br><span class="line-number">324</span><br><span class="line-number">325</span><br><span class="line-number">326</span><br><span class="line-number">327</span><br><span class="line-number">328</span><br><span class="line-number">329</span><br><span class="line-number">330</span><br><span class="line-number">331</span><br><span class="line-number">332</span><br><span class="line-number">333</span><br><span class="line-number">334</span><br><span class="line-number">335</span><br><span class="line-number">336</span><br><span class="line-number">337</span><br><span class="line-number">338</span><br><span class="line-number">339</span><br><span class="line-number">340</span><br><span class="line-number">341</span><br><span class="line-number">342</span><br><span class="line-number">343</span><br><span class="line-number">344</span><br><span class="line-number">345</span><br><span class="line-number">346</span><br><span class="line-number">347</span><br><span class="line-number">348</span><br><span class="line-number">349</span><br><span class="line-number">350</span><br><span class="line-number">351</span><br><span class="line-number">352</span><br><span class="line-number">353</span><br><span class="line-number">354</span><br><span class="line-number">355</span><br><span class="line-number">356</span><br><span class="line-number">357</span><br><span class="line-number">358</span><br><span class="line-number">359</span><br><span class="line-number">360</span><br><span class="line-number">361</span><br><span class="line-number">362</span><br><span class="line-number">363</span><br><span class="line-number">364</span><br><span class="line-number">365</span><br><span class="line-number">366</span><br><span class="line-number">367</span><br><span class="line-number">368</span><br><span class="line-number">369</span><br></div></div><blockquote><p>\u66F4\u591A\u7EC6\u8282\u7A0D\u540E\u8865\u5145\u3002\u3002\u3002</p></blockquote><br><h5 id="copyonwritearraylist" tabindex="-1">CopyOnWriteArrayList <a class="header-anchor" href="#copyonwritearraylist" aria-hidden="true">#</a></h5><blockquote><p>CopyOnWrite\uFF0C\u5199\u65F6\u590D\u5236\u5BB9\u5668\u3002\u53EF\u4EE5\u5BF9 CopyOnWrite \u5BB9\u5668\u8FDB\u884C\u5E76\u53D1\u7684\u8BFB\uFF0C\u800C\u4E0D\u9700\u8981\u52A0\u9501\u3002\u5B9E\u73B0\u65B9\u6CD5\u4E0E ArrayList \u5DEE\u4E0D\u591A</p></blockquote><br><p><strong><u>1 - \u5B9E\u73B0\u7EC6\u8282</u></strong></p><p>1\u3001\u5E95\u5C42\u5BB9\u5668\u4E3A<code>Object[]</code>\uFF0C\u5411\u4E00\u4E2A\u5BB9\u5668\u4E2D\u6DFB\u52A0\u5143\u7D20\u65F6\uFF0C\u4E0D\u76F4\u63A5\u5F80\u5F53\u524D\u5BB9\u5668\u6DFB\u52A0\uFF0C\u800C\u662F\u4F7F\u7528<code>Arrays.copyOf()</code>\u5148\u5BF9\u5F53\u524D\u5BB9\u5668\u8FDB\u884C\u590D\u5236\uFF0C\u590D\u5236\u51FA\u4E00\u4E2A\u65B0\u7684\u5BB9\u5668<code>Object[] newElements</code>\uFF0C\u7136\u540E\u5728\u65B0\u5BB9\u5668\u91CC\u6DFB\u52A0\u5143\u7D20\uFF0C\u6DFB\u52A0\u5B8C\u5143\u7D20\u4E4B\u540E\uFF0C\u5C06\u539F\u5BB9\u5668\u7684\u5F15\u7528\u6307\u5411\u65B0\u5BB9\u5668</p><p>2\u3001\u56E0\u4E3A\u5F53\u524D\u5BB9\u5668\u4E0D\u4F1A\u6DFB\u52A0\u4EFB\u4F55\u5143\u7D20,\u6240\u4EE5 CopyOnWrite \u4E5F\u662F\u4E00\u79CD\u8BFB\u5199\u5206\u79BB\u7684\u601D\u60F3\uFF0C\u8BFB\uFF08Object[] array\uFF09\u548C\u5199\uFF08Object[] newElements\uFF09\u662F\u4E0D\u540C\u7684\u5BB9\u5668</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">RandomAccess</span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>

    <span class="token comment">/** The lock protecting all mutators */</span>
    <span class="token keyword">final</span> <span class="token keyword">transient</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5E95\u5C42\u5BB9\u5668\u4E3A volatile \u4FEE\u9970\u7684 Object \u6570\u7EC4</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">;</span>

    <span class="token comment">/**
     * Sets the array.
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">setArray</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        array <span class="token operator">=</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

      <span class="token comment">// \u65E0\u53C2\u5B9E\u4F8B\u5316\u521B\u5EFA\u4E00\u4E2A\u957F\u5EA6\u4E3A0\u7684\u5E95\u5C42\u6570\u7EC4</span>
    <span class="token keyword">public</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Appends the specified element to the end of this list.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u83B7\u53D6\u5F53\u524D array \u7684\u503C\u4E0E array \u7684\u957F</span>
            <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> len <span class="token operator">=</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token comment">// \u4F7F\u7528 Arrays.copyOf \u590D\u5236\u51FA\u4E00\u4E2A\u65B0\u7684\u5BB9\u5668 newElements\uFF0C\u5E76\u4F7F\u7528\u65E7\u503C\u4E3A\u65B0\u5BB9\u5668\u8D4B\u503C</span>
              <span class="token comment">// Arrays.copyOf \u5E95\u5C42\u5B9E\u73B0\u662F\u4E00\u4E2A native \u65B9\u6CD5 System.arraycopy</span>
            <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newElements <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elements<span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            newElements<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token comment">// \u6DFB\u52A0\u5B8C\u6210\u4E4B\u540E\uFF0C\u6307\u5411\u65B0\u5BB9\u5668</span>
            <span class="token function">setArray</span><span class="token punctuation">(</span>newElements<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Gets the array.  Non-private so as to also be accessible
     * from CopyOnWriteArraySet class.
     */</span>
    <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> a<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5F97\u76CA\u4E8E\u5199\u65F6\u590D\u5236\uFF0C\u8BFB\u53D6\u7684\u65F6\u5019\u4E0D\u9700\u52A0\u9501</span>
    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><br><p><strong><u>2 - \u7F3A\u9677\u548C\u4F7F\u7528\u573A\u666F</u></strong></p><p><strong>1\u3001\u7F3A\u9677</strong></p><p>1\uFF09\u7531\u4E8E\u5199\u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u9700\u8981\u62F7\u8D1D\u6570\u7EC4\uFF0C\u4F1A\u6D88\u8017\u5185\u5B58\uFF0C\u5982\u679C\u539F\u6570\u7EC4\u7684\u5185\u5BB9\u6BD4\u8F83\u591A\u7684\u60C5\u51B5\u4E0B\uFF0C\u53EF\u80FD\u5BFC\u81F4 YGC \u6216 FGC\uFF1B</p><p>2\uFF09\u4E0D\u80FD\u7528\u4E8E\u5B9E\u65F6\u8BFB\u7684\u573A\u666F\uFF0C\u50CF\u62F7\u8D1D\u6570\u7EC4\u3001\u65B0\u589E\u5143\u7D20\u90FD\u9700\u8981\u65F6\u95F4\uFF0C\u6240\u4EE5\u8C03\u7528 set \u64CD\u4F5C\u540E\uFF0C\u8BFB\u53D6\u5230\u6570\u636E\u53EF\u80FD\u8FD8\u662F\u65E7\u7684\uFF0C\u867D\u7136 CopyOnWriteArrayList \u80FD\u505A\u5230\u6700\u7EC8\u4E00\u81F4\u6027\uFF0C\u4F46\u662F\u8FD8\u662F\u6CA1\u6CD5\u6EE1\u8DB3\u5B9E\u65F6\u6027\u8981\u6C42\u3002</p><p><strong>2\u3001\u4F7F\u7528\u573A\u666F</strong></p><p><strong>CopyOnWriteArrayList \u5408\u9002\u8BFB\u591A\u5199\u5C11\u7684\u573A\u666F</strong>\uFF0C\u4E0D\u8FC7\u8FD8\u662F\u9700\u8981\u8C28\u614E\u4F7F\u7528\uFF0C\u56E0\u4E3A\u8C01\u4E5F\u6CA1\u6CD5\u4FDD\u8BC1 CopyOnWriteArrayList \u5230\u5E95\u8981\u653E\u7F6E\u591A\u5C11\u6570\u636E\uFF0C\u4E07\u4E00\u6570\u636E\u8F83\u591A\uFF0C\u6BCF\u6B21 add/set \u90FD\u8981\u91CD\u65B0\u590D\u5236\u6570\u7EC4\uFF0C\u8FD9\u4E2A\u4EE3\u4EF7\u592A\u9AD8\u6602</p><br><p><strong><u>3 - \u4E0E Vector \u5BF9\u6BD4</u></strong></p><p>Vector \u5BF9\u5355\u72EC\u7684 add/remove \u7B49\u65B9\u6CD5\u90FD\u662F\u5728\u65B9\u6CD5\u4E0A\u52A0 synchronized\u3002\u5982\u679C\u4E00\u4E2A\u7EBF\u7A0B A \u8C03\u7528 size \u65F6\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B B \u6267\u884C\u4E86 remove\uFF0C\u6B64\u65F6 A \u83B7\u53D6\u5230\u7684 size \u7684\u503C\u5C31\u4E0D\u662F\u6700\u65B0\u7684\uFF0C\u7136\u540E\u7EBF\u7A0B A \u8C03\u7528 remove \u5C31\u4F1A\u8D8A\u754C\uFF08\u8FD9\u65F6\u5C31\u9700\u8981\u518D\u52A0\u4E00\u4E2A synchronized\uFF09\u3002\u8FD9\u6837\u5C31\u5BFC\u81F4\u6709\u4E86\u53CC\u91CD\u9501\uFF0C\u6548\u7387\u5927\u5927\u964D\u4F4E\u3002</p><p>\u800C CopyOnWriteArrayList \u7684 add/remove \u64CD\u4F5C\u4F7F\u7528\u7684\u662F lock\uFF0C\u64CD\u4F5C\u6BD4\u8F83\u7075\u6D3B\uFF0C\u5F71\u54CD\u7684\u8303\u56F4\u4E5F\u8F83\u5C0F\uFF1B\u6B64\u5916 CopyOnWriteArrayList \u8BFB\u5199\u6240\u6D89\u53CA\u7684\u5B58\u50A8\u5BB9\u5668\u662F\u4E0D\u540C\u7684\uFF0C\u53EF\u4EE5\u8FBE\u5230\u8BFB\u5199\u5206\u79BB\u7684\u64CD\u4F5C\u3002</p><br><h4 id="\u7EBF\u7A0B\u6C60-1" tabindex="-1">\u7EBF\u7A0B\u6C60 <a class="header-anchor" href="#\u7EBF\u7A0B\u6C60-1" aria-hidden="true">#</a></h4><p><strong>\u7C7B\u7ED3\u6784</strong></p><p><img src="`+M+'" alt=""></p><blockquote><p>\u7A0D\u540E\u8865\u5145\u3002\u3002\u3002</p></blockquote><h2 id="\u53C2\u8003" tabindex="-1">\u53C2\u8003 <a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a></h2><p><a href="https://pdai.tech/md/java/basic/java-basic-oop.html" target="_blank" rel="noopener noreferrer">pdai.tech</a></p><p><a href="https://blog.csdn.net/u010642004/article/details/50099913" target="_blank" rel="noopener noreferrer">java\u4E2Dboolean\u7C7B\u578B\u5360\u51E0\u4E2A\u5B57\u8282</a></p><p><a href="https://blog.csdn.net/weixin_45465895/article/details/106854581" target="_blank" rel="noopener noreferrer">\u4E00\u7BC7\u6587\u7AE0\u5E26\u4F60\u5F7B\u5E95\u641E\u61C2HashMap\u7684\u5B9E\u73B0\uFF0C\u518D\u4E5F\u4E0D\u7528\u62C5\u5FC3\u88AB\u6B3A\u8D1F\u3002</a></p><p><a href="https://www.cnblogs.com/skywang12345/p/3245399.html" target="_blank" rel="noopener noreferrer">\u7EA2\u9ED1\u6811(\u4E00)\u4E4B \u539F\u7406\u548C\u7B97\u6CD5\u8BE6\u7EC6\u4ECB\u7ECD - \u5982\u679C\u5929\u7A7A\u4E0D\u6B7B</a></p><p><a href="https://www.cnblogs.com/skipping/p/5454690.html" target="_blank" rel="noopener noreferrer">\u4E92\u65A5\u9501,\u81EA\u65CB\u9501\u4E0E\u81EA\u9002\u5E94\u81EA\u65CB\u9501 - skipping - \u535A\u5BA2\u56ED (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/weixin_44015043/article/details/104612824" target="_blank" rel="noopener noreferrer">\u9501\u7684\u4F18\u5316\uFF08\u81EA\u65CB\u9501\u3001\u81EA\u9002\u5E94\u81EA\u65CB\u9501\u3001\u9501\u6D88\u9664\u3001\u504F\u5411\u9501\u3001\u8F7B\u91CF\u7EA7\u9501\uFF09_Maycope\u7684\u535A\u5BA2-CSDN\u535A\u5BA2_\u81EA\u9002\u5E94\u81EA\u65CB\u9501</a></p><p><a href="https://blog.csdn.net/tongdanping/article/details/79647337" target="_blank" rel="noopener noreferrer">Java\u5E76\u53D1\u2014\u2014Synchronized\u5173\u952E\u5B57\u548C\u9501\u5347\u7EA7\uFF0C\u8BE6\u7EC6\u5206\u6790\u504F\u5411\u9501\u548C\u8F7B\u91CF\u7EA7\u9501\u7684\u5347\u7EA7_tongdanping\u7684\u535A\u5BA2-CSDN\u535A\u5BA2</a></p><p><a href="https://blog.csdn.net/lkforce/article/details/81128115" target="_blank" rel="noopener noreferrer">Java\u7684\u5BF9\u8C61\u5934\u548C\u5BF9\u8C61\u7EC4\u6210\u8BE6\u89E3_lkforce-CSDN\u535A\u5BA2_java\u5BF9\u8C61\u5934</a></p><p><a href="https://juejin.cn/post/7006895386103119908" target="_blank" rel="noopener noreferrer">Java\u5E76\u53D1\u4E4BAQS\u8BE6\u89E3 - \u6398\u91D1 (juejin.cn)</a></p>',932);function I(E,L,z,N,V,j){const n=e("Catalog");return o(),a("div",null,[p(n),q])}var D=s(x,[["render",I]]);export{O as __pageData,D as default};
