import{_ as e,o as a,c as o,Q as t}from"./chunks/framework.519d889f.js";const _=JSON.parse('{"title":"Java lang","description":"","frontmatter":{},"headers":[],"relativePath":"posts/be/Java/Java lang/Java lang.md","filePath":"posts/be/Java/Java lang/Java lang.md","lastUpdated":1699262313000}'),r={name:"posts/be/Java/Java lang/Java lang.md"},c=t('<h1 id="java-lang" tabindex="-1">Java lang <a class="header-anchor" href="#java-lang" aria-label="Permalink to &quot;Java lang&quot;">​</a></h1><blockquote><p>关于 <code>java.lang</code> 包中一些类的笔记</p></blockquote><h2 id="runtime" tabindex="-1">Runtime <a class="header-anchor" href="#runtime" aria-label="Permalink to &quot;Runtime&quot;">​</a></h2><p>每一个 Java 程序都有一个单实例的 Runtime 对象，它允许正在运行的 Java 程序能够获取到运行环境信息。</p><p>一些常用的方法如下：</p><ul><li><code>getRuntime()</code></li><li><code>exec(String command)</code></li><li><code>availableProcessors()</code></li></ul><br><h2 id="process" tabindex="-1">Process <a class="header-anchor" href="#process" aria-label="Permalink to &quot;Process&quot;">​</a></h2><p><code>ProcessBuilder.start()</code> 和 <code>Runtime.exec</code> 方法会创建一个本地进程，然后返回 Process 子类的一个实例，该实例可以用来控制进行并获取相关信息。</p><p>由于创建出来的子进程没有自己的终端或控制台，因此它的所有 IO 操作都是通过：</p><ul><li><code>getOutputStream()</code></li><li><code>getInputStream()</code></li><li><code>getErrorStream()</code></li></ul><p>这三个方法将 IO 流重定向到父进程的。</p><p>Input 和 Output 都是针对调用 Process 的父进程而言的。如果要获取 Process 子进程输出的数据，需要将 Process 进程的数据 Input 到父进程；如果要将数据输入到 Process 子进程，需要将父进程的数据 Output 到 Process 子进程。</p><p>想要获取 Process 子进程的输入数据父进程就可以调用 <code>getInputStream()</code> 方法。但是，Process 子进程的输出的错误信息只能从 <code>getErrorStream()</code> 获取到，<code>getInputStream()</code> 无法获取到错误信息。</p><p>所以在获取 Process 子进程输出信息的时候不能只调用 <code>getInputStream()</code> 还应该调用 <code>getErrorStream()</code> 配合查看输出的信息。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><h3 id="process-1" tabindex="-1">Process <a class="header-anchor" href="#process-1" aria-label="Permalink to &quot;Process&quot;">​</a></h3><ul><li><a href="https://zhuanlan.zhihu.com/p/44957705" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/44957705</a></li></ul>',18),s=[c];function l(n,d,i,p,u,h){return a(),o("div",null,s)}const g=e(r,[["render",l]]);export{_ as __pageData,g as default};
