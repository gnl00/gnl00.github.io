import{_ as s,c as a,b as p,a as e,r as t,o}from"./app.d8a09d34.js";var c="/assets/extends-problem.93b40783.png",l="/assets/exception-structure.431e9535.png";const w='{"title":"Java \u57FA\u7840\u5185\u5BB9","description":"","frontmatter":{"title":"Java \u57FA\u7840\u5185\u5BB9","date":"2021-10-26T00:00:00.000Z","update":"2023-02-20T00:00:00.000Z","categories":["java"],"tags":["Java"]},"headers":[{"level":2,"title":"\u6570\u636E\u7C7B\u578B","slug":"\u6570\u636E\u7C7B\u578B"},{"level":3,"title":"\u7F13\u51B2\u6C60","slug":"\u7F13\u51B2\u6C60"},{"level":3,"title":"\u8D4B\u503C\u8FD0\u7B97","slug":"\u8D4B\u503C\u8FD0\u7B97"},{"level":3,"title":"\u7C7B\u578B\u8F6C\u6362","slug":"\u7C7B\u578B\u8F6C\u6362"},{"level":3,"title":"\u8FD0\u7B97\u7B26","slug":"\u8FD0\u7B97\u7B26"},{"level":3,"title":"Boolean","slug":"boolean"},{"level":3,"title":"String","slug":"string"},{"level":3,"title":"Object","slug":"object"},{"level":3,"title":"\u6BD4\u8F83\u5668","slug":"\u6BD4\u8F83\u5668"},{"level":2,"title":"\u9762\u5411\u5BF9\u8C61","slug":"\u9762\u5411\u5BF9\u8C61"},{"level":3,"title":"\u4E09\u4E2A\u7279\u6027","slug":"\u4E09\u4E2A\u7279\u6027"},{"level":3,"title":"\u4E94\u4E2A\u57FA\u672C\u539F\u5219","slug":"\u4E94\u4E2A\u57FA\u672C\u539F\u5219"},{"level":3,"title":"\u8BBF\u95EE\u6743\u9650","slug":"\u8BBF\u95EE\u6743\u9650"},{"level":3,"title":"\u62BD\u8C61\u7C7B\u4E0E\u63A5\u53E3","slug":"\u62BD\u8C61\u7C7B\u4E0E\u63A5\u53E3"},{"level":2,"title":"\u5173\u952E\u5B57","slug":"\u5173\u952E\u5B57"},{"level":2,"title":"\u5E8F\u5217\u5316/\u53CD\u5E8F\u5217\u5316","slug":"\u5E8F\u5217\u5316-\u53CD\u5E8F\u5217\u5316"},{"level":3,"title":"\u5E8F\u5217\u5316","slug":"\u5E8F\u5217\u5316"},{"level":3,"title":"\u53CD\u5E8F\u5217\u5316","slug":"\u53CD\u5E8F\u5217\u5316"},{"level":2,"title":"\u5F02\u5E38","slug":"\u5F02\u5E38"},{"level":3,"title":"\u5F02\u5E38\u6355\u83B7","slug":"\u5F02\u5E38\u6355\u83B7"},{"level":3,"title":"\u5F02\u5E38\u8F93\u51FA","slug":"\u5F02\u5E38\u8F93\u51FA"},{"level":3,"title":"\u5F02\u5E38\u5C4F\u853D","slug":"\u5F02\u5E38\u5C4F\u853D"},{"level":3,"title":"\u5F02\u5E38\u5904\u7406\u673A\u5236","slug":"\u5F02\u5E38\u5904\u7406\u673A\u5236"},{"level":2,"title":"\u6CE8\u89E3","slug":"\u6CE8\u89E3"},{"level":3,"title":"\u5143\u6CE8\u89E3","slug":"\u5143\u6CE8\u89E3"},{"level":3,"title":"\u5185\u7F6E\u6CE8\u89E3","slug":"\u5185\u7F6E\u6CE8\u89E3"},{"level":3,"title":"\u81EA\u5B9A\u4E49\u6CE8\u89E3","slug":"\u81EA\u5B9A\u4E49\u6CE8\u89E3"},{"level":3,"title":"\u83B7\u53D6\u6CE8\u89E3\u4FE1\u606F","slug":"\u83B7\u53D6\u6CE8\u89E3\u4FE1\u606F"},{"level":2,"title":"\u53C2\u8003","slug":"\u53C2\u8003"}],"relativePath":"posts/renew/java/Java-\u57FA\u7840.md"}',r={},u=e(`<h1 id="java-\u57FA\u7840\u5185\u5BB9" tabindex="-1">Java \u57FA\u7840\u5185\u5BB9 <a class="header-anchor" href="#java-\u57FA\u7840\u5185\u5BB9" aria-hidden="true">#</a></h1><h2 id="\u6570\u636E\u7C7B\u578B" tabindex="-1">\u6570\u636E\u7C7B\u578B <a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a></h2><blockquote><p>8 \u79CD \u57FA\u672C\u6570\u636E\u7C7B\u578B</p></blockquote><table><thead><tr><th>\u7C7B\u578B</th><th>\u5B57\u8282</th><th>\u4F4D</th><th>\u5305\u88C5\u7C7B</th></tr></thead><tbody><tr><td>byte</td><td>1</td><td>8 bit</td><td>Byte</td></tr><tr><td>boolean</td><td>1</td><td>8 bit</td><td>Boolean</td></tr><tr><td>char</td><td>2</td><td>16 bit</td><td>Charater</td></tr><tr><td>shot</td><td>2</td><td>16 bit</td><td>Shot</td></tr><tr><td>int</td><td>4</td><td>32 bit</td><td>Integer</td></tr><tr><td>float</td><td>4</td><td>32 bit</td><td>Float</td></tr><tr><td>long</td><td>8</td><td>64 bit</td><td>Long</td></tr><tr><td>double</td><td>8</td><td>64 bit</td><td>Double</td></tr></tbody></table><h3 id="\u7F13\u51B2\u6C60" tabindex="-1">\u7F13\u51B2\u6C60 <a class="header-anchor" href="#\u7F13\u51B2\u6C60" aria-hidden="true">#</a></h3><p>\u5728 Java \u4E2D<code>Boolean/Byte/Character/Integer/Short</code>\u8FD9\u51E0\u4E2A\u5305\u88C5\u7C7B\u578B\u90FD\u5B58\u5728\u4E00\u4E2A\u7F13\u51B2\u6C60\uFF0C\u4F7F\u7528\u8FD9\u4E9B\u5BF9\u5E94\u7684\u5305\u88C5\u7C7B\u578B\u65F6\uFF0C\u6EE1\u8DB3\u6761\u4EF6\uFF08\u6BD4\u5982\u9891\u7E41\u8BFB\u53D6\u7684\u503C\uFF09\u7684\u503C\u5C31\u4F1A\u5B58\u653E\u5230\u7F13\u51B2\u6C60\u4E2D\uFF0C\u5F85\u4E0B\u6B21\u76F4\u63A5\u4ECE\u7F13\u51B2\u6C60\u4E2D\u8BFB\u53D6\u3002</p><p>Java \u4E2D\u5E38\u89C1\u7684\u5305\u88C5\u7C7B\u9664<code>Double/Float</code>\u90FD\u5B58\u5728\u7F13\u51B2\u6C60\uFF1A</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// Boolean</span>
<span class="token comment">// If a new Boolean instance is not required, this method should generally be used in preference to the constructor Boolean(boolean).</span>
<span class="token comment">// this method is likely to yield significantly better space and time performance. \u4F7F\u7528\u6B64\u65B9\u6CD5\u83B7\u53D6 Boolean \u5BF9\u8C61\u6BD4\u76F4\u63A5 new \u4E00\u4E2A Boolean \u5BF9\u8C61\u7684\u6027\u80FD\u8981\u597D</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Boolean</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>b <span class="token operator">?</span> TRUE <span class="token operator">:</span> FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// Byte</span>
<span class="token comment">// If a new Byte instance is not required, this method should generally be used in preference to the constructor Byte(byte).</span>
<span class="token comment">// this method is likely to yield significantly better space and time performance since all byte values are cached. \u7F13\u5B58\u6240\u6709\u4F20\u5165\u7684 byte \u503C</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Byte</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">byte</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> offset <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">ByteCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>b <span class="token operator">+</span> offset<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// Character</span>
<span class="token comment">// If a new Character instance is not required, this method should generally be used in preference to the constructor Character(char).</span>
<span class="token comment">// this method is likely to yield significantly better space and time performance by caching frequently requested values. \u7F13\u5B58\u9891\u7E41\u4F7F\u7528\u7684\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Character</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;=</span> <span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// must cache</span>
        <span class="token keyword">return</span> <span class="token class-name">CharacterCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>c<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Character</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// Integer \u7F13\u5B58\u6C60\u7684\u5927\u5C0F\u9ED8\u8BA4\u4E3A -128 ~ 127</span>
<span class="token comment">// If a new Integer instance is not required, this method should generally be used in preference to the constructor Integer(int).</span>
<span class="token comment">// this method is likely to yield significantly better space and time performance by caching frequently requested values. \u7F13\u5B58\u9891\u7E41\u4F7F\u7528\u7684\u503C</span>
<span class="token comment">// This method will always cache values in the range -128 to 127, inclusive, and may cache other values outside of this range. \u7F13\u51B2\u6C60\u4E2D\u5B58\u5728\u9ED8\u8BA4\u8303\u56F4 -128 \u5230 127</span>
<span class="token comment">// cache \u6570\u7EC4\u4E0B\u6807 0 \u5F00\u59CB\uFF0C\u4ECE -128 \u5F00\u59CB\u5B58\uFF0C\u4E00\u76F4\u5230 127</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Integer</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token class-name">IntegerCache</span><span class="token punctuation">.</span>low <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> <span class="token class-name">IntegerCache</span><span class="token punctuation">.</span>high<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token class-name">IntegerCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token class-name">IntegerCache</span><span class="token punctuation">.</span>low<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// Short</span>
<span class="token comment">// If a new Short instance is not required, this method should generally be used in preference to the constructor Short(short).</span>
<span class="token comment">// this method is likely to yield significantly better space and time performance by caching frequently requested values. // \u7F13\u5B58\u9891\u7E41\u4F7F\u7528\u7684\u503C</span>
<span class="token comment">// This method will always cache values in the range -128 to 127, inclusive, and may cache other values outside of this range. \u603B\u662F\u7F13\u5B58 -128 \u5230 127 \u4E4B\u95F4\u7684\u503C\uFF0C\u8FD8\u53EF\u80FD\u7F13\u5B58\u5176\u4ED6\u5728\u8FD9\u4E2A\u8303\u56F4\u5185\u7684\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Short</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">short</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> offset <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> sAsInt <span class="token operator">=</span> s<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sAsInt <span class="token operator">&gt;=</span> <span class="token operator">-</span><span class="token number">128</span> <span class="token operator">&amp;&amp;</span> sAsInt <span class="token operator">&lt;=</span> <span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// must cache</span>
        <span class="token keyword">return</span> <span class="token class-name">ShortCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>sAsInt <span class="token operator">+</span> offset<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Short</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// Long</span>
<span class="token comment">// If a new Long instance is not required, this method should generally be used in preference to the constructor Long(long)</span>
<span class="token comment">// this method is likely to yield significantly better space and time performance by caching frequently requested values. Long \u4F1A\u7F13\u5B58\u9891\u7E41\u8BF7\u6C42\u7684\u503C</span>
<span class="token comment">// Note that unlike the corresponding method in the Integer class, this method is not required to cache values within a particular range. \u5982\u679C\u8BF7\u6C42\u7684\u503C\u662F -128 \u5230 127 \u4E4B\u95F4\u4F1A\u7ACB\u5373\u7F13\u5B58\uFF0C\u4F46\u662F\u4E0D\u4F1A\u50CF Integer \u4E00\u5F00\u59CB\u5C31\u7F13\u5B58\u8303\u56F4\u5185\u7684\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Long</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">long</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> <span class="token keyword">int</span> offset <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;=</span> <span class="token operator">-</span><span class="token number">128</span> <span class="token operator">&amp;&amp;</span> l <span class="token operator">&lt;=</span> <span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// will cache</span>
      <span class="token keyword">return</span> <span class="token class-name">LongCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>l <span class="token operator">+</span> offset<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>\u26A0\uFE0F \u9700\u8981\u6CE8\u610F\uFF1A\u5373\u4F7F\u5B58\u5728\u7F13\u51B2\u6C60\uFF0C\u4F46\u4F7F\u7528<code>new</code>\u5173\u952E\u5B57\uFF0C\u4F9D\u7136\u4F1A\u65B0\u5EFA\u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u4ECE\u7F13\u51B2\u6C60\u83B7\u53D6</p></blockquote><h3 id="\u8D4B\u503C\u8FD0\u7B97" tabindex="-1">\u8D4B\u503C\u8FD0\u7B97 <a class="header-anchor" href="#\u8D4B\u503C\u8FD0\u7B97" aria-hidden="true">#</a></h3><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// 1.1 \u5B57\u9762\u91CF\u5C5E\u4E8E double \u7C7B\u578B\uFF0C\u4E0D\u80FD\u76F4\u63A5\u5C06 1.1 \u76F4\u63A5\u8D4B\u503C\u7ED9 float \u53D8\u91CF\uFF0C\u56E0\u4E3A\u8FD9\u662F\u5411\u4E0B\u8F6C\u578B\u3002Java \u4E0D\u80FD\u9690\u5F0F\u6267\u884C\u5411\u4E0B\u8F6C\u578B\uFF0C\u56E0\u4E3A\u8FD9\u4F1A\u4F7F\u5F97\u7CBE\u5EA6\u964D\u4F4E\u3002</span>
<span class="token comment">// float f = 1.1; // \u7F16\u8F91\u5668\u68C0\u67E5\u4E0D\u901A\u8FC7</span>

<span class="token comment">// 1.1f \u5B57\u9762\u91CF\u624D\u662F float \u7C7B\u578B</span>
<span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">1.1f</span><span class="token punctuation">;</span> <span class="token comment">// or 1.1F</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u7C7B\u578B\u8F6C\u6362" tabindex="-1">\u7C7B\u578B\u8F6C\u6362 <a class="header-anchor" href="#\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a></h3><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// int to char</span>
<span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// char to int</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">49</span> <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8FDB\u5236\u8F6C\u6362</span>
<span class="token comment">// \u4E8C\u8FDB\u5236</span>
<span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u516B\u8FDB\u5236</span>
<span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toOctalString</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5341\u516D\u8FDB\u5236</span>
<span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4EFB\u610F\u8FDB\u5236</span>
<span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u8FD0\u7B97\u7B26" tabindex="-1">\u8FD0\u7B97\u7B26 <a class="header-anchor" href="#\u8FD0\u7B97\u7B26" aria-hidden="true">#</a></h3><p>1\u3001 <strong><code>+=</code></strong> \u9690\u5F0F\u7C7B\u578B\u8F6C\u6362</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">short</span> s1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">// s1 = s1 + 1;</span>
<span class="token comment">// \u56E0\u4E3A\u5B57\u9762\u91CF 1 \u662F int \u7C7B\u578B\uFF0C\u5B83\u6BD4 short \u7C7B\u578B\u7CBE\u5EA6\u8981\u9AD8\uFF0C\u56E0\u6B64\u4E0D\u80FD\u9690\u5F0F\u5730\u5C06 int \u7C7B\u578B\u4E0B\u8F6C\u578B\u4E3A short \u7C7B\u578B</span>

<span class="token comment">// \u53EF\u4EE5\u4F7F\u7528 += \u8FD0\u7B97\u7B26\u53EF\u4EE5\u6267\u884C\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362</span>
<span class="token comment">// += \u8FD0\u7B97\u5C06\u64CD\u4F5C\u7ED3\u679C\u7C7B\u578B\u5F3A\u5236\u8F6C\u6362\u4E3A\u7B49\u5F0F\u5DE6\u8FB9\u7684\u7C7B\u578B\uFF08\u6301\u6709\u7ED3\u679C\u7684\u7C7B\u578B\uFF09</span>
s1 <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// int to shot \u76F8\u5F53\u4E8E s1 = (short) (s1 + 1);</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>2\u3001 <strong><code>++</code></strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u53EA\u6709\u4E00\u884C\u7684\u8D4B\u503C\u64CD\u4F5C\uFF0C\u79F0\u4E3A\u539F\u5B50\u64CD\u4F5C\u3002\u539F\u5B50\u64CD\u4F5C\u662F\u7EBF\u7A0B\u5B89\u5168\u7684</span>
<span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">// \u867D\u7136 ++ \u64CD\u4F5C\u53EA\u6709\u4E00\u884C\uFF0C\u4F46\u662F\u5728\u5C06\u4EE3\u7801\u7F16\u8BD1\u6210\u5B57\u8282\u7801\u540E\uFF0C</span>
<span class="token comment">// ++ \u64CD\u4F5C\u53D8\u6210\u5148\u8BFB\u53D6\u53D8\u91CF i\uFF0C\u518D\u8FDB\u884C i + 1\uFF0C\u6700\u540E\u5C06 i+1 \u8D4B\u503C\u7ED9\u53D8\u91CF i\uFF0C\u56E0\u6B64\u4E0D\u662F\u4E00\u4E2A\u539F\u5B50\u64CD\u4F5C</span>
i<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

<span class="token comment">// \u975E\u539F\u5B50\u64CD\u4F5C\u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\u64CD\u4F5C</span>
<span class="token comment">// \u5B83\u6D89\u53CA\u5230\u591A\u4E2A\u6307\u4EE4\uFF0C\u5982\u8BFB\u53D6\u53D8\u91CF\u503C\uFF0C\u589E\u52A0\uFF0C\u7136\u540E\u5B58\u50A8\u56DE\u5185\u5B58\uFF0C</span>
<span class="token comment">// \u8FD9\u4E2A\u8FC7\u7A0B\u53EF\u80FD\u4F1A\u51FA\u73B0\u591A\u4E2A\u7EBF\u7A0B\u4EA4\u5DEE\u3002\u8FD8\u4F1A\u5B58\u5728\u7ADE\u6001\u6761\u4EF6\uFF08\u8BFB\u53D6 - \u4FEE\u6539 - \u5199\u5165\uFF09</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h3 id="boolean" tabindex="-1">Boolean <a class="header-anchor" href="#boolean" aria-hidden="true">#</a></h3><p>\u5728 Java \u57FA\u672C\u6570\u636E\u7C7B\u578B\u4E2D\uFF0C<code>boolean</code> \u53EA\u6709\u4E24\u79CD\u53D6\u503C\uFF1A<code>true</code>\u6216<code>false</code>\u3002\u7406\u8BBA\u4E0A\u5360\u7528 1 \u5B57\u8282\uFF0C\u5B9E\u9645\u4E0A\uFF1A</p><ol><li>\u5355\u4E2A<code>boolean</code>\u7C7B\u578B\u53D8\u91CF\u5728\u7F16\u8BD1\u65F6\u4F7F\u7528\u7684\u662F<code>int</code>\u7C7B\u578B\u6765\u8868\u793A\uFF0C\u6B64\u65F6\u662F 4 \u4E2A\u5B57\u8282\uFF1B</li><li>\u5728<code>boolean</code>\u6570\u7EC4\u4E2D\uFF0C\u7F16\u8BD1\u65F6\u4F5C\u4E3A<code>byte</code> \u6570\u7EC4\u8FDB\u884C\u7F16\u8BD1\uFF0C\u6B64\u65F6\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A<code>boolean</code>\u5143\u7D20\u5360 1 \u5B57\u8282\u3002</li></ol><br><h3 id="string" tabindex="-1">String <a class="header-anchor" href="#string" aria-hidden="true">#</a></h3><h4 id="\u4E0D\u53EF\u53D8\u6027" tabindex="-1">\u4E0D\u53EF\u53D8\u6027 <a class="header-anchor" href="#\u4E0D\u53EF\u53D8\u6027" aria-hidden="true">#</a></h4><p><code>String</code>\u7C7B\u88AB\u58F0\u660E\u4E3A<code>final</code>\uFF0C\u56E0\u6B64\u5B83\u4E0D\u53EF\u88AB\u7EE7\u627F\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">String</span>
    <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">,</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">CharSequence</span> <span class="token punctuation">{</span>
    <span class="token comment">/** The value is used for character storage. */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">char</span> value<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">/** Cache the hash code for the string */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span> <span class="token comment">// Default to 0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5185\u90E8\u4F7F\u7528<code>char[]</code>\u5B58\u50A8\u6570\u636E\uFF0C\u8BE5\u6570\u7EC4\u88AB\u58F0\u660E\u4E3A<code>final</code>\uFF0C\u8FD9\u610F\u5473\u7740 <code>value[]</code>\u521D\u59CB\u5316\u4E4B\u540E\u5C31\u4E0D\u80FD\u518D\u5F15\u7528\u5176\u5B83\u6570\u7EC4\u3002\u5E76\u4E14<code>String</code>\u5185\u90E8\u6CA1\u6709\u6539\u53D8<code>value[]</code>\u6570\u7EC4\u7684\u65B9\u6CD5\uFF0C\u56E0\u6B64\u53EF\u4EE5\u4FDD\u8BC1<code>String</code> <strong>\u4E0D\u53EF\u53D8</strong>\u3002</p><p><strong>\u597D\u5904</strong></p><ol><li><p>\u5B89\u5168\u6027 <code>String</code>\u7ECF\u5E38\u4F5C\u4E3A\u53C2\u6570\uFF0C<code>String</code>\u4E0D\u53EF\u53D8\u6027\u53EF\u4EE5\u4FDD\u8BC1\u53C2\u6570\u4E0D\u53EF\u53D8\u3002\u4F8B\u5982\uFF1A\u5728\u4F5C\u4E3A\u7F51\u7EDC\u8FDE\u63A5\u53C2\u6570\u7684\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C<code>String</code>\u662F\u53EF\u53D8\u7684\uFF0C\u5728\u7F51\u7EDC\u8FDE\u63A5\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C<code>String</code>\u88AB\u6539\u53D8\uFF0C\u6709\u53EF\u80FD\u4F1A\u5371\u5BB3\u670D\u52A1\u5668\u5B89\u5168\u3002</p></li><li><p>\u7EBF\u7A0B\u5B89\u5168 \u4E0D\u53EF\u53D8\u6027\u4F7F\u5F97<code>String</code>\u5929\u751F\u5177\u5907\u7EBF\u7A0B\u5B89\u5168\u6027\uFF0C\u53EF\u4EE5\u5728\u591A\u4E2A\u7EBF\u7A0B\u4E2D\u5B89\u5168\u5730\u4F7F\u7528\u3002</p></li><li><p>\u53EF\u4EE5\u7F13\u5B58<em>hash</em>\u503C \u56E0\u4E3A<code>String</code>\u7684<em>hash</em>\u503C\u7ECF\u5E38\u88AB\u4F7F\u7528\uFF0C\u4F8B\u5982<code>String</code>\u7528\u505A<code>HashMap</code>\u7684<em>key</em>\u3002\u4E0D\u53EF\u53D8\u7684\u7279\u6027\u53EF\u4EE5\u4F7F\u5F97<em>hash</em>\u503C\u4E5F\u4E0D\u53EF\u53D8\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u8FDB\u884C\u4E00\u6B21\u8BA1\u7B97\u3002</p></li><li><p><em>String Pool</em>\u7684\u9700\u8981 \u5982\u679C\u4E00\u4E2A<code>String</code>\u5BF9\u8C61\u5DF2\u7ECF\u88AB\u521B\u5EFA\u8FC7\u4E86\uFF0C\u90A3\u4E48\u5C31\u4F1A\u4ECE<em>String Pool</em>\u4E2D\u53D6\u5F97\u5F15\u7528\u3002\u53EA\u6709<code>String</code>\u662F\u4E0D\u53EF\u53D8\u7684\uFF0C\u624D\u80FD\u4ECE<em>String Pool</em>\u83B7\u53D6\u5230\u3002</p></li></ol><h4 id="abstractstringbuilder" tabindex="-1">AbstractStringBuilder <a class="header-anchor" href="#abstractstringbuilder" aria-hidden="true">#</a></h4><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// A mutable sequence of characters. Implements a modifiable string. \u53EF\u53D8\u7684\u5B57\u7B26\u4E32\u5E8F\u5217</span>
<span class="token comment">// the length and content of the sequence can be changed through certain method calls. \u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u548C\u5185\u5BB9\u53EF\u4EE5\u901A\u8FC7\u5185\u7F6E\u65B9\u6CD5\u6539\u53D8</span>
<span class="token comment">// Unless otherwise noted, passing a null argument to a constructor or method in this class will cause a NullPointerException to be thrown. \u6784\u9020\u65B9\u6CD5\u4F20\u5165 null \u4F5C\u4E3A\u53C2\u6570\u4F1A\u5F15\u8D77 NullPointerException</span>
<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractStringBuilder</span> <span class="token keyword">implements</span> <span class="token class-name">Appendable</span><span class="token punctuation">,</span> <span class="token class-name">CharSequence</span> <span class="token punctuation">{</span>
    <span class="token comment">/**
     * The value is used for character storage.
     */</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">;</span>

    <span class="token comment">/**
     * The count is the number of characters used.
     */</span>
    <span class="token keyword">int</span> count<span class="token punctuation">;</span>

    <span class="token comment">/**
     * This no-arg constructor is necessary for serialization of subclasses.
     */</span>
    <span class="token class-name">AbstractStringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Creates an AbstractStringBuilder of the specified capacity.
     */</span>
    <span class="token class-name">AbstractStringBuilder</span><span class="token punctuation">(</span><span class="token keyword">int</span> capacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>capacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Appends the specified string to this character sequence.</span>
    <span class="token keyword">public</span> <span class="token class-name">AbstractStringBuilder</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">appendNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>count <span class="token operator">+</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
      str<span class="token punctuation">.</span><span class="token function">getChars</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">,</span> value<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
      count <span class="token operator">+=</span> len<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Documentation in subclasses because of synchro difference</span>
    <span class="token keyword">public</span> <span class="token class-name">AbstractStringBuilder</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringBuffer</span> sb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sb <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token function">appendNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>count <span class="token operator">+</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">getChars</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">,</span> value<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
        count <span class="token operator">+=</span> len<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * @since 1.8
     */</span>
    <span class="token class-name">AbstractStringBuilder</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">AbstractStringBuilder</span> asb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>asb <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token function">appendNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> asb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>count <span class="token operator">+</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
        asb<span class="token punctuation">.</span><span class="token function">getChars</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">,</span> value<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
        count <span class="token operator">+=</span> len<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">AbstractStringBuilder</span> <span class="token function">appendNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> c <span class="token operator">=</span> count<span class="token punctuation">;</span>
      <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>c <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">final</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
      value<span class="token punctuation">[</span>c<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;n&#39;</span><span class="token punctuation">;</span>
      value<span class="token punctuation">[</span>c<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;u&#39;</span><span class="token punctuation">;</span>
      value<span class="token punctuation">[</span>c<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;l&#39;</span><span class="token punctuation">;</span>
      value<span class="token punctuation">[</span>c<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;l&#39;</span><span class="token punctuation">;</span>
      count <span class="token operator">=</span> c<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br></div></div><h4 id="stringbuilder" tabindex="-1">StringBuilder <a class="header-anchor" href="#stringbuilder" aria-hidden="true">#</a></h4><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// A mutable sequence of characters.</span>
<span class="token comment">// \u53EF\u53D8\u5B57\u7B26\u5E8F\u5217</span>
<span class="token comment">// This class provides an API compatible with StringBuffer, but with no guarantee of synchronization.</span>
<span class="token comment">// \u63D0\u4F9B\u548C StringBuffer \u76F8\u4E92\u517C\u5BB9/\u4E00\u6837\u7684\u65B9\u6CD5\uFF0C\u4F46\u662F\u4E0D\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168</span>
<span class="token comment">// Instances of StringBuilder are not safe for use by multiple threads.</span>
<span class="token comment">// \u591A\u7EBF\u7A0B\u60C5\u51B5\u4E0B\uFF0CStringBuilder \u975E\u7EBF\u7A0B\u5B89\u5168</span>
<span class="token comment">// This class is designed for use as a drop-in replacement for StringBuffer in places where the string buffer was being used by a single thread (as is generally the case).</span>
<span class="token comment">// StringBuilder \u5728\u5355\u7EBF\u7A0B\u4E0B\u53EF\u7528\u4F5C StringBuffer \u7684\u66FF\u4EE3</span>
<span class="token comment">// Where possible, it is recommended that this class be used in preference to StringBuffer as it will be faster under most implementations.</span>
<span class="token comment">// \u5982\u679C\u53EF\u80FD\u7684\u8BDD\u5E94\u8BE5\u4F7F\u7528 StringBuilder \u800C\u4E0D\u662F StringBuilder\uFF0C\u56E0\u4E3A StringBuilder \u4E2D\u7684\u65B9\u6CD5\u90FD\u662F\u975E\u540C\u6B65\u65B9\u6CD5\uFF0C\u5177\u6709\u66F4\u597D\u7684\u6027\u80FD</span>
<span class="token comment">// The principal operations on a StringBuilder are the append and insert methods, which are overloaded so as to accept data of any type.</span>
<span class="token comment">// \u6700\u4E3B\u8981\u7684\u4E24\u4E2A\u65B9\u6CD5\u662F\u91CD\u5199\u81EA AbstractStringBuilder \u7684 append \u548C insert \u65B9\u6CD5\uFF0C\u5B83\u4EEC\u53EF\u4EE5\u63A5\u6536\u4EFB\u4F55\u4E00\u79CD\u7C7B\u578B\u7684\u6570\u636E</span>
<span class="token comment">// If the internal buffer overflows, it is automatically made larger.</span>
<span class="token comment">// \u5BB9\u91CF\u4E0D\u591F\u65F6\u81EA\u52A8\u6269\u5BB9</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">StringBuilder</span>
    <span class="token keyword">extends</span> <span class="token class-name">AbstractStringBuilder</span>
    <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">,</span> <span class="token class-name">CharSequence</span>
<span class="token punctuation">{</span>

    <span class="token comment">/** use serialVersionUID for interoperability */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">4383685877147921099L</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     * Constructs a string builder with no characters in it and an
     * initial capacity of 16 characters.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Constructs a string builder with no characters in it and an
     * initial capacity specified by the {@code capacity} argument.
     *
     * @param      capacity  the initial capacity.
     * @throws     NegativeArraySizeException  if the {@code capacity}
     *               argument is less than {@code 0}.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token keyword">int</span> capacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>capacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Constructs a string builder initialized to the contents of the
     * specified string. The initial capacity of the string builder is
     * {@code 16} plus the length of the string argument.
     *
     * @param   str   the initial contents of the buffer.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// \u8C03\u7528 AbstractStringBuilder \u7684 append \u65B9\u6CD5</span>
        <span class="token function">append</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Constructs a string builder that contains the same characters
     * as the specified {@code CharSequence}. The initial capacity of
     * the string builder is {@code 16} plus the length of the
     * {@code CharSequence} argument.
     *
     * @param      seq   the sequence to copy.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> seq<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>seq<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">append</span><span class="token punctuation">(</span>seq<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br></div></div><h4 id="stringbuffer" tabindex="-1">StringBuffer <a class="header-anchor" href="#stringbuffer" aria-hidden="true">#</a></h4><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// A thread-safe, mutable sequence of characters.</span>
<span class="token comment">// \u4E00\u4E2A\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u53EF\u53D8\u7684\u5B57\u7B26\u5E8F\u5217</span>
<span class="token comment">// The methods are synchronized where necessary.</span>
<span class="token comment">// \u6D89\u53CA\u5230\u7EBF\u7A0B\u5B89\u5168\u7684\u65B9\u6CD5\u90FD\u4F7F\u7528 synchronized \u5173\u952E\u5B57\u6765\u4FEE\u9970</span>
<span class="token comment">// this class synchronizes only on the string buffer performing the operation, not on the source</span>
<span class="token comment">// \u8FD9\u4E2A\u7C7B\u4E2D\u7684\u540C\u6B65\u65B9\u6CD5\u4F5C\u7528\u5728 string buffer \u7684\u64CD\u4F5C\u6B65\u9AA4\uFF0C\u800C\u4E0D\u662F\u539F\u5148\u7684 string</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">StringBuffer</span>
    <span class="token keyword">extends</span> <span class="token class-name">AbstractStringBuilder</span>
    <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">,</span> <span class="token class-name">CharSequence</span>
<span class="token punctuation">{</span>

    <span class="token comment">/**
     * A cache of the last value returned by toString. Cleared
     * whenever the StringBuffer is modified.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> toStringCache<span class="token punctuation">;</span>

    <span class="token comment">/** use serialVersionUID from JDK 1.0.2 for interoperability */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">3388685877147921107L</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     * Constructs a string buffer with no characters in it and an
     * initial capacity of 16 characters.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Constructs a string buffer with no characters in it and
     * the specified initial capacity.
     *
     * @param      capacity  the initial capacity.
     * @exception  NegativeArraySizeException  if the {@code capacity}
     *               argument is less than {@code 0}.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token keyword">int</span> capacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>capacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Constructs a string buffer initialized to the contents of the
     * specified string. The initial capacity of the string buffer is
     * {@code 16} plus the length of the string argument.
     *
     * @param   str   the initial contents of the buffer.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">append</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/**
     * Constructs a string buffer that contains the same characters
     * as the specified {@code CharSequence}. The initial capacity of
     * the string buffer is {@code 16} plus the length of the
     * {@code CharSequence} argument.
     * &lt;p&gt;
     * If the length of the specified {@code CharSequence} is
     * less than or equal to zero, then an empty buffer of capacity
     * {@code 16} is returned.
     *
     * @param      seq   the sequence to copy.
     * @since 1.5
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> seq<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>seq<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">append</span><span class="token punctuation">(</span>seq<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

     <span class="token annotation punctuation">@Override</span>
     <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">int</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> count<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

     <span class="token annotation punctuation">@Override</span>
     <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">int</span> <span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br></div></div><p><strong><code>String</code> \u4E2D\u7684<code>+</code>\u64CD\u4F5C</strong></p><blockquote><p>The Java language provides special support for the string concatenation operator ( + ), and for conversion of other objects to strings. String concatenation is implemented through the StringBuilder(or StringBuffer) class and its append method.</p></blockquote><p><code>String</code>\u652F\u6301<code>+</code>\u7EA7\u8054\u64CD\u4F5C\uFF0C\u5E76\u4E14<code>String</code>\u4E2D\u7684\u7EA7\u8054\u64CD\u4F5C<code>+</code>\u662F\u901A\u8FC7<code>StringBuilder</code>\u6216<code>StringBuffer</code>\u7684<code>appned</code>\u65B9\u6CD5\u5B9E\u73B0\u7684\u3002</p><h4 id="\u5B57\u7B26\u5E38\u91CF\u6C60" tabindex="-1">\u5B57\u7B26\u5E38\u91CF\u6C60 <a class="header-anchor" href="#\u5B57\u7B26\u5E38\u91CF\u6C60" aria-hidden="true">#</a></h4><p>JVM \u7684\u4E2D\u6709\u4E00\u4E2A\u4E13\u95E8\u4FDD\u5B58\u5B57\u7B26\u4E32\u7684<strong>\u5B57\u7B26\u5E38\u91CF\u6C60</strong>\uFF0C\u4E3A\u4E86\u907F\u514D\u591A\u6B21\u521B\u5EFA\u5B57\u7B26\u4E32\u5BF9\u8C61\uFF0C\u50A8\u5B58<strong>\u4E0D\u91CD\u590D</strong>\u7684\u5B57\u7B26\u4E32\u3002</p><p><strong>How it works</strong></p><ul><li>\u521B\u5EFA\u5B57\u7B26\u4E32\u5E38\u91CF\u65F6\uFF0CJVM \u4F1A\u68C0\u67E5\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u4E2D\u662F\u5426\u5B58\u5728\u8FD9\u4E2A\u5B57\u7B26\u4E32;</li><li>\u82E5\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u4E2D\u5B58\u5728\u8BE5\u5B57\u7B26\u4E32\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u5F15\u7528\u5B9E\u4F8B\uFF1B</li><li>\u82E5\u4E0D\u5B58\u5728\uFF0C\u5148\u5B9E\u4F8B\u5316\u8BE5\u5B57\u7B26\u4E32\uFF0C\u5E76\u5C06\u8BE5\u5B57\u7B26\u4E32\u653E\u5165\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u4E2D\uFF0C\u4EE5\u4FBF\u4E0B\u6B21\u76F4\u63A5\u53D6\u7528\u3002</li></ul><p><strong>How to use</strong></p><ul><li>\u76F4\u63A5\u4F7F\u7528\u53CC\u5F15\u53F7\u58F0\u660E\u51FA\u6765\u7684<code>String</code>\u5BF9\u8C61\u4F1A\u76F4\u63A5\u5B58\u50A8\u5728\u5E38\u91CF\u6C60\u4E2D;</li><li>\u5982\u679C\u4E0D\u662F\u7528\u53CC\u5F15\u53F7\u58F0\u660E\u7684<code>String</code>\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>String</code>\u63D0\u4F9B\u7684<code>intern</code>\u65B9\u6CD5\u3002<code>intern</code>\u65B9\u6CD5\u4F1A\u4ECE\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u4E2D\u67E5\u8BE2\u5F53\u524D\u5B57\u7B26\u4E32\u662F\u5426\u5B58\u5728\uFF0C\u82E5\u4E0D\u5B58\u5728\u5C31\u4F1A\u5C06\u5F53\u524D\u5B57\u7B26\u4E32\u653E\u5165\u5E38\u91CF\u6C60\u4E2D\u3002</li></ul><p><strong><code>String.intern()</code></strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// A pool of strings, initially empty, is maintained privately by the class String.</span>
<span class="token comment">// When the intern method is invoked, if the pool already contains a string equal to this String object as determined by the equals(Object) method, then the string from the pool is returned.</span>
<span class="token comment">// \u5982\u679C\u5E38\u91CF\u6C60\u4E2D\u5DF2\u7ECF\u5B58\u5728\u8BE5\u5B57\u7B26\u4E32\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u5E38\u91CF\u6C60\u4E2D\u8BE5\u5BF9\u8C61\u7684\u5F15\u7528</span>
<span class="token comment">// Otherwise, this String object is added to the pool and a reference to this String object is returned.</span>
<span class="token comment">// \u5426\u5219\u5728\u5E38\u91CF\u6C60\u4E2D\u52A0\u5165\u8BE5\u5BF9\u8C61\uFF0C\u7136\u540E\u8FD4\u56DE\u5F15\u7528</span>
<span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token class-name">String</span> <span class="token function">intern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>intern</code>\u662F\u4E00\u4E2A<code>native</code>\u65B9\u6CD5\uFF0C\u5B83\u80FD\u52A8\u6001\u7684\u5C06\u5B57\u7B26\u4E32\u52A0\u5165\u5230\u5E38\u91CF\u6C60\u4E2D\u3002\u4F7F\u7528<code>intern</code>\u53EF\u4EE5\u4FDD\u8BC1\u76F8\u540C\u5185\u5BB9\u7684\u5B57\u7B26\u4E32\u53D8\u91CF\u59CB\u7EC8\u5F15\u7528\u540C\u4E00\u4E2A\u5185\u5B58\u5BF9\u8C61\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// s1 \u548C s2 \u91C7\u7528 new \u65B0\u5EFA\u4E24\u4E2A\u4E0D\u540C\u5BF9\u8C61</span>
<span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1 <span class="token operator">==</span> s2<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// false</span>
<span class="token comment">// s3 \u662F\u901A\u8FC7 intern\u65B9\u6CD5\u53D6\u5F97\u4E00\u4E2A\u5BF9\u8C61\u5F15\u7528</span>
<span class="token comment">// intern \u9996\u5148\u628A s1 \u5F15\u7528\u7684\u5BF9\u8C61\u653E\u5230\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u4E2D\uFF0C\u7136\u540E\u8FD4\u56DE\u5BF9\u8C61\u5F15\u7528</span>
<span class="token class-name">String</span> s3 <span class="token operator">=</span> s1<span class="token punctuation">.</span><span class="token function">intern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u56E0\u6B64 s3 \u548C s1 \u5F15\u7528\u7684\u662F\u540C\u4E00\u4E2A\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u7684\u5BF9\u8C61</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span><span class="token function">intern</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> s3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5728 JDK 1.7 \u4E4B\u524D\uFF0C\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u88AB\u653E\u5728<strong>\u65B9\u6CD5\u533A</strong> \u4E2D\uFF0C\u6B64\u65F6\u65B9\u6CD5\u533A\u7684\u5B9E\u73B0\u662F\u6C38\u4E45\u4EE3\uFF08\u53EF\u4EE5\u8BA4\u4E3A\u65B9\u6CD5\u533A\u662F\u4E00\u4E2A\u63A5\u53E3/\u89C4\u8303\uFF0C\u6C38\u4E45\u4EE3\u662F\u5B83\u7684\u5B9E\u73B0\uFF09\u3002\u56E0\u4E3A\u6C38\u4E45\u4EE3\u7684\u7A7A\u95F4\u6709\u9650\uFF0C\u5728\u5927\u91CF\u4F7F\u7528\u5B57\u7B26\u4E32\u7684\u573A\u666F\u4E0B\u4F1A\u5BFC\u81F4 OOM \u9519\u8BEF\u3002</p><p>JDK 1.7 \u53CA\u4EE5\u540E\uFF0C<strong>\u5B57\u7B26\u5E38\u91CF\u6C60\u79FB\u81F3\u4E86\u5806\u533A</strong>\uFF0C\u5B57\u7B26\u4E32\u7684\u521B\u5EFA\u4E5F\u5728\u5806\u533A\u3002\u4E3A\u4E86\u8282\u7701\u5F00\u652F<code>intern</code>\u4E0D\u518D\u662F\u628A\u8BE5\u5B57\u7B26\u4E32\u76F4\u63A5\u52A0\u5165\u5B57\u7B26\u5E38\u91CF\u6C60\uFF0C\u800C\u662F\u5C06\u5176\u5730\u5740\u5F15\u7528\u653E\u5230\u5B57\u7B26\u5E38\u91CF\u6C60\u3002</p><p>\u5230\u4E86 JDK 1.8\uFF0CJVM \u4F7F\u7528\u5143\u7A7A\u95F4\uFF08MetaSpace\uFF09\u4F5C\u4E3A\u65B9\u6CD5\u533A\u7684\u5B9E\u73B0\uFF0C\u6765\u4EE3\u66FF\u6C38\u4E45\u4EE3\u3002\u5E76\u5C06\u5143\u7A7A\u95F4\u4ECE JVM \u5185\u8F6C\u79FB\u5230\u672C\u5730\u5185\u5B58\u4E0A\uFF08\u5BB9\u91CF\u53D6\u51B3\u4E8E\u662F 32 \u4F4D\u6216\u662F 64 \u4F4D\u64CD\u4F5C\u7CFB\u7EDF\u7684\u53EF\u7528\u865A\u62DF\u5185\u5B58\u5927\u5C0F\uFF09\u3002JDK 1.8 \u7684\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u5728\u5806\u533A\uFF0C\u8FD0\u884C\u65F6\u5E38\u91CF\u6C60\u5728\u65B9\u6CD5\u533A\u3002</p><p><strong>\u5173\u4E8E<code>String</code>\u65B0\u5EFA\u7684\u5BF9\u8C61</strong></p><p>\u9700\u8981\u6CE8\u610F\uFF0C\u4F7F\u7528<code>new</code>\u5173\u952E\u5B57\uFF0C\u6BD4\u5982<code>String a = new String(&quot;hello&quot;);</code><strong>\u53EF\u80FD</strong>\u4F1A\u521B\u5EFA\u4E24\u4E2A\u5BF9\u8C61\u3002\u4E00\u4E2A\u662F\u5B57\u7B26\u5E38\u91CF\u6C60\u4E2D\u7684<code>hello</code>\u5B57\u7B26\u4E32\uFF0C\u53E6\u4E00\u4E2A\u662F\u5728\u5806\u4E2D\u521B\u5EFA\u7684\u65B0\u5BF9\u8C61\uFF0C\u65B0\u5BF9\u8C61\u7684\u5F15\u7528\u6307\u5411\u5B57\u7B26\u5E38\u91CF\u6C60\u4E2D\u7684<em>hello</em>\u5B57\u7B26\u4E32\uFF0C\u6700\u7EC8\u8FD4\u56DE\u7684\u662F\u65B0\u521B\u5EFA\u7684\u5BF9\u8C61\u7684\u5730\u5740\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// 1\u3001\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61</span>
<span class="token comment">// &quot;aaa&quot; \u4F1A\u76F4\u63A5\u5728\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u4E2D\u521B\u5EFA</span>
<span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 2\u3001\u521B\u5EFA\u4E24\u4E2A\u5BF9\u8C61\uFF0C\u4E00\u4E2A StringBuilder\uFF0C\u4E00\u4E2A String</span>
<span class="token comment">// s1 + \u201Cis\u201D, \u56E0\u4E3A\u6B64\u65F6\u7F16\u8BD1\u5668\u4E0D\u77E5\u9053 s1 \u662F\u4EC0\u4E48\uFF0C\u800C String \u662F\u4E00\u4E2A\u4E0D\u53EF\u4FEE\u6539\u7684\u7C7B,</span>
<span class="token comment">// \u6240\u4EE5\u8FD9\u91CC\u7684 &quot; + &quot; \u4F1A\u88AB\u7F16\u8BD1\u6210(\u7B49\u540C\u4E8E)\uFF1A</span>
<span class="token comment">// String s2 = new StringBuilder(&quot;aaa&quot;).append(&quot;is&quot;).toString();</span>
<span class="token class-name">String</span> s2 <span class="token operator">=</span> s1 <span class="token operator">+</span> <span class="token string">&quot;is&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 3\u3001\u521B\u5EFA\u4E24\u4E2A\u5BF9\u8C61</span>
<span class="token comment">// s1.concat() \u4F1A\u65B0\u5EFA\u4E00\u4E2A String \u5BF9\u8C61\uFF0C\u56E0\u4E3A &quot;great&quot; \u662F\u53CC\u5F15\u53F7\u58F0\u660E\u7684\uFF0C\u6240\u4EE5\u540C\u6837\u5728\u5B57\u7B26\u5E38\u91CF\u6C60\u4E2D\u521B\u5EFA\u4E00\u4E2A&quot;great&quot;\u5BF9\u8C61</span>
s1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&quot;great&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
s2<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// concat \u65B9\u6CD5\u7684\u5B9E\u73B0</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> otherLen <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>otherLen <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> len <span class="token operator">=</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> len <span class="token operator">+</span> otherLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
    str<span class="token punctuation">.</span><span class="token function">getChars</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 String \u5BF9\u8C61</span>
<span class="token punctuation">}</span>

<span class="token comment">// 4\u3001\u521B\u5EFA\u4E24\u4E2A\u5BF9\u8C61</span>
<span class="token comment">// s1 += \u201Ccountry\u201D \u4E5F\u5C31\u662F s1 = s1 + \u201Ccountry\u201D\uFF0C\u548C\u7B2C\u4E8C\u4E2A\u8BED\u53E5\u4E00\u6837\u521B\u5EFA\u4E24\u4E2A\u5BF9\u8C61</span>
s1 <span class="token operator">+=</span> <span class="token string">&quot;country&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 5\u3001\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61</span>
<span class="token comment">// \u5BF9\u4E8E\u4E24\u4E2A\u58F0\u660E\u7684\u5B57\u7B26\u4E32\u4F7F\u7528 &quot;+&quot; \u62FC\u63A5, \u56E0\u4E3A JVM \u7684\u4F18\u5316\uFF0C\u4F1A\u5C06\u62FC\u63A5\u540E\u7684\u7ED3\u679C\u653E\u5165\u5E38\u91CF\u6C60</span>
s3 <span class="token operator">=</span> <span class="token string">&quot;aaa&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// StringBuilder \u4E2D toString \u65B9\u6CD5\u7684\u5B9E\u73B0</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Create a copy, don&#39;t share the array</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><br><h3 id="object" tabindex="-1">Object <a class="header-anchor" href="#object" aria-hidden="true">#</a></h3><blockquote><p>Class Object is the root of the class hierarchy. Every class has Object as a superclass. All objects, including arrays, implement the methods of this class.</p></blockquote><p><strong>\u901A\u7528\u65B9\u6CD5</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// [\u54C8\u5E0C\u78B0\u649E](https://www.jianshu.com/p/379680144004)</span>
<span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5224\u65AD\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u7B49\u4EF7</span>
<span class="token comment">// 1\u3001\u5BF9\u4E8E\u57FA\u672C\u7C7B\u578B\uFF0C== \u5224\u65AD\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49\uFF0C\u57FA\u672C\u7C7B\u578B\u6CA1\u6709 equals \u65B9\u6CD5</span>
<span class="token comment">// 2\u3001\u5BF9\u4E8E\u5F15\u7528\u7C7B\u578B\uFF0C== \u5224\u65AD\u5F15\u7528\u5BF9\u8C61\u7684\u5730\u5740\u662F\u5426\u76F8\u7B49\uFF0C\u800C equals \u5224\u65AD\u5F15\u7528\u7684\u5BF9\u8C61\u662F\u5426\u7B49\u4EF7\u3002\u7B49\u4EF7\u7684\u4E24\u4E2A\u5BF9\u8C61\u6563\u5217\u503C\u4E00\u5B9A\u76F8\u540C\uFF0C\u4F46\u662F\u6563\u5217\u503C\u76F8\u540C\u7684\u4E24\u4E2A\u5BF9\u8C61\u4E0D\u4E00\u5B9A\u7B49\u4EF7\u3002\u5224\u65AD\u7B49\u4EF7\u9700\u8981\u7528\u5230 hashCode \u65B9\u6CD5</span>
<span class="token comment">// 3\u3001\u5982\u679C\u6CA1\u6709\u5BF9 equals \u65B9\u6CD5\u8FDB\u884C\u91CD\u5199\uFF0C\u8C03\u7528\u7684\u4ECD\u7136\u662F Object \u7C7B\u4E2D\u7684\u65B9\u6CD5\uFF0C\u800C Object \u7C7B\u4E2D\u7684 equals \u65B9\u6CD5\u4E2D\u662F\u4F7F\u7528 == \u6765\u6BD4\u8F83\u7684</span>
<span class="token comment">// \u5728\u91CD\u5199 equals \u65B9\u6CD5\u65F6\u5E94\u5F53\u91CD\u5199 hashCode \u65B9\u6CD5\uFF0C\u4FDD\u8BC1\u7B49\u4EF7\u7684\u4E24\u4E2A\u5BF9\u8C61\u6563\u5217\u503C\u76F8\u7B49</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * First, if the class of this object does not implement the interface Cloneable, then a CloneNotSupportedException is thrown
 * \u91CD\u5199 clone \u65B9\u6CD5\u7684\u7C7B\u5FC5\u987B\u5B9E\u73B0 Cloneable \u63A5\u53E3\uFF0C\u5426\u5219\u4F7F\u7528 clone \u7684\u65F6\u5019\u5C06\u4F1A\u629B\u51FA CloneNotSupportedException \u5F02\u5E38
 * clone \u65B9\u6CD5\u5E76\u4E0D\u662F Cloneable \u63A5\u53E3\u7684\u65B9\u6CD5\uFF0C\u800C\u662F Object \u7684\u4E00\u4E2A protected \u65B9\u6CD5\u3002Cloneable \u63A5\u53E3\u53EA\u662F\u89C4\u5B9A\u3002*
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">native</span> <span class="token class-name">Object</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">CloneNotSupportedException</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;@&quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token keyword">long</span> timeout<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token keyword">long</span> timeout<span class="token punctuation">,</span> <span class="token keyword">int</span> nanos<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.
 * \u5F53\u5783\u573E\u6536\u96C6\u5668\u8BA4\u4E3A\u5F53\u524D\u5BF9\u8C61\u4E3A\u53EF\u56DE\u6536\u65F6\uFF08\u6CA1\u6709\u5176\u4ED6\u5BF9\u8C61\u5F15\u7528\uFF09\uFF0C\u7531\u5783\u573E\u6536\u96C6\u5668\u6267\u884C finalize \u65B9\u6CD5
 * The finalize method may take any action, including making this object available again to other threads; the usual purpose of finalize, however, is to perform cleanup actions before the object is irrevocably discarded.
 * finalize \u53EF\u4EE5\u505A\u4EFB\u4F55\u4E8B\u60C5\uFF0C\u5305\u62EC\u8BA9\u5F53\u524D\u5BF9\u8C61\u518D\u6B21\u88AB\u5176\u4ED6\u7EBF\u7A0B\u6240\u4F7F\u7528\u3002\u4F46\u662F\u4E3B\u8981\u7684\u7528\u5904\u662F\u5728\u5F53\u524D\u5BF9\u8C61\u88AB\u5783\u573E\u56DE\u6536\u5668\u56DE\u6536\u4E4B\u524D\u8FDB\u884C\u4E00\u4E9B\u6E05\u7406\u64CD\u4F5C\u3002\u6BD4\u5982\u6570\u636E\u5E93\u5173\u95ED\u8FDE\u63A5\u6216\u6587\u4EF6\u64CD\u4F5C\u7684\u5173\u95ED\u64CD\u4F5C\u3002
 * The finalize method of class Object performs no special action; it simply returns normally. Subclasses of Object may override this definition.
 * Object \u4E2D\u7684 finalize \u65B9\u6CD5\u5E76\u6CA1\u6709\u7279\u522B\u7684\u64CD\u4F5C\uFF0C\u8981\u60F3\u5B9E\u73B0\u5176\u4ED6\u64CD\u4F5C\u9700\u8981\u5B50\u7C7B\u91CD\u5199\u6B21\u65B9\u6CD5
 * The Java programming language does not guarantee which thread will invoke the finalize method for any given object.
 * Java \u7A0B\u5E8F\u4E0D\u80FD\u4FDD\u8BC1\u7531\u67D0\u4E2A\u6307\u5B9A\u7684\u7EBF\u7A0B\u6765\u6267\u884C finalize \u65B9\u6CD5
 * It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked.
 * \u5B83\u53EA\u4FDD\u8BC1\u6267\u884C finalize \u65B9\u6CD5\u7684\u7EBF\u7A0B\u4E0D\u4F1A\u6301\u6709\u4EFB\u4F55\u540C\u6B65\u9501
 * If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates.
 * \u5982\u679C\u5728 finalize \u65B9\u6CD5\u4E2D\u629B\u51FA\u5F02\u5E38\uFF0C\u90A3\u4E48\u5F02\u5E38\u5C06\u4F1A\u88AB\u5FFD\u89C6\uFF0C\u5E76\u4E14\u5BF9\u8C61\u4E0D\u4F1A\u88AB\u7EC8\u6B62\u3002
 * The finalize method is never invoked more than once by a Java virtual machine for any given object.
 * \u4EFB\u4F55\u4E00\u4E2A\u5BF9\u8C61\u7684 finalize \u65B9\u6CD5\u90FD\u53EA\u4F1A\u88AB JVM \u6267\u884C\u4E00\u6B21*
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><p><strong><code>hashCode</code> \u63A2\u7A76</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// String#hashCode \u4E3A\u4F8B</span>
<span class="token comment">/**
 * Returns a hash code for this string. The hash code for a String object is computed as
 * s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
 * using int arithmetic, where s[i] is the ith character of the string
 * s[i] \u8868\u793A\u5B57\u7B26\u4E32 s \u4E2D\u7684\u7B2C i \u4E2A\u5B57\u7B26
 * n is the length of the string
 * and ^ indicates exponentiation \u7B26\u53F7 ^ \u8868\u793A\u6C42\u5E42
 * The hash value of the empty string is zero
 */</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> hash<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span> val<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">*</span> h <span class="token operator">+</span> val<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        hash <span class="token operator">=</span> h<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> h<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><code>hashCode</code>\u65B9\u6CD5\u662F\u4E3A\u4E86\u83B7\u53D6\u5F53\u524D\u5BF9\u8C61\u7684\u6563\u5217\u503C\uFF0C\u7406\u60F3\u7684\u6563\u5217\u51FD\u6570\u5E94\u5F53\u5177\u6709\u5747\u5300\u6027\uFF0C\u5426\u5219\u5C06\u4F1A\u9020\u6210<a href="https://www.jianshu.com/p/379680144004" target="_blank" rel="noopener noreferrer">\u54C8\u5E0C\u78B0\u649E</a>\u3002\u4E0D\u76F8\u7B49\u7684\u5BF9\u8C61\u5E94\u5F53\u5747\u5300\u5206\u5E03\u5230\u6240\u6709\u53EF\u80FD\u7684\u6563\u5217\u503C\u4E0A\uFF0C\u8FD9\u5C31\u8981\u6C42\u6563\u5217\u51FD\u6570\u8981\u628A\u6240\u6709\u57DF\u7684\u503C\u90FD\u8003\u8651\u8FDB\u6765\u3002</p><p>\u53EF\u4EE5\u5C06\u6BCF\u4E2A\u57DF\u90FD\u5F53\u6210 R \u8FDB\u5236\u7684\u67D0\u4E00\u4F4D\uFF0C\u7136\u540E\u7EC4\u6210\u4E00\u4E2A R \u8FDB\u5236\u7684\u6574\u6570\u3002R \u4E00\u822C\u53D6 31\uFF0C\u56E0\u4E3A\u5B83\u662F\u4E00\u4E2A\u5947\u7D20\u6570\uFF0C\u5982\u679C\u662F\u5076\u6570\u7684\u8BDD\uFF0C\u5F53\u51FA\u73B0\u4E58\u6CD5\u6EA2\u51FA\uFF0C\u4FE1\u606F\u5C31\u4F1A\u4E22\u5931\uFF0C\u56E0\u4E3A\u4E0E 2 \u76F8\u4E58\u76F8\u5F53\u4E8E\u5411\u5DE6\u79FB\u4E00\u4F4D\u3002\u4E00\u4E2A\u6570\u4E0E 31 \u76F8\u4E58\u53EF\u4EE5\u8F6C\u6362\u6210\u79FB\u4F4D\u548C\u51CF\u6CD5\uFF1A <code>31*x == (x&lt;&lt;5)-x</code>\uFF0C\u7F16\u8BD1\u5668\u4F1A\u81EA\u52A8\u8FDB\u884C\u8FD9\u4E2A\u4F18\u5316\u3002</p><p><strong><code>clone</code>\u4E0E\u6DF1\u6D45\u62F7\u8D1D</strong></p><ul><li>\u6D45\u62F7\u8D1D \u590D\u5236\u51FA\u6765\u7684\u5BF9\u8C61\u7684\u6240\u6709\u53D8\u91CF\u90FD\u542B\u6709\u4E0E\u539F\u8C61\u76F8\u540C\u7684\u503C\uFF0C\u800C\u4E14\u53D8\u91CF\u4E2D<strong>\u5BF9\u5176\u4ED6\u5BF9\u8C61\u7684\u5F15\u7528\u548C\u539F\u5BF9\u8C61\u7684\u5F15\u7528\u76F8\u540C</strong>\u3002\u6D45\u62F7\u8D1D<strong>\u4EC5\u4EC5\u662F\u590D\u5236\u76EE\u6807\u5BF9\u8C61\uFF0C\u4E0D\u590D\u5236\u76EE\u6807\u5BF9\u8C61\u5F15\u7528\u7684\u5176\u4ED6\u5BF9\u8C61</strong></li><li>\u6DF1\u62F7\u8D1D \u590D\u5236\u51FA\u6765\u7684\u5BF9\u8C61\u7684\u6240\u6709\u53D8\u91CF\u90FD\u542B\u6709\u4E0E\u539F\u5BF9\u8C61\u76F8\u540C\u7684\u503C\uFF0C\u4F46\u662F\u53D8\u91CF\u4E2D<strong>\u5BF9\u5176\u4ED6\u5BF9\u8C61\u7684\u5F15\u7528\u6307\u5411\u590D\u5236\u51FA\u6765\u7684\u65B0\u7684\u5F15\u7528\u5BF9\u8C61</strong>\uFF0C\u800C\u4E0D\u518D\u662F\u539F\u6709\u7684\u5F15\u7528\u5BF9\u8C61\u3002\u6DF1\u62F7\u8D1D\u4F1A<strong>\u628A\u76EE\u6807\u5BF9\u8C61\u6240\u5F15\u7528\u7684\u5BF9\u8C61\u90FD\u590D\u5236\u4E00\u904D</strong></li></ul><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u6D45\u62F7\u8D1D</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AAA</span> <span class="token keyword">implements</span> <span class="token class-name">Cloneable</span> <span class="token punctuation">{</span>

  <span class="token comment">// ...</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">AAA</span> clone <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      clone <span class="token operator">=</span> <span class="token punctuation">(</span>AAA<span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">CloneNotSupportedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> clone<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u6DF1\u62F7\u8D1D</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BBB</span> <span class="token keyword">implements</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

  <span class="token keyword">private</span> <span class="token class-name">AAA</span> a<span class="token punctuation">;</span>

  <span class="token comment">// ...</span>

  <span class="token comment">// deepClone v1</span>
  <span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">BBB</span> clone <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5B8C\u6210\u57FA\u672C\u6570\u636E\u7C7B\u578B\u7684\u514B\u9686</span>
      clone <span class="token operator">=</span> <span class="token punctuation">(</span>BBB<span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5BF9\u5F15\u7528\u7C7B\u578B\u7684\u5C5E\u6027\u8FDB\u884C\u5355\u72EC\u5904\u7406</span>
      clone<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token punctuation">(</span>AAA<span class="token punctuation">)</span> a<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">CloneNotSupportedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> clone<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

    <span class="token comment">// \u5E8F\u5217\u5316\u65B9\u5F0F\u5B9E\u73B0\u6DF1\u62F7\u8D1D deepClone v2</span>
    <span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">deepCloneV2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BBB</span> clone <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

      <span class="token comment">// \u521B\u5EFA\u6D41\u5BF9\u8C61</span>
      <span class="token class-name">ByteArrayOutputStream</span> baos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token class-name">ByteArrayInputStream</span> bais <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token class-name">ObjectOutputStream</span> oos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token class-name">ObjectInputStream</span> ois <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1. \u5148\u5E8F\u5217\u5316</span>
        baos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        oos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>baos<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2. \u5C06\u5F53\u524D\u5BF9\u8C61\u4EE5\u6D41\u7684\u5F62\u5F0F\u8F93\u51FA</span>
        oos<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3. \u53CD\u5E8F\u5217\u5316</span>
        bais <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>baos<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ois <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>bais<span class="token punctuation">)</span><span class="token punctuation">;</span>
        clone <span class="token operator">=</span> <span class="token punctuation">(</span>BBB<span class="token punctuation">)</span> ois<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> clone<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          baos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          bais<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          oos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ois<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><br><h3 id="\u6BD4\u8F83\u5668" tabindex="-1">\u6BD4\u8F83\u5668 <a class="header-anchor" href="#\u6BD4\u8F83\u5668" aria-hidden="true">#</a></h3><h4 id="comparable" tabindex="-1">Comparable <a class="header-anchor" href="#comparable" aria-hidden="true">#</a></h4><blockquote><p><code>Comparable</code>\u63A5\u53E3\u5BF9\u5B9E\u73B0\u5B83\u7684\u6BCF\u4E2A\u7C7B\u7684\u5B9E\u4F8B\u5BF9\u8C61\u8FDB\u884C\u6574\u4F53\u6392\u5E8F\uFF0C\u79F0\u4E3A\u7C7B\u7684\u81EA\u7136\u6392\u5E8F</p></blockquote><p><strong>How to use</strong></p><ul><li>\u5B9E\u73B0<code>Comaprable</code>\u63A5\u53E3\u7684\u7C7B\u91CD\u5199<code>compareTo()</code>\u65B9\u6CD5\uFF0C\u7C7B\u7684\u5B9E\u4F8B\u5BF9\u8C61\u5373\u53EF\u901A\u8FC7<code>compareTo()</code> \u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u6765\u6BD4\u8F83\u5927\u5C0F\uFF1B</li><li>\u82E5\u5F53\u524D\u5BF9\u8C61<code>this</code>\u5927\u4E8E\u5F62\u53C2\u5BF9\u8C61<code>obj</code>\uFF0C\u5219\u8FD4\u56DE\u6B63\u6574\u6570\uFF0C\u5426\u5219\u8FD4\u56DE\u8D1F\u6574\u6570\uFF1B</li><li>\u5B9E\u73B0<code>Compatable</code>\u63A5\u53E3\u7684\u96C6\u5408\u6216\u6570\u7EC4\u53EF\u4EE5\u901A\u8FC7<code>Collections.sort()</code>\u6216<code>Arrays.sort()</code>\u65B9\u6CD5\u8FDB\u884C\u6392\u5E8F\u3002</li></ul><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">class</span> <span class="token class-name">MyCompare</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyCompare</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MyCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">MyCompare</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">CompareBean</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u201C-\u201D\u53F7\u4EE3\u8868\u9006\u5E8F\u6392\u5E8F</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">,</span> obj<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="comparator" tabindex="-1">Comparator <a class="header-anchor" href="#comparator" aria-hidden="true">#</a></h4><blockquote><p>\u5B9A\u5236\u6392\u5E8F</p></blockquote><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ComparatorTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;QW&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;AS&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ZX&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ER&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DF&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CV&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">String</span> o1<span class="token punctuation">,</span> <span class="token class-name">String</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>o1 <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token operator">&amp;&amp;</span> o2 <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> o1<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;\u6BD4\u8F83\u6570\u636E\u7C7B\u578B\u5F02\u5E38&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><strong>Comparable \u548C Comparator \u7684\u533A\u522B</strong></p><ul><li>\u4E00\u65E6\u7C7B\u5B9E\u73B0<code>Comparable</code>\u63A5\u53E3\uFF0C\u5219\u53EF\u4FDD\u8BC1\u5B9E\u73B0\u7C7B\u5728\u4EFB\u4F55\u4F4D\u7F6E\u90FD\u53EF\u4EE5\u6BD4\u8F83\u5927\u5C0F\uFF1B</li><li><code>Comparator</code>\u63A5\u53E3\u5C5E\u4E8E\u4E34\u65F6\u6027\u6BD4\u8F83</li></ul><br><h2 id="\u9762\u5411\u5BF9\u8C61" tabindex="-1">\u9762\u5411\u5BF9\u8C61 <a class="header-anchor" href="#\u9762\u5411\u5BF9\u8C61" aria-hidden="true">#</a></h2><h3 id="\u4E09\u4E2A\u7279\u6027" tabindex="-1">\u4E09\u4E2A\u7279\u6027 <a class="header-anchor" href="#\u4E09\u4E2A\u7279\u6027" aria-hidden="true">#</a></h3><ul><li>\u5C01\u88C5</li><li>\u7EE7\u627F</li><li>\u591A\u6001</li></ul><h4 id="\u5C01\u88C5" tabindex="-1">\u5C01\u88C5 <a class="header-anchor" href="#\u5C01\u88C5" aria-hidden="true">#</a></h4><p>\u5C06\u5BA2\u89C2\u4E8B\u7269\u62BD\u8C61\u4E3A\u903B\u8F91\u5B9E\u4F53\uFF0C\u5229\u7528\u62BD\u8C61\u6570\u636E\u7C7B\u578B\uFF0C\u5C06\u6570\u636E\u548C\u64CD\u4F5C\u5C01\u88C5\u5728\u4E00\u8D77\uFF0C\u6784\u6210\u4E00\u4E2A\u72EC\u7ACB\u5B9E\u4F53\u3002\u6570\u636E\u88AB\u9690\u85CF\u5728\u62BD\u8C61\u6570\u636E\u7C7B\u578B\u7684\u5185\u90E8\uFF0C\u53EA\u4FDD\u7559\u4E00\u4E9B\u5BF9\u5916\u63A5\u53E3\u4F7F\u4E4B\u4E0E\u5916\u90E8\u53D1\u751F\u8054\u7CFB\u3002\u8BBF\u95EE\u8005\u65E0\u9700\u77E5\u9053\u5BF9\u8C61\u5185\u90E8\u7684\u7EC6\u8282\uFF0C\u4F46\u53EF\u4EE5\u901A\u8FC7\u5BF9\u8C61\u5BF9\u5916\u63D0\u4F9B\u7684\u63A5\u53E3\u6765\u8BBF\u95EE\u8BE5\u5BF9\u8C61\u3002</p><p><strong>\u4F18\u70B9</strong></p><ul><li>\u9690\u85CF\u5B9E\u4F53\u5B9E\u73B0\u7684\u7EC6\u8282\uFF1B</li><li>\u63D0\u9AD8\u5B89\u5168\u6027\uFF0C\u8BBE\u5B9A\u8BBF\u95EE\u63A7\u5236\uFF0C\u53EA\u5141\u8BB8\u5177\u6709\u7279\u5B9A\u6743\u9650\u7684\u4F7F\u7528\u8005\u8C03\u7528\uFF1B</li><li>\u7B80\u5316\u7F16\u7A0B\uFF0C\u8C03\u7528\u65B9\u65E0\u9700\u77E5\u9053\u529F\u80FD\u662F\u600E\u4E48\u5B9E\u73B0\u7684\uFF0C\u53EA\u7BA1\u8C03\u7528\u3002</li></ul><h4 id="\u7EE7\u627F" tabindex="-1">\u7EE7\u627F <a class="header-anchor" href="#\u7EE7\u627F" aria-hidden="true">#</a></h4><p>Java \u4E2D\u4F7F\u7528<code>extends</code>\u5173\u952E\u5B57\u6765\u5B9E\u73B0\uFF0C\u5E76\u4E14 Java \u4E0D\u652F\u6301\u591A\u7EE7\u627F\uFF0C\u53EA\u652F\u6301\u591A\u5B9E\u73B0\u3002\u56E0\u4E3A\u591A\u7EE7\u627F\u4F1A\u5B58\u5728\u83F1\u5F62\u7EE7\u627F\u95EE\u9898\u3002</p><p><img src="`+c+`" alt=""></p><h4 id="\u591A\u6001" tabindex="-1">\u591A\u6001 <a class="header-anchor" href="#\u591A\u6001" aria-hidden="true">#</a></h4><p>\u591A\u6001\u5C31\u662F\u6307\u4E00\u4E2A\u7C7B\u5B9E\u4F8B\u7684\u76F8\u540C\u65B9\u6CD5\u5728\u4E0D\u540C\u60C5\u5F62\u6709\u4E0D\u540C\u8868\u73B0\u5F62\u5F0F\u3002\u591A\u6001\u5206\u4E3A<strong>\u7F16\u8BD1\u65F6\u591A\u6001/\u9759\u6001\u591A\u6001</strong>\u548C<strong>\u8FD0\u884C\u65F6\u591A\u6001/\u52A8\u6001\u591A\u6001</strong>\uFF1A</p><ul><li>\u7F16\u8BD1\u65F6\u591A\u6001\u4E3B\u8981\u6307<strong>\u65B9\u6CD5\u7684\u91CD\u8F7D</strong></li><li>\u8FD0\u884C\u65F6\u591A\u6001\u6307<strong>\u7A0B\u5E8F\u4E2D\u5B9A\u4E49\u7684\u5BF9\u8C61\u5F15\u7528\u6240\u6307\u5411\u7684\u5177\u4F53\u7C7B\u578B\u5728\u8FD0\u884C\u671F\u95F4\u624D\u786E\u5B9A</strong></li></ul><p>Java \u4E2D\u591A\u6001\u662F\u4E00\u79CD\u8FD0\u884C\u671F\u7684\u72B6\u6001\u3002\u4E3A\u4E86\u5B9E\u73B0\u8FD0\u884C\u671F\u7684\u591A\u6001/\u52A8\u6001\u7ED1\u5B9A\uFF0C\u9700\u8981\u6EE1\u8DB3\u4E09\u4E2A\u6761\u4EF6\uFF1A</p><ul><li>\u6709\u7C7B\u7EE7\u627F\u6216\u8005\u63A5\u53E3\u5B9E\u73B0</li><li>\u5B50\u7C7B\u8981\u91CD\u5199\u7236\u7C7B\u7684\u65B9\u6CD5</li><li>\u7236\u7C7B\u7684\u5F15\u7528\u6307\u5411\u5B50\u7C7B\u7684\u5BF9\u8C61</li></ul><br><h3 id="\u4E94\u4E2A\u57FA\u672C\u539F\u5219" tabindex="-1">\u4E94\u4E2A\u57FA\u672C\u539F\u5219 <a class="header-anchor" href="#\u4E94\u4E2A\u57FA\u672C\u539F\u5219" aria-hidden="true">#</a></h3><ul><li>\u5355\u4E00\u804C\u8D23\u539F\u5219\uFF0C\u4E00\u4E2A\u7C7B\u5E94\u8BE5\u53EA\u4E13\u6CE8\u4E8E\u4E00\u4EF6\u4E8B</li><li>\u5F00\u653E\u5C01\u95ED\u539F\u5219\uFF0C\u4E00\u4E2A\u7C7B/\u6A21\u5757\u5E94\u8BE5\u662F\u53EF\u6269\u5C55\u7684\u800C\u4E0D\u662F\u53EF\u4FEE\u6539\u7684</li><li>\u91CC\u6C0F\u66FF\u6362\u539F\u5219\uFF0C\u5B50\u7C7B\u5FC5\u987B\u80FD\u591F\u66FF\u6362\u7236\u7C7B</li><li>\u4F9D\u8D56\u5012\u8F6C\u539F\u5219\uFF0C\u4F9D\u8D56\u4E8E\u62BD\u8C61\uFF0C\u5177\u4F53\u800C\u8A00\u5C31\u662F\u9AD8\u5C42\u6A21\u5757\u4E0D\u4F9D\u8D56\u4E8E\u5E95\u5C42\u6A21\u5757</li><li>\u63A5\u53E3\u9694\u79BB\u539F\u5219\uFF0C\u6A21\u5757\u95F4\u8981\u901A\u8FC7\u62BD\u8C61\u63A5\u53E3\u9694\u79BB\u5F00\uFF0C\u800C\u4E0D\u662F\u901A\u8FC7\u5177\u4F53\u7684\u7C7B\u5F3A\u8026\u5408\u8D77\u6765\u3002\u4F7F\u7528\u591A\u4E2A\u5C0F\u7684\u4E13\u95E8\u7684\u63A5\u53E3\uFF0C\u4E0D\u8981\u4F7F\u7528\u4E00\u4E2A\u5927\u7684\u603B\u63A5\u53E3</li></ul><br><h3 id="\u8BBF\u95EE\u6743\u9650" tabindex="-1">\u8BBF\u95EE\u6743\u9650 <a class="header-anchor" href="#\u8BBF\u95EE\u6743\u9650" aria-hidden="true">#</a></h3><p>\u8BBE\u8BA1\u826F\u597D\u7684\u6A21\u5757\u4F1A\u9690\u85CF\u6240\u6709\u7684\u5B9E\u73B0\u7EC6\u8282\uFF0C\u628A\u5B83\u7684 API \u4E0E\u5B83\u7684\u5B9E\u73B0\u6E05\u6670\u5730\u9694\u79BB\u5F00\u6765\u3002\u6A21\u5757\u4E4B\u95F4\u53EA\u901A\u8FC7\u5B83\u4EEC\u7684 API \u8FDB\u884C\u901A\u4FE1\uFF0C\u4E00\u4E2A\u6A21\u5757\u4E0D\u9700\u8981\u77E5\u9053\u5176\u4ED6\u6A21\u5757\u7684\u5185\u90E8\u5DE5\u4F5C\u60C5\u51B5\uFF0C\u8FD9\u4E2A\u6982\u5FF5\u88AB\u79F0\u4E3A\u4FE1\u606F\u9690\u85CF\u6216\u5C01\u88C5\u3002\u56E0\u6B64\u8BBF\u95EE\u6743\u9650\u5E94\u5F53\u5C3D\u53EF\u80FD\u5730\u4F7F\u6BCF\u4E2A\u7C7B\u6216\u8005\u6210\u5458\u4E0D\u88AB\u5916\u754C\u8BBF\u95EE\u3002</p><p>\u5982\u679C\u5B50\u7C7B\u7684\u65B9\u6CD5\u91CD\u5199\u4E86\u7236\u7C7B\u7684\u65B9\u6CD5\uFF0C\u90A3\u4E48\u5B50\u7C7B\u4E2D\u8BE5\u65B9\u6CD5\u7684\u8BBF\u95EE\u7EA7\u522B\u4E0D\u5141\u8BB8\u4F4E\u4E8E\u7236\u7C7B\u7684\u8BBF\u95EE\u7EA7\u522B\u3002\u8FD9\u662F\u4E3A\u4E86\u786E\u4FDD\u53EF\u4EE5\u4F7F\u7528\u7236\u7C7B\u5B9E\u4F8B\u7684\u5730\u65B9\u90FD\u53EF\u4EE5\u4F7F\u7528\u5B50\u7C7B\u5B9E\u4F8B\uFF0C\u4E5F\u5C31\u662F\u786E\u4FDD\u6EE1\u8DB3\u91CC\u6C0F\u66FF\u6362\u539F\u5219\u3002</p><p>Java \u4E2D\u6709\u4E09\u79CD\u6743\u9650\u4FEE\u9970\u7B26\uFF1A</p><ul><li><code>private</code>\uFF0C\u4EC5\u5F53\u524D\u7C7B\u53EF\u89C1\uFF1B</li><li><code>protected</code>\uFF0C\u7528\u4E8E\u4FEE\u9970\u6210\u5458\uFF0C\u8868\u793A\u5728\u7EE7\u627F\u4F53\u7CFB\u4E2D\u6210\u5458\u5BF9\u4E8E\u5B50\u7C7B\u53EF\u89C1\uFF1B</li><li><code>public</code>\uFF0C\u516C\u5171\u53EF\u89C1\uFF0C\u654F\u611F\u5B57\u6BB5\u51B3\u4E0D\u80FD\u662F\u516C\u6709\u7684\u3002\u8FD9\u4E48\u505A\u5C31\u5931\u53BB\u4E86\u5BF9\u8FD9\u4E2A\u5B57\u6BB5\u4FEE\u6539\u884C\u4E3A\u7684\u63A7\u5236\uFF0C\u5176\u4ED6\u7C7B\u53EF\u4EE5\u5BF9\u5176\u968F\u610F\u4FEE\u6539\uFF1B</li><li>\u4E0D\u52A0\u8BBF\u95EE\u4FEE\u9970\u7B26\uFF0C\u8868\u793A\u5305\u7EA7\u53EF\u89C1\u3002</li></ul><br><h3 id="\u62BD\u8C61\u7C7B\u4E0E\u63A5\u53E3" tabindex="-1">\u62BD\u8C61\u7C7B\u4E0E\u63A5\u53E3 <a class="header-anchor" href="#\u62BD\u8C61\u7C7B\u4E0E\u63A5\u53E3" aria-hidden="true">#</a></h3><p><strong>\u62BD\u8C61\u7C7B</strong></p><ul><li>\u62BD\u8C61\u7C7B\u548C\u62BD\u8C61\u65B9\u6CD5\u90FD\u4F7F\u7528<code>abstract</code>\u5173\u952E\u5B57\u8FDB\u884C\u58F0\u660E\u3002<strong>\u62BD\u8C61\u7C7B\u4E00\u822C\u4F1A\u5305\u542B\u62BD\u8C61\u65B9\u6CD5\uFF0C\u62BD\u8C61\u65B9\u6CD5\u4E00\u5B9A\u4F4D\u4E8E\u62BD\u8C61\u7C7B\u4E2D</strong>\uFF1B</li><li>\u62BD\u8C61\u7C7B\u548C\u666E\u901A\u7C7B\u6700\u5927\u7684\u533A\u522B\u662F\uFF0C<strong>\u62BD\u8C61\u7C7B\u4E0D\u80FD\u88AB\u5B9E\u4F8B\u5316</strong>\uFF0C\u9700\u8981\u5B50\u7C7B\u7EE7\u627F\u62BD\u8C61\u7C7B\uFF0C\u5E76\u5B9E\u73B0\u6240\u6709\u7684\u62BD\u8C61\u65B9\u6CD5\u624D\u80FD\u5B9E\u4F8B\u5316\u5176\u5B50\u7C7B\u3002</li></ul><p><strong>\u63A5\u53E3</strong></p><ul><li>\u63A5\u53E3\u4E2D\u4E0D\u80FD\u5B9A\u4E49\u6784\u9020\u5668\uFF0C\u610F\u5473\u7740\u63A5\u53E3\u4E0D\u80FD\u5B9E\u4F8B\u5316\u3002\u5982\u679C\u5B9E\u73B0\u7C7B\u5B9E\u73B0\u4E86\u63A5\u53E3\u4E2D\u7684\u6240\u6709\u62BD\u8C61\u65B9\u6CD5\uFF0C\u5219\u5B9E\u73B0\u7C7B\u53EF\u4EE5\u5B9E\u4F8B\u5316\u3002\u5426\u5219\u5B9E\u73B0\u7C7B\u4ECD\u4E3A\u4E00\u4E2A\u62BD\u8C61\u7C7B;</li><li>\u4ECE Java 8 \u5F00\u59CB\uFF0C\u63A5\u53E3\u4E5F\u53EF\u4EE5\u62E5\u6709\u9ED8\u8BA4\u7684\u65B9\u6CD5\u5B9E\u73B0\uFF0C\u9ED8\u8BA4\u65B9\u6CD5\u9700\u8981\u4F7F\u7528\u5173\u952E\u5B57<code>default</code>\u4FEE\u9970\u3002\u5728 Java 8 \u4E4B\u524D\uFF0C\u5982\u679C\u4E00\u4E2A\u63A5\u53E3\u60F3\u8981\u6DFB\u52A0\u65B0\u7684\u65B9\u6CD5\uFF0C\u90A3\u4E48\u8981\u4FEE\u6539\u6240\u6709\u5B9E\u73B0\u4E86\u8BE5\u63A5\u53E3\u7684\u7C7B;</li><li>\u63A5\u53E3\u7684\u6210\u5458\uFF08\u5B57\u6BB5/\u65B9\u6CD5\uFF09\u9ED8\u8BA4\u90FD\u662F<code>public</code>\u7684\uFF0C\u5E76\u4E14\u4E0D\u5141\u8BB8\u5B9A\u4E49\u4E3A<code>private</code>\u6216<code>protected</code>;</li><li>\u63A5\u53E3\u7684\u5B57\u6BB5\u9ED8\u8BA4\u90FD\u662F<code>static</code>\u548C<code>final</code>\u4FEE\u9970\u7684;</li><li>\u5982\u679C\u67D0\u4E2A\u7C7B\u5B9E\u73B0\u4E86\u591A\u4E2A\u63A5\u53E3\uFF0C\u800C\u8FD9\u4E9B\u63A5\u53E3\u4E2D\u5B9A\u4E49\u4E86\u540C\u540D\u540C\u53C2\u6570\u7684\u9ED8\u8BA4\u65B9\u6CD5\uFF0C\u5728\u5B9E\u73B0\u7C7B\u6CA1\u6709\u91CD\u5199\u6B64\u65B9\u6CD5\u7684\u60C5\u51B5\u4E0B\u4F1A\u62A5\u9519\u3002\u9700\u8981\u5B9E\u73B0\u7C7B\u5FC5\u987B\u91CD\u5199\u8BE5\u65B9\u6CD5\u3002</li></ul><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">interface</span> <span class="token class-name">ITest</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ITest&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">ITest2</span> <span class="token punctuation">{</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ITest2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ITest</span><span class="token punctuation">,</span> <span class="token class-name">ITest2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ITest.count = 2; // Cannot assign a value to final variable &#39;count&#39;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5982\u679C\u672A\u91CD\u5199 test \u65B9\u6CD5\uFF0C</span>
    <span class="token comment">// \u62A5\u9519\uFF1ATestImpl inherits unrelated defaults for test() from types ITest and ITest2</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ITest</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p><strong>\u62BD\u8C61\u7C7B\u4E0E\u63A5\u53E3\u7684\u533A\u522B</strong></p><ul><li>\u4ECE\u8BBE\u8BA1\u5C42\u9762\u4E0A\u770B\uFF0C\u62BD\u8C61\u7C7B\u63D0\u4F9B\u4E86\u4E00\u79CD IS-A \u5173\u7CFB\uFF0C\u90A3\u4E48\u5C31\u5FC5\u987B\u6EE1\u8DB3\u91CC\u5F0F\u66FF\u6362\u539F\u5219\uFF0C\u5373\u5B50\u7C7B\u5BF9\u8C61\u5FC5\u987B\u80FD\u591F\u66FF\u6362\u6389\u6240\u6709\u7236\u7C7B\u5BF9\u8C61\u3002\u800C\u63A5\u53E3\u66F4\u50CF\u662F\u4E00\u79CD LIKE-A \u5173\u7CFB\uFF0C\u5B83\u53EA\u662F\u63D0\u4F9B\u4E00\u79CD\u65B9\u6CD5\u5B9E\u73B0\u5951\u7EA6\uFF0C\u5E76\u4E0D\u8981\u6C42\u63A5\u53E3\u548C\u5B9E\u73B0\u63A5\u53E3\u7684\u7C7B\u5177\u6709 IS-A \u5173\u7CFB\uFF1B</li><li>\u4ECE\u4F7F\u7528\u4E0A\u6765\u770B\uFF0C\u4E00\u4E2A\u7C7B\u53EF\u4EE5\u5B9E\u73B0\u591A\u4E2A\u63A5\u53E3\uFF0C\u4F46\u662F\u4E0D\u80FD\u7EE7\u627F\u591A\u4E2A\u62BD\u8C61\u7C7B\u3002\u63A5\u53E3\u652F\u6301\u591A\u5B9E\u73B0\uFF0C\u5F25\u8865\u5355\u7EE7\u627F\u7684\u5C40\u9650\u6027\uFF0C\u63A5\u53E3\u4E0E\u63A5\u53E3\u4E4B\u95F4\u53EF\u4EE5\u591A\u7EE7\u627F\uFF1B</li><li>\u63A5\u53E3\u7684\u5B57\u6BB5\u53EA\u80FD\u662F<code>static</code>\u548C<code>final</code>\u7C7B\u578B\u7684\uFF0C\u800C\u62BD\u8C61\u7C7B\u7684\u5B57\u6BB5\u6CA1\u6709\u8FD9\u79CD\u9650\u5236\uFF1B</li><li>\u63A5\u53E3\u7684\u6210\u5458\u53EA\u80FD\u662F<code>public</code>\u7684\uFF0C\u800C\u62BD\u8C61\u7C7B\u7684\u6210\u5458\u53EF\u4EE5\u6709\u591A\u79CD\u8BBF\u95EE\u6743\u9650\uFF1B</li><li>\u5982\u679C\u5B50\u7C7B\u6216\u5B9E\u73B0\u7C7B\u7EE7\u627F\u7684\u7236\u7C7B\u548C\u5B9E\u73B0\u7684\u63A5\u53E3\u4E2D\uFF0C\u58F0\u660E\u4E86\u540C\u540D\u540C\u53C2\u6570\u7684\u65B9\u6CD5\uFF0C\u5B50\u7C7B\u5728\u6CA1\u6709\u91CD\u5199\u6B64\u65B9\u6CD5\u7684\u60C5\u51B5\u4E0B\u8C03\u7528\u7684\u662F\u7236\u7C7B\u4E2D\u540C\u540D\u540C\u53C2\u6570\u7684\u65B9\u6CD5\uFF08\u7C7B\u4F18\u5148\u539F\u5219\uFF09\u3002</li></ul><p><strong>\u91CD\u5199</strong> \u91CD\u5199\uFF0C\u5B58\u5728\u4E8E\u7EE7\u627F\u4F53\u7CFB\u4E2D\uFF0C\u6307\u5B50\u7C7B\u5B9E\u73B0\u4E86\u4E00\u4E2A\u4E0E\u7236\u7C7B\u5728\u65B9\u6CD5\u58F0\u660E\u4E0A\u5B8C\u5168\u76F8\u540C\u7684\u4E00\u4E2A\u65B9\u6CD5\u3002\u91CD\u5199\u6709\u6709\u4EE5\u4E0B\u9650\u5236\uFF1A</p><ul><li>\u5B50\u7C7B\u65B9\u6CD5\u7684\u8BBF\u95EE\u6743\u9650\u5FC5\u987B\u5927\u4E8E\u7B49\u4E8E\u7236\u7C7B\u65B9\u6CD5\uFF1B</li><li>\u5B50\u7C7B\u65B9\u6CD5\u7684\u8FD4\u56DE\u7C7B\u578B\u5FC5\u987B\u662F\u7236\u7C7B\u65B9\u6CD5\u8FD4\u56DE\u7C7B\u578B\u6216\u4E3A\u5176\u5B50\u7C7B\u578B\uFF1B</li><li>\u5B50\u7C7B\u629B\u51FA\u7684\u5F02\u5E38\u8303\u56F4\u5FC5\u987B\u5C0F\u4E8E\u7236\u7C7B\u65B9\u6CD5\u629B\u51FA\u7684\u5F02\u5E38\u3002</li></ul><p><strong>\u91CD\u8F7D</strong> \u91CD\u8F7D\uFF0C\u6307\u540C\u4E00\u4E2A\u7C7B\u4E2D\uFF0C\u5B58\u5728\u67D0\u4E00\u4E2A\u65B9\u6CD5\u4E0E\u5DF2\u7ECF\u5B58\u5728\u7684\u65B9\u6CD5<strong>\u540D\u79F0\u76F8\u540C</strong>\uFF0C\u4F46\u662F<strong>\u53C2\u6570\u7C7B\u578B/\u4E2A\u6570/\u987A\u5E8F</strong>\u81F3\u5C11\u6709\u4E00\u4E2A\u4E0D\u540C\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u91CD\u8F7D</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">over</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u8FD4\u56DE\u503C\u4E0D\u540C\uFF0C\u5176\u5B83\u90FD\u76F8\u540C\u4E0D\u7B97\u662F\u91CD\u8F7D</span>
<span class="token comment">// public int over() { return 1; } // &#39;over()&#39; is already defined</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">over</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">over</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token class-name">String</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">over</span><span class="token punctuation">(</span><span class="token class-name">String</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><br><h2 id="\u5173\u952E\u5B57" tabindex="-1">\u5173\u952E\u5B57 <a class="header-anchor" href="#\u5173\u952E\u5B57" aria-hidden="true">#</a></h2><h4 id="final" tabindex="-1">final <a class="header-anchor" href="#final" aria-hidden="true">#</a></h4><ul><li>\u4FEE\u9970\u7C7B\uFF0C\u5219\u8BE5\u7C7B\u4E0D\u80FD\u88AB\u7EE7\u627F\uFF1B</li><li>\u4FEE\u9970\u65B9\u6CD5\uFF0C\u5219\u8BE5\u65B9\u6CD5\u4E0D\u80FD\u88AB\u91CD\u5199\u3002\u800C\u4E14 JVM \u4F1A\u5C1D\u8BD5\u5C06<code>final</code>\u4FEE\u9970\u7684\u65B9\u6CD5\u5185\u8054\uFF0C\u4EE5\u63D0\u9AD8\u8FD0\u884C\u6548\u7387\uFF1B</li><li>\u4FEE\u9970\u53D8\u91CF/\u65B9\u6CD5\u53C2\u6570**\uFF0C\u79F0\u4E3A**\u5E38\u91CF**\uFF0C\u4E0D\u80FD\u88AB\u66F4\u6539\uFF0C\u5728\u7F16\u8BD1\u9636\u6BB5\u4F1A\u5B58\u5165\u5E38\u91CF\u6C60\u4E2D\u3002</li></ul><h4 id="static" tabindex="-1">static <a class="header-anchor" href="#static" aria-hidden="true">#</a></h4><ul><li><p>\u4FEE\u9970\u53D8\u91CF\uFF0C\u79F0\u4E3A<strong>\u9759\u6001\u53D8\u91CF</strong>\uFF0C\u975E static \u4FEE\u9970\u7684\u53D8\u91CF\u79F0\u4E3A<strong>\u5B9E\u4F8B\u53D8\u91CF</strong>\u3002\u9759\u6001\u53D8\u91CF\u4E0D\u5F52\u67D0\u4E00\u5B9E\u4F8B\u5BF9\u8C61\u6240\u6709\uFF0C\u800C\u662F\u8BE5\u7C7B\u6240\u6709\u5B9E\u4F8B\u5BF9\u8C61\u5171\u4EAB\uFF1B</p></li><li><p>\u4FEE\u9970\u65B9\u6CD5\uFF0C\u79F0\u4E3A<strong>\u9759\u6001\u65B9\u6CD5</strong>\uFF0C<strong>\u9759\u6001\u65B9\u6CD5\u5185\u53EA\u80FD\u8C03\u7528\u9759\u6001\u5C5E\u6027\u548C\u65B9\u6CD5</strong>\uFF08\u56E0\u4E3A\u7C7B\u52A0\u8F7D\u8FC7\u7A0B\u4E2D\u5148\u52A0\u8F7D\u9759\u6001\u53D8\u91CF\u548C\u9759\u6001\u65B9\u6CD5\uFF0C\u6B64\u65F6\u8FD8\u6CA1\u6709\u521B\u5EFA\u7C7B\u7684\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u65E0\u6CD5\u8C03\u7528\uFF09\u3002\u975E\u9759\u6001\u65B9\u6CD5\u65E2\u53EF\u4EE5\u8C03\u7528\u9759\u6001\u65B9\u6CD5\u548C\u5C5E\u6027\uFF0C\u4E5F\u53EF\u8C03\u7528\u975E\u9759\u6001\u65B9\u6CD5\u548C\u5C5E\u6027\u3002<strong>\u6240\u4EE5\u9759\u6001\u65B9\u6CD5\u5FC5\u987B\u6709\u5B9E\u73B0\uFF0C\u4E0D\u80FD\u662F\u62BD\u8C61\u65B9\u6CD5</strong>\uFF1B</p></li><li><p>\u4FEE\u9970\u4EE3\u7801\u5757\uFF0C\u79F0\u4E3A<strong>\u9759\u6001\u4EE3\u7801\u5757</strong>\uFF0C\u5728\u540C\u4E00\u4E2A\u7C7B\u4E2D\u80FD\u5B9A\u4E49\u591A\u4E2A\u3002\u5982\u679C\u4E00\u4E2A\u7C7B\u4E2D\u5B9A\u4E49\u4E86\u591A\u4E2A\u9759\u6001\u4EE3\u7801\u5757\uFF0C\u5219\u6309\u7167\u58F0\u660E\u5148\u540E\u987A\u6267\u884C\uFF1B</p></li><li><p>\u4FEE\u9970\u5185\u90E8\u7C7B\uFF0C\u79F0\u4E3A<strong>\u9759\u6001\u5185\u90E8\u7C7B</strong>\u3002\u975E\u9759\u6001\u5185\u90E8\u7C7B\u4F9D\u8D56\u4E8E\u5916\u90E8\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u800C\u9759\u6001\u5185\u90E8\u7C7B\u4E0D\u9700\u8981\uFF1B</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OuterClass</span> <span class="token punctuation">{</span>
<span class="token keyword">class</span> <span class="token class-name">InnerClass</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">StaticInnerClass</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// InnerClass innerClass = new InnerClass(); // &#39;OuterClass.this&#39; cannot be referenced from a static context</span>
        <span class="token class-name">OuterClass</span> outerClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OuterClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">InnerClass</span> innerClass <span class="token operator">=</span> outerClass<span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">InnerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StaticInnerClass</span> staticInnerClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StaticInnerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></li><li><p>\u9759\u6001\u5BFC\u5305\uFF0C<code>import static</code>\uFF0C\u5728 JDK 1.5 \u540E\u5F15\u5165\u7684\u65B0\u7279\u6027\uFF0C\u53EF\u4EE5\u7528\u6765\u6307\u5B9A\u5BFC\u5165\u67D0\u4E2A\u7C7B\u4E2D\u7684\u9759\u6001\u8D44\u6E90\uFF0C\u5E76\u4E14\u4E0D\u9700\u8981\u4F7F\u7528\u7C7B\u540D\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u9759\u6001\u65B9\u6CD5\u6216\u9759\u6001\u8D44\u6E90\u540D\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u9759\u6001\u5BFC\u5305</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul><p><strong><code>static</code> \u4FEE\u9970\u5185\u5BB9\u7684\u52A0\u8F7D\u65F6\u673A</strong></p><ul><li>\u968F\u7740\u7C7B\u7684\u52A0\u8F7D\u800C\u52A0\u8F7D\uFF0C\u53EF\u4EE5\u901A\u8FC7<code>\u7C7B\u540D.\u53D8\u91CF\u540D/\u65B9\u6CD5\u540D</code>\u8C03\u7528\uFF1B</li><li>\u65E9\u4E8E\u5BF9\u8C61\u521B\u5EFA\u65F6\u95F4\uFF0C\u5B58\u5728 JVM \u65B9\u6CD5\u533A\u7684\u9759\u6001\u57DF\u4E2D\uFF1B</li><li>\u7531\u4E8E\u7A0B\u5E8F\u6267\u884C\u65F6\uFF0C\u7C7B\u53EA\u4F1A\u52A0\u8F7D\u4E00\u6B21\uFF0C<code>static</code>\u4FEE\u9970\u7684\u5185\u5BB9\u4E5F\u53EA\u4F1A\u52A0\u8F7D\u4E00\u6B21\uFF1B</li><li>\u9759\u6001\u53D8\u91CF\u548C\u9759\u6001\u8BED\u53E5\u5757\u4F18\u5148\u4E8E\u5B9E\u4F8B\u53D8\u91CF\u548C\u666E\u901A\u8BED\u53E5\u5757\uFF0C\u9759\u6001\u53D8\u91CF\u548C\u9759\u6001\u8BED\u53E5\u5757\u7684\u521D\u59CB\u5316\u987A\u5E8F\u53D6\u51B3\u4E8E\u5B83\u4EEC\u5728\u4EE3\u7801\u4E2D\u7684\u987A\u5E8F\u3002<code>\u9759\u6001\u53D8\u91CF ==&gt; \u9759\u6001\u4EE3\u7801\u5757 ==&gt; \u5B9E\u4F8B\u53D8\u91CF ==&gt; \u666E\u901A\u4EE3\u7801\u5757 ==&gt; \u6784\u9020\u51FD\u6570</code>\uFF0C\u7531\u7236\u5230\u5B50\uFF0C\u9759\u6001\u5148\u884C\uFF1B</li><li>\u53EA\u80FD\u8BBF\u95EE\u6240\u5C5E\u7C7B\u7684\u9759\u6001\u5B57\u6BB5\u548C\u9759\u6001\u65B9\u6CD5\uFF0C\u65B9\u6CD5\u4E2D\u4E0D\u80FD\u6709<code>this</code>\u548C<code>super</code>\u5173\u952E\u5B57\u3002</li></ul><h4 id="transient" tabindex="-1">transient <a class="header-anchor" href="#transient" aria-hidden="true">#</a></h4><p><code>transient</code>\u53EA\u80FD\u4FEE\u9970\u53D8\u91CF\uFF0C\u4E0D\u80FD\u4FEE\u9970\u7C7B\u548C\u65B9\u6CD5\u3002<code>transient</code>\u5173\u952E\u5B57\u548C Java \u7684\u5E8F\u5217\u5316/\u53CD\u5E8F\u5217\u5316\u673A\u5236\u6709\u5173\u3002</p><br><h2 id="\u5E8F\u5217\u5316-\u53CD\u5E8F\u5217\u5316" tabindex="-1">\u5E8F\u5217\u5316/\u53CD\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u5E8F\u5217\u5316-\u53CD\u5E8F\u5217\u5316" aria-hidden="true">#</a></h2><h3 id="\u5E8F\u5217\u5316" tabindex="-1">\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u5E8F\u5217\u5316" aria-hidden="true">#</a></h3><p>\u5E8F\u5217\u5316\u662F\u6307<strong>\u628A\u4E00\u4E2A Java \u5BF9\u8C61\u53D8\u6210\u4E8C\u8FDB\u5236\u5185\u5BB9</strong>\uFF0C<strong>\u672C\u8D28\u4E0A\u5C31\u662F\u4E00\u4E2A<code>byte[]</code>\u6570\u7EC4</strong>\u3002\u5E8F\u5217\u5316\u540E\u53EF\u4EE5\u628A<code>byte[]</code>\u4FDD\u5B58\u5230\u6587\u4EF6\u4E2D\uFF0C\u6216\u8005\u901A\u8FC7\u7F51\u7EDC\u4F20\u8F93\uFF0C\u76F8\u5F53\u4E8E\u628A Java \u5BF9\u8C61\u5B58\u50A8\u5230\u6587\u4EF6\u6216\u8005\u901A\u8FC7\u7F51\u7EDC\u4F20\u8F93\u3002</p><p><strong>How to use</strong> \u4E00\u4E2A Java \u5BF9\u8C61\u8981\u5E8F\u5217\u5316\uFF0C\u5FC5\u987B\u5B9E\u73B0<code>java.io.Serializable</code>\u63A5\u53E3\u3002<code>Serializable</code>\u63A5\u53E3\u662F\u4E00\u4E2A\u7A7A\u63A5\u53E3\uFF0C\u6CA1\u6709\u5B9A\u4E49\u4EFB\u4F55\u65B9\u6CD5\u3002\u8FD9\u6837\u7684\u7A7A\u63A5\u53E3\u79F0\u4E3A<strong>\u6807\u8BB0\u63A5\u53E3\uFF08Marker Interface\uFF09</strong>\uFF0C\u5B9E\u73B0\u4E86\u6807\u8BB0\u63A5\u53E3\u7684\u7C7B\u4EC5\u4EC5\u662F\u7ED9\u81EA\u8EAB\u8D34\u4E86\u4E2A\u6807\u8BB0\uFF0C\u5E76\u6CA1\u6709\u589E\u52A0\u4EFB\u4F55\u65B9\u6CD5\u3002</p><p>Java \u5BF9\u8C61\u5E8F\u5217\u5316\u7684\u65F6\u5019\uFF0C\u5BF9\u8C61\u4E2D\u7684\u67D0\u4E9B\u5B57\u6BB5\uFF08\u6BD4\u5982\u8BF4\u7528\u6237\u5BC6\u7801\u7B49\u654F\u611F\u4FE1\u606F\uFF09\u4E0D\u60F3\u5E8F\u5217\u5316\u53EF\u4EE5\u4F7F\u7528<code>transient</code>\u5173\u952E\u5B57\u4FEE\u9970\uFF0C\u4EE5\u963B\u6B62\u5BF9\u8C61\u5B9E\u4F8B\u5BF9\u7528\u6B64\u5173\u952E\u5B57\u4FEE\u9970\u7684\u53D8\u91CF\u8FDB\u884C\u5E8F\u5217\u5316\u3002\u5F53\u5BF9\u8C61\u88AB\u53CD\u5E8F\u5217\u5316\u65F6\uFF0C\u88AB<code>transient</code>\u5173\u952E\u5B57\u4FEE\u9970\u7684\u53D8\u91CF<strong>\u4E0D\u4F1A\u88AB\u6301\u4E45\u5316\u548C\u6062\u590D</strong>\u3002</p><br><h3 id="\u53CD\u5E8F\u5217\u5316" tabindex="-1">\u53CD\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u53CD\u5E8F\u5217\u5316" aria-hidden="true">#</a></h3><p>\u53CD\u5E8F\u5217\u5316\uFF0C\u5373<strong>\u628A\u4E00\u4E2A\u4E8C\u8FDB\u5236\u5185\u5BB9\uFF08<code>byte[]</code>\u6570\u7EC4\uFF09\u53D8\u56DE Java \u5BF9\u8C61</strong>\u3002\u53CD\u5E8F\u5217\u5316\u64CD\u4F5C\u53EF\u4EE5\u4ECE\u6587\u4EF6\u4E2D\u6216\u7F51\u7EDC\u4E0A\u8BFB\u53D6<code>byte[]</code>\u5E76\u628A\u5B83\u53CD\u5E8F\u5217\u5316\u56DE Java \u5BF9\u8C61\u3002</p><p><strong>\u53CD\u5E8F\u5217\u5316\u53EF\u80FD\u4F1A\u629B\u51FA\u4EE5\u4E0B\u5F02\u5E38</strong>\uFF1A</p><ul><li><code>ClassNotFoundException</code>\uFF1A\u6CA1\u6709\u627E\u5230\u5BF9\u5E94\u7684<em>Class</em>\u3002 \u5BF9\u4E8E<code>ClassNotFoundException</code>\uFF0C\u5E38\u89C1\u4E8E\u4E00\u53F0\u7535\u8111\u4E0A\u7684 Java \u7A0B\u5E8F\u628A\u4E00\u4E2A Java \u5BF9\u8C61\uFF0C\u4F8B\u5982\uFF0C<code>Person</code>\u5BF9\u8C61\u5E8F\u5217\u5316\u4EE5\u540E\uFF0C\u901A\u8FC7\u7F51\u7EDC\u4F20\u7ED9\u53E6\u4E00\u53F0\u7535\u8111\u4E0A\u7684\u53E6\u4E00\u4E2A Java \u7A0B\u5E8F\uFF0C\u4F46\u662F\u8FD9\u53F0\u7535\u8111\u7684 Java \u7A0B\u5E8F\u5E76\u6CA1\u6709\u5B9A\u4E49<code>Person</code>\u7C7B\uFF0C\u6240\u4EE5\u65E0\u6CD5\u53CD\u5E8F\u5217\u5316\uFF1B</li><li><code>InvalidClassException</code>\uFF1A<em>Class</em>\u4E0D\u5339\u914D\u3002 \u5BF9\u4E8E<code>InvalidClassException</code>\uFF0C\u5E38\u89C1\u4E8E\u5E8F\u5217\u5316\u7684<code>Person</code>\u5BF9\u8C61\u5B9A\u4E49\u4E86\u4E00\u4E2A<code>int</code>\u7C7B\u578B\u7684<code>age</code>\u5B57\u6BB5\uFF0C\u4F46\u662F\u53CD\u5E8F\u5217\u5316\u65F6\uFF0C<code>Person</code>\u7C7B\u5B9A\u4E49\u7684<code>age</code>\u5B57\u6BB5\u88AB\u6539\u6210\u4E86<code>long</code>\u7C7B\u578B\uFF0C\u6240\u4EE5\u5BFC\u81F4<em>Class</em>\u4E0D\u517C\u5BB9\uFF1B \u4E3A\u4E86\u907F\u514D\u8FD9\u79CD<em>Class</em>\u5B9A\u4E49\u53D8\u52A8\u5BFC\u81F4\u7684\u4E0D\u517C\u5BB9\uFF0CJava \u7684\u5E8F\u5217\u5316\u5141\u8BB8<em>Class</em>\u5B9A\u4E49\u4E00\u4E2A\u7279\u6B8A\u7684<code>serialVersionUID</code>\u9759\u6001\u53D8\u91CF\uFF0C\u7528\u4E8E\u6807\u8BC6 Java \u7C7B\u7684\u5E8F\u5217\u5316\u201C\u7248\u672C\u201D\uFF0C\u901A\u5E38\u53EF\u4EE5\u7531 IDE \u81EA\u52A8\u751F\u6210\u3002 <mark>\u5982\u679C\u589E\u52A0\u6216\u4FEE\u6539\u4E86\u5B57\u6BB5\uFF0C\u53EF\u4EE5\u6539\u53D8<em>serialVersionUID</em>\u7684\u503C\uFF0C\u8FD9\u6837\u5C31\u80FD\u81EA\u52A8\u963B\u6B62\u4E0D\u5339\u914D\u7684</mark></li></ul><p><strong>\u53CD\u5E8F\u5217\u5316\u6CE8\u610F\u4E8B\u9879</strong></p><ul><li><mark>\u53CD\u5E8F\u5217\u5316\u65F6\uFF0C\u7531 JVM \u76F4\u63A5\u6784\u9020\u51FA Java \u5BF9\u8C61\uFF0C\u4E0D\u8C03\u7528\u6784\u9020\u65B9\u6CD5\u3002\u6784\u9020\u65B9\u6CD5\u5185\u90E8\u7684\u4EE3\u7801\u5728\u53CD\u5E8F\u5217\u5316\u65F6\u4E0D\u4F1A\u6267\u884C</mark>\uFF1B</li><li>Java \u7684\u5E8F\u5217\u5316\u673A\u5236\u4EC5\u9002\u7528\u4E8E Java\uFF0C\u5982\u679C\u9700\u8981\u4E0E\u5176\u5B83\u8BED\u8A00\u4EA4\u6362\u6570\u636E\uFF0C\u5FC5\u987B\u4F7F\u7528\u901A\u7528\u7684\u5E8F\u5217\u5316\u65B9\u6CD5\uFF0C\u4F8B\u5982 JSON\uFF1B</li><li>\u56E0\u4E3A Java \u7684\u5E8F\u5217\u5316\u673A\u5236\u53EF\u4EE5\u5BFC\u81F4\u4E00\u4E2A\u5B9E\u4F8B\u80FD\u76F4\u63A5\u4ECE<code>byte[]</code>\u6570\u7EC4\u521B\u5EFA\uFF0C\u800C\u4E0D\u7ECF\u8FC7\u6784\u9020\u65B9\u6CD5\uFF0C\u56E0\u6B64\uFF0C\u5B83\u5B58\u5728\u4E00\u5B9A\u7684\u5B89\u5168\u9690\u60A3\u3002<strong>\u4E00\u4E2A\u7CBE\u5FC3\u6784\u9020\u7684<code>byte[]</code>\u6570\u7EC4\u88AB\u53CD\u5E8F\u5217\u5316\u540E\u53EF\u4EE5\u6267\u884C\u7279\u5B9A\u7684 Java \u4EE3\u7801\uFF0C\u4ECE\u800C\u5BFC\u81F4\u4E25\u91CD\u7684\u5B89\u5168\u6F0F\u6D1E</strong>\uFF1B</li><li>Java \u672C\u8EAB\u63D0\u4F9B\u7684\u57FA\u4E8E\u5BF9\u8C61\u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u673A\u5236\u5B58\u5728\u517C\u5BB9\u6027\u95EE\u9898\u3002\u66F4\u597D\u7684\u5E8F\u5217\u5316\u65B9\u6CD5\u662F\u901A\u8FC7 JSON \u8FD9\u6837\u7684\u901A\u7528\u6570\u636E\u7ED3\u6784\u6765\u5B9E\u73B0\uFF0C\u53EA\u8F93\u51FA\u57FA\u672C\u7C7B\u578B\uFF08\u5305\u62EC String \uFF09\u7684\u5185\u5BB9\uFF0C\u800C\u4E0D\u5B58\u50A8\u4EFB\u4F55\u4E0E\u4EE3\u7801\u76F8\u5173\u7684\u4FE1\u606F\u3002</li></ul><p><strong>How to use</strong></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u5E8F\u5217\u5316\u4FDD\u5B58\u5230\u6587\u4EF6\u4E2D\uFF0C\u5E76\u4ECE\u6587\u4EF6\u4E2D\u53CD\u5E8F\u5217\u5316\u6062\u590D\u6570\u636E</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ObjectOutInStreamTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;java-demo/src/main/resources/oos-write-test.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteArrayOutputStream</span> bos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteArrayInputStream</span> bis <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ObjectOutputStream</span> oos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ObjectInputStream</span> ois <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
            bos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            oos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>bos<span class="token punctuation">)</span><span class="token punctuation">;</span>

            fos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u5E8F\u5217\u5316</span>
            oos<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span><span class="token number">1230</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            oos<span class="token punctuation">.</span><span class="token function">writeUTF</span><span class="token punctuation">(</span><span class="token string">&quot;asdff&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            oos<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;asss&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;adsffzvc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>bos<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            bis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>bos<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            ois <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>bis<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u53CD\u5E8F\u5217\u5316</span>
            <span class="token comment">// \u8BFB\u548C\u5199\u7684\u7C7B\u578B\u987A\u5E8F\u9700\u8981\u4E00\u81F4</span>
            <span class="token keyword">int</span> inputInt <span class="token operator">=</span> ois<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> str <span class="token operator">=</span> ois<span class="token punctuation">.</span><span class="token function">readUTF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> obj <span class="token operator">=</span> ois<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>inputInt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// close...</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><br><h2 id="\u5F02\u5E38" tabindex="-1">\u5F02\u5E38 <a class="header-anchor" href="#\u5F02\u5E38" aria-hidden="true">#</a></h2><p><strong>\u5F02\u5E38\u4F53\u7CFB\u6846\u67B6</strong></p><p><img src="`+l+`" alt=""></p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * The Throwable class is the superclass of all errors and exceptions in the Java language.
 * Throwable \u662F Java \u4E2D\u6240\u6709 Error \u548C Exception \u7684\u7236\u7C7B
 * Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java throw statement.
 * \u53EA\u6709 Throwable \u53CA\u5176\u5B50\u7C7B\u5F02\u5E38\u624D\u80FD\u88AB JVM \u901A\u8FC7 Java \u7684 throw \u8BED\u53E5\u629B\u51FA
 * Similarly, only this class or one of its subclasses can be the argument type in a catch clause.
 * \u540C\u6837\uFF0C\u4EC5\u6709 Throwable \u53CA\u5176\u5B50\u7C7B\u5F02\u5E38\u624D\u80FD\u88AB catch \u8BED\u53E5\u6355\u83B7
 * For the purposes of compile-time checking of exceptions, Throwable and any subclass of Throwable that is not also a subclass of either RuntimeException or Error are regarded as checked exceptions.
 * \u5BF9\u4E8E\u7F16\u8BD1\u671F\u95F4\u7684\u68C0\u67E5\u65F6\u5F02\u5E38\uFF0C\u53EA\u6709 Throwable \u53CA\u5176\u6CA1\u6709\u7EE7\u627F\u81EA RuntimeException \u7684\u5B50\u7C7B\u6216 Error \u624D\u4F1A\u88AB\u8BA4\u4E3A\u662F\u68C0\u67E5\u65F6\u5F02\u5E38
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Throwable</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><br><h3 id="\u5F02\u5E38\u6355\u83B7" tabindex="-1">\u5F02\u5E38\u6355\u83B7 <a class="header-anchor" href="#\u5F02\u5E38\u6355\u83B7" aria-hidden="true">#</a></h3><p><strong>1\u3001<code>try-catch-finally</code></strong></p><p>1\uFF09\u591A\u4E2A catch \u8BED\u53E5\u7684\u65F6\u5019\uFF0C\u524D\u9762 catch \u7684<code>Exception</code>\u4E0D\u80FD\u5927\u4E8E\u540E\u9762\uFF0C\u5426\u5219\u540E\u9762\u7684 catch \u5C06\u6355\u83B7\u4E0D\u5230\u5F02\u5E38\uFF1B</p><p>2\uFF09try \u4E2D\u82E5\u662F\u6709<code>return</code>\u6216\u8005\u5728 catch \u5757\u4E2D\u6709<code>return</code>\uFF0Cfinally \u7167\u6837\u6267\u884C\uFF0C\u5E76\u4E14 finally \u7684\u6267\u884C\u65E9\u4E8E try/catch \u4E2D\u7684<code>return</code>\uFF1B</p><p>3\uFF09finally \u4E2D\u82E5\u662F\u51FA\u73B0<code>return</code>\uFF0C\u7A0B\u5E8F\u4F1A\u63D0\u524D\u9000\u51FA\uFF0C\u5E76\u4E14<code>return</code>\u7684\u8FD4\u56DE\u503C\u4E5F\u4E0D\u662F try \u6216\u8005 catch \u4E2D\u7684\u8FD4\u56DE\u503C\uFF0C\u800C\u662F finally \u4E2D\u8FD4\u56DE\u7684\u503C\u3002</p><p><strong>2\u3001<code>throws</code></strong></p><p>1\uFF09\u5B50\u7C7B\u91CD\u5199\u7684\u65B9\u6CD5\u629B\u51FA\u7684\u5F02\u5E38\u5FC5\u987B\u5C0F\u4E8E\u7236\u7C7B\u65B9\u6CD5\u4E2D\u629B\u51FA\u7684\u5F02\u5E38\uFF1B</p><p>2\uFF09<code>throws</code>\u7684\u65B9\u5F0F\u53EA\u662F\u5C06\u5F02\u5E38\u629B\u7ED9\u65B9\u6CD5\u7684\u8C03\u7528\u8005\uFF0C\u5E76<strong>\u6CA1\u6709\u771F\u6B63\u7684\u5904\u7406\u5F02\u5E38</strong>\u3002\u4F7F\u7528<code>try-catch-finally</code>\u4EE3\u7801\u5757\u624D\u80FD<strong>\u771F\u6B63\u5C06\u5F02\u5E38\u5904\u7406</strong>\u3002</p><p><strong>3\u3001Java 7 \u65B0\u589E\u7684 <code>try-with-resources</code> \u8BED\u6CD5</strong></p><p>\u5982\u679C\u8D44\u6E90\u7C7B\u5B9E\u73B0\u4E86<code>AutoCloseable</code>\u63A5\u53E3\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E2A\u8BED\u6CD5\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * An object that may hold resources (such as file or socket handles) until it is closed.
 * The close() method of an AutoCloseable object is called automatically when exiting a try-with-resources block for which the object has been declared in the resource specification header.
 * This construction ensures prompt release, avoiding resource exhaustion exceptions and errors that may otherwise occur.
 * \u8FD9\u4E2A\u7C7B\u80FD\u786E\u4FDD\u8D44\u6E90\u53EF\u4EE5\u8FC5\u901F\u91CA\u653E\uFF0C\u907F\u514D\u8D44\u6E90\u8017\u5C3D\u5F02\u5E38\u6216\u8005\u53EF\u80FD\u9020\u6210\u7684\u5176\u4ED6\u9519\u8BEF
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AutoCloseable</span> <span class="token punctuation">{</span>
  <span class="token comment">/**
   * This method is invoked automatically on objects managed by the try-with-resources statement.
   * The close method is unlikely to be invoked more than once and so this ensures that the resources are released in a timely manner.
   * Note that unlike the close method of java.io.Closeable, this close method is not required to be idempotent. 
   * close \u65B9\u6CD5\u4E0D\u5F3A\u5236\u8981\u6C42\u5E42\u7B49\u6027\uFF0C\u800C java.io.Closeable \u4E2D\u7684 close \u65B9\u6CD5\u8981\u6C42\u4FDD\u6301\u5E42\u7B49\u6027
   * In other words, calling this close method more than once may have some visible side effect, unlike Closeable.close which is required to have no effect if called more than once.
   * \u591A\u6B21\u6267\u884C\u6B64 close \u65B9\u6CD5\u53EF\u80FD\u4F1A\u5E26\u6765\u67D0\u4E9B\u526F\u4F5C\u7528
   * However, implementers of this interface are strongly encouraged to make their close methods idempotent.
   * \u56E0\u6B64\u5F3A\u70C8\u5EFA\u8BAE\u91CD\u5199 close \u65B9\u6CD5\u65F6\uFF0C\u4F7F\u5176\u4FDD\u6301\u5E42\u7B49\u6027
   */</span>
  <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u5927\u591A\u6570\u7684 Java \u6807\u51C6\u8D44\u6E90\u90FD\u7EE7\u627F\u4E86\u8FD9\u4E2A\u63A5\u53E3\u3002\u5728 try \u5B50\u53E5\u4E2D\u4F7F\u7528\u8D44\u6E90\uFF0C\u8D44\u6E90\u4F1A\u5728 try \u4EE3\u7801\u5757\u6267\u884C\u540E\u6216\u5F02\u5E38\u5904\u7406\u540E\u81EA\u52A8\u5173\u95ED\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TryWithResourceTest</span> <span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;./test.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// Java 7 \u65B0\u589E try-with-resources \u8BED\u6CD5  </span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>  
                <span class="token comment">// \u8D44\u6E90\u4F1A\u81EA\u52A8\u5173\u95ED\uFF0C\u4E0D\u9700\u8981\u5728\u7F16\u5199 finally \u4EE3\u7801\u5757  </span>
                <span class="token comment">// \u524D\u63D0\u662F\u4F7F\u7528\u5230\u7684\u8D44\u6E90\u90FD\u5B9E\u73B0\u4E86 AutoCloseable \u63A5\u53E3  </span>
                <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>  
            fos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            
            <span class="token comment">// \u65B9\u5F0F\u4E00  </span>
<span class="token comment">//            int available = fis.available();  </span>
<span class="token comment">//            byte[] buffer = new byte[available];  </span>
<span class="token comment">//            fis.read(buffer, 0, available);  </span>
<span class="token comment">//            String s = new String(buffer);  </span>
<span class="token comment">//            System.out.println(s);</span>

            <span class="token keyword">int</span> read <span class="token operator">=</span> fis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>  
            <span class="token keyword">while</span> <span class="token punctuation">(</span>read <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                s <span class="token operator">+=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>read<span class="token punctuation">)</span><span class="token punctuation">;</span>  
                read <span class="token operator">=</span> fis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><br><h3 id="\u5F02\u5E38\u8F93\u51FA" tabindex="-1">\u5F02\u5E38\u8F93\u51FA <a class="header-anchor" href="#\u5F02\u5E38\u8F93\u51FA" aria-hidden="true">#</a></h3><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * Prints this throwable and its backtrace to the standard error stream.
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>

<span class="token comment">/**
 * Returns the cause of this throwable or null if the cause is nonexistent or unknown.
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token class-name">Throwable</span> <span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">return</span> <span class="token punctuation">(</span>cause<span class="token operator">==</span><span class="token keyword">this</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> cause<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>

<span class="token comment">// Returns the detail message string of this throwable.</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">return</span> detailMessage<span class="token punctuation">;</span>  
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">Throwable</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> cause<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token function">fillInStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// detailMessage \u6709\u53EF\u80FD\u4F1A\u88AB\u8D4B\u503C\u4E3A null</span>
    detailMessage <span class="token operator">=</span> <span class="token punctuation">(</span>cause<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> cause<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">this</span><span class="token punctuation">.</span>cause <span class="token operator">=</span> cause<span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p><strong>Usage Notes</strong></p><p>\u5728\u9047\u5230<code>NullPointerException</code>\u65F6\uFF0C<code>getMessage()</code>\u65B9\u6CD5\u83B7\u53D6\u5230\u7684\u4FE1\u606F\u4E3A<code>null</code>\uFF0C\u8F93\u51FA\u5F02\u5E38\u65F6\u53EF\u80FD\u5BFC\u81F4\u7A7A\u6307\u9488\u5F02\u5E38\uFF0C\u7F16\u7801\u65F6\u5EFA\u8BAE\u76F4\u63A5\u8F93\u51FA<code>e.printStackTrace()</code>\u6253\u5370\u51FA\u5B8C\u6574\u7684\u5806\u6808\u4FE1\u606F\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">class</span> <span class="token class-name">NullPointerException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>  
	<span class="token keyword">public</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
		<span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">super</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuntimeException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
	    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token punctuation">}</span>
	<span class="token keyword">public</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
	    <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Exception</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
	    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token punctuation">}</span>
	<span class="token keyword">public</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
	    <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Throwable</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token class-name">Throwable</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
	    <span class="token function">fillInStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token comment">// NullPointerException \u8C03\u7528\u5E26\u53C2\u65B9\u6CD5\u65F6\uFF0CdetailMessage \u4F1A\u88AB\u8D4B\u503C\u4E3A null</span>
	    detailMessage <span class="token operator">=</span> message<span class="token punctuation">;</span>  
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><br><h3 id="\u5F02\u5E38\u5C4F\u853D" tabindex="-1">\u5F02\u5E38\u5C4F\u853D <a class="header-anchor" href="#\u5F02\u5E38\u5C4F\u853D" aria-hidden="true">#</a></h3><p>\u5728\u4F7F\u7528<code>try-finally</code>\u65F6\uFF0C\u82E5\u662F\u6355\u83B7\u5230\u591A\u4E2A\u5F02\u5E38\uFF0C\u4F1A\u9020\u6210\u5F02\u5E38\u5C4F\u853D\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">class</span> <span class="token class-name">MyConnection</span> <span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>  
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;start exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>  
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;close exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TryCatchTest</span> <span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">try</span> <span class="token punctuation">{</span>  
            <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5F02\u5E38\u5C4F\u853D</span>
        <span class="token comment">// \u666E\u901A\u7684 try-finally \u5757\u9762\u5BF9\u591A\u4E2A\u5F02\u5E38\u65F6\u53EF\u80FD\u4F1A\u9020\u6210\u5F02\u5E38\u5C4F\u853D</span>
        <span class="token class-name">MyConnection</span> mc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            mc<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            mc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u8F93\u51FA\u4EE5\u4E0B\u5F02\u5E38\uFF1A</p><div class="language-java line-numbers-mode"><pre><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Exception</span><span class="token operator">:</span> close exception
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>MyConnection</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token class-name">MyConnection</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">16</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>TryCatchTest</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">TryCatchTest</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">32</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>TryCatchTest</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">TryCatchTest</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C<code>start</code>\u65B9\u6CD5\u4E2D\u7684\u5F02\u5E38\u5E76\u6CA1\u6709\u8F93\u51FA\uFF0C\u800C\u662F\u88AB<code>close</code>\u65B9\u6CD5\u7684\u5F02\u5E38\u8986\u76D6\u4E86\u3002\u89E3\u51B3\u65B9\u6CD5\u6709\u4E24\u4E2A\uFF1A</p><ul><li><p>\u4F7F\u7528\u5B8C\u6574\u7684<code>try-catch-finally</code>\u4EE3\u7801\u5757</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
      mc<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      mc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8F93\u51FA\u5F02\u5E38\u683C\u5F0F\u5982\u4E0B</p><div class="language-java line-numbers-mode"><pre><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Exception</span><span class="token operator">:</span> start exception
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>MyConnection</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">MyConnection</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>TryCatchTest</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">TryCatchTest</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>TryCatchTest</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">TryCatchTest</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Exception</span><span class="token operator">:</span> close exception
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>MyConnection</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token class-name">MyConnection</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">16</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>TryCatchTest</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">TryCatchTest</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">34</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>TryCatchTest</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">TryCatchTest</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>\u4F7F\u7528<code>try-with-resources</code></p><blockquote><p>As of release 7, the platform supports the notion of suppressed exceptions (in conjunction with the try-with-resources statement). Java 7 \u5F00\u59CB\uFF0C\u914D\u5408 try-with- resources \u4EE3\u7801\u5757\uFF0C\u652F\u6301\u5F02\u5E38\u538B\u5236 Any exceptions that were suppressed in order to deliver an exception are printed out beneath the stack trace. \u4E3A\u4E86\u5F02\u5E38\u4F20\u9012\uFF0C\u4EFB\u4F55\u88AB\u538B\u5236\u7684\u5F02\u5E38\u90FD\u4F1A\u5728\u5806\u6808\u4FE1\u606F\u4E2D\u6253\u5370\u51FA\u6765</p></blockquote><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">class</span> <span class="token class-name">MyConnection</span> <span class="token keyword">implements</span> <span class="token class-name">AutoCloseable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;start exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;close exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConnectionTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span>
            <span class="token class-name">MyConnection</span> mc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mc<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u8FD0\u884C\u4E0A\u8FF0\u4EE3\u7801\uFF0C\u8F93\u51FA\u7684\u5F02\u5E38\u5982\u4E0B\uFF1A</p><div class="language-java line-numbers-mode"><pre><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Exception</span><span class="token operator">:</span> start exception
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>MyConnection</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">MyConnection</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>MyConnectionTest</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">MyConnectionTest</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">14</span><span class="token punctuation">)</span>
	<span class="token class-name">Suppressed</span><span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Exception</span><span class="token operator">:</span> close exception
		at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>MyConnection</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token class-name">MyConnection</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">16</span><span class="token punctuation">)</span>
		at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>MyConnectionTest</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">MyConnectionTest</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">15</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8F93\u51FA\u7684\u5185\u5BB9\u4E2D\u5305\u542B\u4E00\u4E2A\u4FE1\u606F\uFF1A<em>Suppressed</em>\uFF0C\u540E\u9762\u8DDF\u7740\u7684\u662F\u540E\u53D1\u751F\u7684\u5F02\u5E38\uFF0C\u88AB\u538B\u5236\u5728\u524D\u53D1\u751F\u7684\u5F02\u5E38\u4E0B\u3002\u67E5\u770B\u7F16\u8BD1\u540E\u7684\u5B57\u8282\u7801\uFF1A</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">MyConnection</span> mc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Throwable</span> var2 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            mc<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var12<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            var2 <span class="token operator">=</span> var12<span class="token punctuation">;</span>
            <span class="token keyword">throw</span> var12<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>var2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        mc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var11<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        var2<span class="token punctuation">.</span><span class="token function">addSuppressed</span><span class="token punctuation">(</span>var11<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    mc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var14<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        var14<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u7F16\u8BD1\u540E\u7684\u6E90\u7801\u591A\u51FA\u4E86\u4E00\u4E2A\u65B9\u6CD5\uFF1A<code>addSuppressed</code>\u3002\u8FD9\u662F<code>Throwable</code>\u7684\u65B9\u6CD5\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// Throwable#addSuppressed</span>
<span class="token comment">/**
 * Appends the specified exception to the exceptions that were suppressed in order to deliver this exception.
 * \u5C06\u6307\u5B9A\u7684\u5F02\u5E38\u8FFD\u52A0\u5230\u88AB\u538B\u5236\u7684\u5F02\u5E38\u4E0B\uFF0C\u4EE5\u4FDD\u6301\u5F02\u5E38\u7684\u4F20\u9012\u987A\u5E8F
 * This method is thread-safe and typically called (automatically and implicitly) by the try-with-resources statement.
 * \u6B64\u65B9\u6CD5\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u901A\u5E38\u6765\u8BF4\u7531 try-with-resources \u8BED\u53E5\u81EA\u52A8\u9690\u5F0F\u8C03\u7528
 * The suppression behavior is enabled unless disabled via a constructor.
 * \u901A\u5E38\u6765\u8BF4\uFF0C\u5F02\u5E38\u538B\u5236\u662F\u81EA\u52A8\u542F\u7528\u7684\uFF0C\u9664\u975E\u5728\u521B\u5EFA\u5F02\u5E38\u7684\u6784\u9020\u65B9\u6CD5\u4E2D\u5C06\u5176\u5173\u95ED
 * When suppression is disabled, this method does nothing other than to validate its argument.
 * \u5982\u679C\u5173\u95ED\u5F02\u5E38\u538B\u5236\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u9664\u4E86\u9A8C\u8BC1\u53C2\u6570\u5C31\u6CA1\u6709\u5176\u4ED6\u7528\u5904\u4E86
 *
 * Note that when one exception causes another exception, the first exception is usually caught and then the second exception is thrown in response.
 * \u5982\u679C\u6709\u4E00\u4E2A\u5F02\u5E38\u5F15\u8D77\u4E86\u53E6\u4E00\u4E2A\u5F02\u5E38\uFF0C\u7B2C\u4E00\u4E2A\u5F02\u5E38\u901A\u5E38\u4F1A\u88AB\u6355\u83B7\uFF0C\u7136\u540E\u7B2C\u4E8C\u4E2A\u5F02\u5E38\u4F1A\u88AB\u629B\u51FA\u4F5C\u4E3A\u54CD\u5E94\uFF08\u54CD\u5E94\u4E2D\u53EA\u6709\u7B2C\u4E8C\u4E2A\u5F02\u5E38\u7684\u4FE1\u606F\uFF0C\u4F46\u5B9E\u9645\u4E0A\u662F\u53D1\u751F\u4E86\u4E24\u5904\u5F02\u5E38\uFF0C\u800C\u7B2C\u4E00\u5904\u5F02\u5E38\u6B64\u65F6\u5E76\u6CA1\u6709\u88AB\u53D1\u73B0\uFF09\u3002
 * Only one of the thrown exceptions can be propagated
 * \u53EA\u6709\u629B\u51FA\u7684\u5F02\u5E38\u624D\u53EF\u4EE5\u88AB\u4F20\u64AD
 * In the try-with-resources statement, when there are two such exceptions, the exception originating from the try block is propagated and the exception from the finally block is added to the list of exceptions suppressed by the exception from the try block.
 * \u5728 try-with-resources \u8BED\u53E5\u4E2D\uFF0C\u5F53\u5176\u4E2D\u51FA\u73B0\u4E86\u4E24\u4E2A\u5F02\u5E38\u65F6\uFF0C\u6E90\u81EA try \u4EE3\u7801\u5757\u4E2D\u7684\u5F02\u5E38\u5C06\u4F1A\u88AB\u4F20\u64AD\uFF0C\u540C\u65F6 finally \u5757\u4E2D\u7684\u5F02\u5E38\u5C06\u4F1A\u88AB\u6DFB\u52A0\u5230 try \u5757\u7684\u538B\u5236\u5F02\u5E38\u5217\u8868\u4E2D
 * An exception may have suppressed exceptions while also being caused by another exception.
 * \u5F53\u4E00\u4E2A\u5F02\u5E38\u5BFC\u81F4\u5176\u4ED6\u5F02\u5E38\uFF0C\u4E5F\u53EF\u80FD\u4F1A\u4EA7\u751F\u5F02\u5E38\u538B\u5236
 * Note that programmer written code is also able to take advantage of calling this method in situations where there are multiple sibling exceptions and only one can be propagated.
 * \u5728\u7F16\u5199\u4EE3\u7801\u65F6\uFF0C\u82E5\u662F\u67D0\u5904\u51FA\u73B0\u4E86\u591A\u4E2A\u5F02\u5E38\uFF0C\u4F46\u662F\u53EA\u80FD\u591F\u4F20\u64AD\u5176\u4E2D\u4E00\u4E2A\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528\u6B64\u65B9\u6CD5
 */</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">addSuppressed</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exception <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>SELF_SUPPRESSION_MESSAGE<span class="token punctuation">,</span> exception<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>exception <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span>NULL_CAUSE_MESSAGE<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>suppressedExceptions <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// Suppressed exceptions not recorded</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>suppressedExceptions <span class="token operator">==</span> SUPPRESSED_SENTINEL<span class="token punctuation">)</span>
        suppressedExceptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    suppressedExceptions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>exception<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div></li></ul><br><h3 id="\u5F02\u5E38\u5904\u7406\u673A\u5236" tabindex="-1">\u5F02\u5E38\u5904\u7406\u673A\u5236 <a class="header-anchor" href="#\u5F02\u5E38\u5904\u7406\u673A\u5236" aria-hidden="true">#</a></h3><p>JVM \u4E2D\u4F7F\u7528<strong>\u5F02\u5E38\u8868</strong>\u6765\u5904\u7406 Java \u7A0B\u5E8F\u4E2D\u51FA\u73B0\u7684\u5F02\u5E38\u3002</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExceptionTableTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">tryCatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">tryCatchFinally</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">tryCatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;tryCatch - try&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">tryCatchFinally</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;tryCatchFinally - try&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;tryCatchFinally - finally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u5C06\u4E0A\u8FF0\u4EE3\u7801\u7F16\u8BD1\u6210<em>class</em>\u5B57\u8282\u7801\uFF0C\u518D\u4F7F\u7528<code>javap</code>\u547D\u4EE4\u8FDB\u884C\u53CD\u7F16\u8BD1\u64CD\u4F5C\uFF0C\u5F97\u5230\u4EE5\u4E0B\u5185\u5BB9\uFF1A</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// javac ExceptionTableTest.java</span>
<span class="token comment">// javap -c ExceptionTableTest</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>ExceptionTableTest</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span></span>ExceptionTableTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
       <span class="token number">0</span><span class="token operator">:</span> aload_0
       <span class="token number">1</span><span class="token operator">:</span> invokespecial #<span class="token number">1</span>                  <span class="token comment">// Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
       <span class="token number">4</span><span class="token operator">:</span> <span class="token keyword">return</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
       <span class="token number">0</span><span class="token operator">:</span> invokestatic  #<span class="token number">2</span>                  <span class="token comment">// Method tryCatch:()V</span>
       <span class="token number">3</span><span class="token operator">:</span> invokestatic  #<span class="token number">3</span>                  <span class="token comment">// Method tryCatchFinally:()V</span>
       <span class="token number">6</span><span class="token operator">:</span> <span class="token keyword">return</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">tryCatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
       <span class="token number">0</span><span class="token operator">:</span> ldc2_w        #<span class="token number">4</span>                  <span class="token comment">// long 100l</span>
       <span class="token number">3</span><span class="token operator">:</span> invokestatic  #<span class="token number">6</span>                  <span class="token comment">// Method java/lang/Thread.sleep:(J)V</span>
       <span class="token number">6</span><span class="token operator">:</span> getstatic     #<span class="token number">7</span>                  <span class="token comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span>
       <span class="token number">9</span><span class="token operator">:</span> ldc           #<span class="token number">8</span>                  <span class="token comment">// String tryCatch - try</span>
      <span class="token number">11</span><span class="token operator">:</span> invokevirtual #<span class="token number">9</span>                  <span class="token comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
      <span class="token number">14</span><span class="token operator">:</span> <span class="token keyword">goto</span>          <span class="token number">27</span>
      <span class="token number">17</span><span class="token operator">:</span> astore_0
      <span class="token number">18</span><span class="token operator">:</span> <span class="token keyword">new</span>           #<span class="token number">11</span>                 <span class="token comment">// class java/lang/RuntimeException</span>
      <span class="token number">21</span><span class="token operator">:</span> dup
      <span class="token number">22</span><span class="token operator">:</span> aload_0
      <span class="token number">23</span><span class="token operator">:</span> invokespecial #<span class="token number">12</span>                 <span class="token comment">// Method java/lang/RuntimeException.&quot;&lt;init&gt;&quot;:(Ljava/lang/Throwable;)V</span>
      <span class="token number">26</span><span class="token operator">:</span> athrow
      <span class="token number">27</span><span class="token operator">:</span> <span class="token keyword">return</span>
    <span class="token class-name">Exception</span> table<span class="token operator">:</span>
       from    <span class="token keyword">to</span>  <span class="token namespace">target</span> type
           <span class="token number">0</span>    <span class="token number">14</span>    <span class="token number">17</span>   <span class="token class-name">Class</span> java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">InterruptedException</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">tryCatchFinally</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
       <span class="token number">0</span><span class="token operator">:</span> ldc2_w        #<span class="token number">4</span>                  <span class="token comment">// long 100l</span>
       <span class="token number">3</span><span class="token operator">:</span> invokestatic  #<span class="token number">6</span>                  <span class="token comment">// Method java/lang/Thread.sleep:(J)V</span>
       <span class="token number">6</span><span class="token operator">:</span> getstatic     #<span class="token number">7</span>                  <span class="token comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span>
       <span class="token number">9</span><span class="token operator">:</span> ldc           #<span class="token number">13</span>                 <span class="token comment">// String tryCatchFinally - try</span>
      <span class="token number">11</span><span class="token operator">:</span> invokevirtual #<span class="token number">9</span>                  <span class="token comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
      <span class="token number">14</span><span class="token operator">:</span> getstatic     #<span class="token number">7</span>                  <span class="token comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span>
      <span class="token number">17</span><span class="token operator">:</span> ldc           #<span class="token number">14</span>                 <span class="token comment">// String tryCatchFinally - finally</span>
      <span class="token number">19</span><span class="token operator">:</span> invokevirtual #<span class="token number">9</span>                  <span class="token comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
      <span class="token number">22</span><span class="token operator">:</span> <span class="token keyword">goto</span>          <span class="token number">46</span>
      <span class="token number">25</span><span class="token operator">:</span> astore_0
      <span class="token number">26</span><span class="token operator">:</span> <span class="token keyword">new</span>           #<span class="token number">11</span>                 <span class="token comment">// class java/lang/RuntimeException</span>
      <span class="token number">29</span><span class="token operator">:</span> dup
      <span class="token number">30</span><span class="token operator">:</span> aload_0
      <span class="token number">31</span><span class="token operator">:</span> invokespecial #<span class="token number">12</span>                 <span class="token comment">// Method java/lang/RuntimeException.&quot;&lt;init&gt;&quot;:(Ljava/lang/Throwable;)V</span>
      <span class="token number">34</span><span class="token operator">:</span> athrow
      <span class="token number">35</span><span class="token operator">:</span> astore_1
      <span class="token number">36</span><span class="token operator">:</span> getstatic     #<span class="token number">7</span>                  <span class="token comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span>
      <span class="token number">39</span><span class="token operator">:</span> ldc           #<span class="token number">14</span>                 <span class="token comment">// String tryCatchFinally - finally</span>
      <span class="token number">41</span><span class="token operator">:</span> invokevirtual #<span class="token number">9</span>                  <span class="token comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
      <span class="token number">44</span><span class="token operator">:</span> aload_1
      <span class="token number">45</span><span class="token operator">:</span> athrow
      <span class="token number">46</span><span class="token operator">:</span> <span class="token keyword">return</span>
    <span class="token class-name">Exception</span> table<span class="token operator">:</span>
       from    <span class="token keyword">to</span>  <span class="token namespace">target</span> type
           <span class="token number">0</span>    <span class="token number">14</span>    <span class="token number">25</span>   <span class="token class-name">Class</span> java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">InterruptedException</span>
           <span class="token number">0</span>    <span class="token number">14</span>    <span class="token number">35</span>   any
          <span class="token number">25</span>    <span class="token number">36</span>    <span class="token number">35</span>   any
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><p>\u4ECE\u4E0A\u8FF0\u4EE3\u7801\u4E2D\u53EF\u4EE5\u53D1\u73B0\uFF0C<code>tryCatch</code>\u548C<code>tryCatchFinally</code>\u65B9\u6CD5\u7684\u672B\u5C3E\u90FD\u6709\u4E00\u4E2A<em>Exception table</em>\u3002\u5728\u5305\u542B try-catch \u5757\u7684\u65B9\u6CD5\u4E2D\u4F1A\u6709\u4E00\u4E2A\u5F02\u5E38\u8868\uFF0C\u5F02\u5E38\u8868\u5305\u542B\u4E00\u4E2A\u6216\u591A\u4E2A\u5F02\u5E38\u5904\u7406\u8005\uFF08Exception Handler\uFF09\u7684\u4FE1\u606F\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5305\u542B\u5982\u4E0B\uFF1A</p><ul><li><strong>from</strong>\uFF0C\u53EF\u80FD\u53D1\u751F\u5F02\u5E38\u7684\u8D77\u59CB\u70B9\uFF1B</li><li><strong>to</strong>\uFF0C\u53EF\u80FD\u53D1\u751F\u5F02\u5E38\u7684\u7ED3\u675F\u70B9\uFF1B</li><li><strong>taget</strong>\uFF0C\u5728 from \u548C to \u4E4B\u95F4\u53D1\u751F\u5F02\u5E38\u4E4B\u540E\uFF0C\u8C03\u7528 taget \u5904\u7684\u5F02\u5E38\u5904\u7406\u8005\uFF1B</li><li><strong>type</strong>\uFF0C\u5F02\u5E38\u5904\u7406\u8005\u5904\u7406\u7684\u5F02\u5E38\u7684\u7C7B\u4FE1\u606F\u3002</li></ul><p>\u4E0D\u540C\u7684\u662F try-catch-finally \u5757\u7684\u5F02\u5E38\u8868\u4E2D\u6709 3 \u884C\u6570\u636E\uFF0C\u4EE3\u8868\u7684\u610F\u601D\u5982\u4E0B\uFF1A</p><ul><li>\u5982\u679C 0 \u5230 3 \u4E4B\u95F4\uFF0C\u53D1\u751F\u4E86 Exception \u7C7B\u578B\u7684\u5F02\u5E38\uFF0C\u8C03\u7528 14 \u4F4D\u7F6E\u7684\u5F02\u5E38\u5904\u7406\u8005\uFF1B</li><li>\u5982\u679C 0 \u5230 3 \u4E4B\u95F4\uFF0C\u65E0\u8BBA\u53D1\u751F\u4EC0\u4E48\u5F02\u5E38\uFF0C\u90FD\u8C03\u7528 30 \u4F4D\u7F6E\u7684\u5904\u7406\u8005\uFF1B</li><li>\u5982\u679C 14 \u5230 19 \u4E4B\u95F4\uFF08catch \u5757\u7684\u90E8\u5206\uFF09\uFF0C\u65E0\u8BBA\u53D1\u751F\u4EC0\u4E48\u5F02\u5E38\uFF0C\u90FD\u8C03\u7528 30 \u4F4D\u7F6E\u7684\u5904\u7406\u8005\u3002</li></ul><p><strong>How it works</strong></p><p>\u5F53\u4E00\u4E2A\u5F02\u5E38\u53D1\u751F\u65F6:</p><ol><li>JVM \u4F1A\u5728\u51FA\u5F02\u5E38\u7684\u65B9\u6CD5\u4E2D\u67E5\u627E\u5BF9\u5E94\u7684\u5F02\u5E38\u8868\uFF0C\u770B\u662F\u5426\u6709\u5408\u9002\u7684\u5904\u7406\u8005\u6765\u8FDB\u884C\u5F02\u5E38\u5904\u7406\uFF1B</li><li>\u5982\u679C\u5F53\u524D\u65B9\u6CD5\u7684\u5F02\u5E38\u8868\u4E0D\u4E3A\u7A7A\uFF0C\u5E76\u4E14\u5F02\u5E38\u53D1\u751F\u5728 from \u548C to \u8282\u70B9\u4E4B\u95F4\uFF0C\u5F02\u5E38 type \u4E5F\u5339\u914D\uFF0CJVM \u5219\u8C03\u7528\u4F4D\u4E8E target \u7684\u5904\u7406\u8005\u8FDB\u884C\u5F02\u5E38\u5904\u7406\uFF1B</li><li>\u5982\u679C\u5728 2 \u4E2D\u672A\u627E\u5230\u5408\u9002\u5904\u7406\u8005\uFF0C\u5219\u7EE7\u7EED\u627E\u5F02\u5E38\u8868\u4E2D\u5269\u4F59\u7684\u6761\u76EE\uFF1B</li><li>\u5982\u679C\u5F53\u524D\u65B9\u6CD5\u7684\u5F02\u5E38\u8868\u65E0\u6CD5\u5904\u7406\uFF0C\u5219\u5411\u4E0A\u67E5\u627E\uFF08\u5F39\u6808\u64CD\u4F5C\uFF09\u65B9\u6CD5\u7684\u8C03\u7528\u5904\uFF0C\u5E76\u91CD\u590D 1 \u5230 3 \u7684\u6B65\u9AA4\uFF1B</li><li>\u5982\u679C\u6240\u6709\u7684\u6808\u6862\u88AB\u5F39\u51FA\u4ECD\u7136\u6CA1\u80FD\u5904\u7406\u5F53\u524D\u7684\u5F02\u5E38\uFF0C\u5219\u629B\u7ED9\u5F53\u524D\u7EBF\u7A0B\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5C31\u4F1A\u7EC8\u6B62\uFF1B</li><li>\u5982\u679C\u5F53\u524D\u7EBF\u7A0B\u662F\u6700\u540E\u4E00\u4E2A\u975E\u5B88\u62A4\u7EBF\u7A0B\uFF0C\u4E14\u672A\u5904\u7406\u5F02\u5E38\uFF0C\u5C06\u4F1A\u5BFC\u81F4 JVM \u7EC8\u6B62\u8FD0\u884C\u3002</li></ol><br><h2 id="\u6CE8\u89E3" tabindex="-1">\u6CE8\u89E3 <a class="header-anchor" href="#\u6CE8\u89E3" aria-hidden="true">#</a></h2><p>\u6CE8\u89E3\u662F JDK 1.5 \u7248\u672C\u5F00\u59CB\u5F15\u5165\u7684\u4E00\u4E2A\u7279\u6027\uFF0C\u7528\u4E8E\u5BF9\u4EE3\u7801\u8FDB\u884C\u8BF4\u660E\uFF0C\u53EF\u4EE5\u5BF9\u5305/\u7C7B/\u63A5\u53E3/\u5B57\u6BB5/\u65B9\u6CD5\u53C2\u6570/\u5C40\u90E8\u53D8\u91CF\u8FDB\u884C\u6CE8\u89E3\u3002</p><p><strong>\u4F5C\u7528</strong></p><ul><li><strong>\u751F\u6210\u6587\u6863</strong>\uFF0C\u901A\u8FC7\u4EE3\u7801\u91CC\u6807\u8BC6\u7684\u5143\u6570\u636E\u751F\u6210 Java Doc \u6587\u6863\uFF1B</li><li><strong>\u7F16\u8BD1\u68C0\u67E5</strong>\uFF0C\u901A\u8FC7\u4EE3\u7801\u91CC\u6807\u8BC6\u7684\u5143\u6570\u636E\u8BA9\u7F16\u8BD1\u5668\u5728\u7F16\u8BD1\u671F\u95F4\u8FDB\u884C\u68C0\u67E5\u9A8C\u8BC1\uFF1B</li><li><strong>\u7F16\u8BD1\u65F6\u52A8\u6001\u5904\u7406</strong>\uFF0C\u7F16\u8BD1\u65F6\u901A\u8FC7\u4EE3\u7801\u91CC\u6807\u8BC6\u7684\u5143\u6570\u636E\u52A8\u6001\u5904\u7406\uFF0C\u4F8B\u5982\u52A8\u6001\u751F\u6210\u4EE3\u7801\uFF1B</li><li><strong>\u8FD0\u884C\u65F6\u52A8\u6001\u5904\u7406</strong>\uFF0C\u8FD0\u884C\u65F6\u901A\u8FC7\u4EE3\u7801\u91CC\u6807\u8BC6\u7684\u5143\u6570\u636E\u52A8\u6001\u5904\u7406\uFF0C\u4F8B\u5982\u4F7F\u7528\u53CD\u5C04\u6CE8\u5165\u5B9E\u4F8B\uFF08<code>@Autowired/@Resource</code>\uFF09\u3002</li></ul><br><h3 id="\u5143\u6CE8\u89E3" tabindex="-1">\u5143\u6CE8\u89E3 <a class="header-anchor" href="#\u5143\u6CE8\u89E3" aria-hidden="true">#</a></h3><blockquote><p>meta-annotation \u662F\u6CE8\u89E3\u7C7B\u4F7F\u7528\u7684\u6CE8\u89E3</p></blockquote><p><strong>@Target</strong></p><p>\u6307\u660E\u6CE8\u89E3\u7C7B\u53EF\u4FEE\u9970\u7684\u5BF9\u8C61\u8303\u56F4\u3002\u53EF\u4EE5\u7528\u4E8E\u4FEE\u9970\u7C7B/\u63A5\u53E3/\u679A\u4E3E/\u6CE8\u89E3\u7C7B/\u7C7B\u6210\u5458\uFF08\u65B9\u6CD5/\u65B9\u6CD5\u53C2\u6570/\u6784\u9020\u65B9\u6CD5/\u6210\u5458\u53D8\u91CF/\u679A\u4E3E\u503C\uFF09/\u65B9\u6CD5\u53C2\u6570\u548C\u672C\u5730\u53D8\u91CF\uFF0C\u53D6\u503C\u8303\u56F4\u5B9A\u4E49\u5728<code>ElementType</code>\u679A\u4E3E\u7C7B\u4E2D\uFF1A</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">ElementType</span> <span class="token punctuation">{</span>
    <span class="token comment">/** Class, interface (including annotation type), or enum declaration 
     * \u7C7B/\u63A5\u53E3/\u6CE8\u89E3\u7C7B/\u679A\u4E3E\u7C7B
     */</span>
    TYPE<span class="token punctuation">,</span>

    <span class="token comment">/** Field declaration (includes enum constants) 
     * \u6210\u5458\u53D8\u91CF\uFF0C\u5305\u62EC\u679A\u4E3E\u7C7B\u578B\u5E38\u91CF
     */</span>
    FIELD<span class="token punctuation">,</span>

    <span class="token comment">/** Method declaration \u65B9\u6CD5 */</span>
    METHOD<span class="token punctuation">,</span>

    <span class="token comment">/** Formal parameter declaration \u5F62\u53C2/\u65B9\u6CD5\u53C2\u6570 */</span>
    PARAMETER<span class="token punctuation">,</span>

    <span class="token comment">/** Constructor declaration \u6784\u9020\u65B9\u6CD5 */</span>
    CONSTRUCTOR<span class="token punctuation">,</span>

    <span class="token comment">/** Local variable declaration \u672C\u5730\u53D8\u91CF */</span>
    LOCAL_VARIABLE<span class="token punctuation">,</span>

    <span class="token comment">/** Annotation type declaration \u6CE8\u89E3\u7C7B\u578B */</span>
    ANNOTATION_TYPE<span class="token punctuation">,</span>

    <span class="token comment">/** Package declaration \u5305 */</span>
    PACKAGE<span class="token punctuation">,</span>

    <span class="token comment">/**
     * Type parameter declaration \u7C7B\u578B\u53C2\u6570
     * @since 1.8
     */</span>
    TYPE_PARAMETER<span class="token punctuation">,</span>

    <span class="token comment">/**
     * Use of a type
     * \u4F7F\u7528\u7C7B\u578B\u7684\u4EFB\u4F55\u5730\u65B9
     * @since 1.8
     */</span>
    TYPE_USE
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p><strong>@Retention</strong></p><p>\u8868\u793A\u6CE8\u89E3\u7C7B\u5728\u6CE8\u89E3\u5230\u5176\u4ED6\u7C7B\u4E0A\u4EE5\u540E\uFF0C\u53EF\u88AB\u4FDD\u7559\u5230\u4F55\u65F6\u3002\u4E00\u5171\u6709\u4E09\u79CD\u7B56\u7565\uFF0C\u5B9A\u4E49\u5728<code>RetentionPolicy</code>\u679A\u4E3E\u7C7B\u4E2D\uFF1A</p><div class="language-java line-numbers-mode"><pre><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">RetentionPolicy</span> <span class="token punctuation">{</span>
    SOURCE<span class="token punctuation">,</span>    <span class="token comment">// \u6E90\u6587\u4EF6\u4FDD\u7559</span>
    CLASS<span class="token punctuation">,</span>       <span class="token comment">// \u7F16\u8BD1\u671F\u4FDD\u7559\uFF0C\u9ED8\u8BA4\u503C</span>
    RUNTIME   <span class="token comment">// \u8FD0\u884C\u671F\u4FDD\u7559\uFF0C\u53EF\u901A\u8FC7\u53CD\u5C04\u53BB\u83B7\u53D6\u6CE8\u89E3\u4FE1\u606F</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>@Documented</strong></p><p>\u751F\u6210 Javadoc \u6587\u6863\u4FE1\u606F\u7684\u65F6\u5019\u4FDD\u7559\u6CE8\u89E3\uFF0C\u5BF9\u7C7B\u4F5C\u8F85\u52A9\u8BF4\u660E\u3002</p><p><strong>@Inherited</strong></p><p>\u88AB\u5B83\u4FEE\u9970\u7684\u6CE8\u89E3\u5C06\u5177\u6709\u7EE7\u627F\u6027\u3002\u5982\u679C\u67D0\u4E2A\u7C7B\u4F7F\u7528\u4E86\u88AB<code>@Inherited</code>\u4FEE\u9970\u7684\u6CE8\u89E3\uFF0C\u5219\u5176\u5B50\u7C7B\u5C06\u81EA\u52A8\u5177\u6709\u8BE5\u6CE8\u89E3\u3002</p><p><strong>@Repeatable</strong></p><p>Java 8 \u65B0\u589E\uFF0C\u5141\u8BB8\u5728\u540C\u4E00\u7C7B\u578B/\u7C7B/\u5C5E\u6027/\u65B9\u6CD5\u4E2D\u591A\u6B21\u4F7F\u7528\u540C\u4E00\u4E2A\u6CE8\u89E3\u3002</p><p><strong>@Native</strong></p><p>Java 8 \u65B0\u589E\uFF0C\u4F7F\u7528<code>@Native</code>\u6CE8\u89E3\u4FEE\u9970\u6210\u5458\u53D8\u91CF\uFF0C\u8868\u793A\u8BE5\u53D8\u91CF\u53EF\u4EE5\u88AB<em>native</em>\u4EE3\u7801\u5F15\u7528\uFF0C\u5E38\u5E38\u88AB\u4EE3\u7801\u751F\u6210\u5DE5\u5177\u4F7F\u7528\u3002\u4E0D\u5E38\u4F7F\u7528\u3002</p><br><h3 id="\u5185\u7F6E\u6CE8\u89E3" tabindex="-1">\u5185\u7F6E\u6CE8\u89E3 <a class="header-anchor" href="#\u5185\u7F6E\u6CE8\u89E3" aria-hidden="true">#</a></h3><ul><li><code>@Override</code>\uFF0C\u8868\u793A\u5F53\u524D\u7684\u65B9\u6CD5\u5B9A\u4E49\u5C06\u8986\u76D6\u7236\u7C7B\u4E2D\u7684\u65B9\u6CD5\uFF1B</li><li><code>@Deprecated</code>\uFF0C\u8868\u793A\u4EE3\u7801\u88AB\u5F03\u7528\uFF0C\u5982\u679C\u4F7F\u7528\u4E86\u88AB<code>@Deprecated</code>\u6CE8\u89E3\u6807\u6CE8\u7684\u4EE3\u7801\u5219\u7F16\u8BD1\u5668\u5C06\u53D1\u51FA\u8B66\u544A\uFF1B</li><li><code>@SuppressWarnings</code>\uFF0C\u8868\u793A\u5173\u95ED\u7F16\u8BD1\u5668\u8B66\u544A\u4FE1\u606F\u3002</li></ul><br><h3 id="\u81EA\u5B9A\u4E49\u6CE8\u89E3" tabindex="-1">\u81EA\u5B9A\u4E49\u6CE8\u89E3 <a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u6CE8\u89E3" aria-hidden="true">#</a></h3><div class="language-java line-numbers-mode"><pre><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">)</span> <span class="token comment">// \u53EF\u6807\u6CE8\u5728\u7C7B/\u63A5\u53E3/\u679A\u4E3E\u7C7B\u4E0A</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span> <span class="token comment">// \u4FDD\u7559\u5230\u8FD0\u884C\u671F\u95F4\u53EF\u7528</span>
<span class="token annotation punctuation">@Repeatable</span><span class="token punctuation">(</span><span class="token class-name">MyAnnos</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token comment">// \u8868\u793A @MyAnno \u6CE8\u89E3\u662F\u53EF\u91CD\u590D\u6CE8\u89E3\uFF0C\u91CD\u590D\u7684\u6CE8\u89E3\u4FDD\u5B58\u5230 MyAnnos \u7684 values \u4E2D</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">MyAnno</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span>  <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">MyAnnos</span> <span class="token punctuation">{</span>
    <span class="token class-name">MyAnno</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-java line-numbers-mode"><pre><code><span class="token comment">// \u4F7F\u7528\u6CE8\u89E3</span>
<span class="token comment">// \u5229\u7528\u53CD\u5C04\u83B7\u53D6\u6CE8\u89E3\u4FE1\u606F</span>
<span class="token annotation punctuation">@MyAnno</span><span class="token punctuation">(</span><span class="token string">&quot;annotation-value&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@MyAnno</span><span class="token punctuation">(</span><span class="token string">&quot;annotation-value-repeat&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnnotatedElementTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnnotatedElementTest</span><span class="token punctuation">&gt;</span></span> clz <span class="token operator">=</span> <span class="token class-name">AnnotatedElementTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
        <span class="token class-name">Annotation</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredAnnotations <span class="token operator">=</span> clz<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>declaredAnnotations<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8F93\u51FA\u5185\u5BB9</span>
<span class="token comment">// @annotation.MyAnnos(value=[@annotation.MyAnno(value=annotation-value), @annotation.MyAnno(value=annotation-value-repeat)])</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><br><h3 id="\u83B7\u53D6\u6CE8\u89E3\u4FE1\u606F" tabindex="-1">\u83B7\u53D6\u6CE8\u89E3\u4FE1\u606F <a class="header-anchor" href="#\u83B7\u53D6\u6CE8\u89E3\u4FE1\u606F" aria-hidden="true">#</a></h3><p><code>java.lang.reflect.AnnotatedElement</code>\u63A5\u53E3\u63D0\u4F9B\u4E86\u53EF\u4EE5\u83B7\u53D6\u6CE8\u89E3\u7684\u65B9\u6CD5\uFF1A</p><div class="language-java line-numbers-mode"><pre><code><span class="token comment">/**
 * Represents an annotated element of the program currently running in this VM.
 * \u4EE3\u8868 VM \u4E2D\u5F53\u524D\u8FD0\u884C\u7A0B\u5E8F\u7684\u4E00\u4E2A\u6CE8\u89E3\u5143\u7D20
 * This interface allows annotations to be read reflectively.
 * \u6B64\u63A5\u53E3\u5141\u8BB8\u4EE5\u53CD\u5C04\u65B9\u5F0F\u83B7\u53D6\u6CE8\u89E3
 * All annotations returned by methods in this interface are immutable and serializable.
 * \u901A\u8FC7\u5F53\u524D\u63A5\u53E3\u65B9\u6CD5\u83B7\u53D6\u5230\u7684\u6240\u6709\u6CE8\u89E3\u90FD\u662F\u4E0D\u53EF\u53D8\u7684\u3001\u53EF\u5E8F\u5217\u5316\u7684
 * The arrays returned by methods of this interface may be modified by callers without affecting the arrays returned to other callers.
 * \u63A5\u53E3\u4E2D\u7684\u65B9\u6CD5\u8FD4\u56DE\u7684\u6570\u7EC4\u5185\u5BB9\u53EF\u4EE5\u88AB\u8C03\u7528\u8005\u4FEE\u6539\uFF0C\u4F46\u4E0D\u4F1A\u5F71\u54CD\u5176\u4ED6\u8C03\u7528\u8005\u83B7\u53D6\u5230\u7684\u6570\u7EC4
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AnnotatedElement</span> <span class="token punctuation">{</span>
  	<span class="token comment">/**
  	 * Returns true if an annotation for the specified type is present on this element, else false.
  	 * \u5982\u679C\u5F53\u524D\u5143\u7D20\u5B58\u5728\u6307\u5B9A\u7684\u6CE8\u89E3\uFF0C\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false
  	 * The truth value returned by this method is equivalent to: getAnnotation(annotationClass) != null
  	 * \u8FD4\u56DE true \u7684\u60C5\u51B5\u4E0B\uFF0C\u6B64\u65B9\u6CD5\u7B49\u4EF7\u4E8E getAnnotation(annotationClass) != null
  	 */</span>
    <span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span> annotationClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getAnnotation</span><span class="token punctuation">(</span>annotationClass<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  	<span class="token comment">/**
  	 * Returns this element&#39;s annotation for the specified type if such an annotation is present, else null.
  	 * \u5982\u679C\u5F53\u524D\u5143\u7D20\u5B58\u5728\u6307\u5B9A\u7684\u6CE8\u89E3\u5219\u5C06\u6CE8\u89E3\u8FD4\u56DE\uFF0C\u5426\u5219\u8FD4\u56DE null
  	 */</span>
    <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> annotationClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

  	<span class="token comment">/**
  	 * Returns annotations that are present on this element. If there are no annotations present on this element, the return value is an array of length 0.
  	 * \u8FD4\u56DE\u5F53\u524D\u5143\u7D20\u6807\u6CE8\u7684\u6240\u6709\u6CE8\u89E3\uFF0C\u5982\u679C\u5F53\u524D\u5143\u7D20\u65E0\u6CE8\u89E3\u5B58\u5728\uFF0C\u5219\u8FD4\u56DE\u957F\u5EA6\u4E3A 0 \u7684\u6570\u7EC4
  	 * The caller of this method is free to modify the returned array; it will have no effect on the arrays returned to other callers.
  	 * \u65B9\u6CD5\u8C03\u7528\u8005\u53EF\u4EE5\u81EA\u7531\u7684\u4FEE\u6539\u6570\u7EC4\u5185\u5BB9\uFF0C\u4E14\u4E0D\u4F1A\u5F71\u54CD\u5230\u5176\u4ED6\u8C03\u7528\u8005\u5F97\u5230\u7684\u6570\u7EC4\u7ED3\u679C
  	 */</span>
    <span class="token class-name">Annotation</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  	<span class="token comment">/**
  	 * Returns annotations that are associated with this element.
  	 * \u8FD4\u56DE\u548C\u5F53\u524D\u5143\u7D20\u6709\u5173\u8054\u7684\u6240\u6709\u6CE8\u89E3
  	 * If there are no annotations associated with this element, the return value is an array of length 0.
  	 * \u5982\u679C\u5F53\u524D\u5143\u7D20\u65E0\u6CE8\u89E3\uFF0C\u5219\u8FD4\u56DE\u4E00\u4E2A\u957F\u5EA6\u4E3A 0 \u7684\u6570\u7EC4
  	 * The difference between this method and getAnnotation(Class) is that this method detects if its argument is a repeatable annotation type
  	 * \u8FD9\u4E2A\u65B9\u6CD5\u548CgetAnnotation(Class)\u7684\u533A\u522B\u5728\u4E8E\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u68C0\u6D4B\u5B83\u7684\u53C2\u6570\u662F\u5426\u662F\u4E00\u4E2A\u53EF\u91CD\u590D\u7684\u6CE8\u89E3\u7C7B\u578B
  	 * and if so, attempts to find one or more annotations of that type by &quot;looking through&quot; a container annotation.
  	 * \u5982\u679C\u662F\u53EF\u91CD\u590D\u6CE8\u89E3\uFF0C\u5C1D\u8BD5\u901A\u8FC7\u201C\u6D4F\u89C8\u201D\u7ED3\u679C\u5BB9\u5668\u4E2D\u7684\u5185\u5BB9\u627E\u5230\u4E00\u4E2A\u6216\u591A\u4E2A\u8BE5\u7C7B\u578B\u6CE8\u89E3
  	 * The caller of this method is free to modify the returned array; it will have no effect on the arrays returned to other callers.
  	 */</span>
    <span class="token keyword">default</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> annotationClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">/*
        * Definition of associated: directly or indirectly present OR
        * neither directly nor indirectly present AND the element is
        * a Class, the annotation type is inheritable, and the
        * annotation type is associated with the superclass of the
        * element.
        * \u5173\u8054\u7684\u5B9A\u4E49\uFF1A
        * 1\u3001\u76F4\u63A5/\u95F4\u63A5\u51FA\u73B0
        * 2\u3001\u975E\u76F4\u63A5/\u975E\u95F4\u63A5\u51FA\u73B0\uFF0C\u5F53\u524D\u5143\u7D20\u662F\u4E00\u4E2A\u7C7B\uFF0C\u6CE8\u89E3\u7C7B\u578B\u662F\u53EF\u7EE7\u627F\u7684\uFF0C\u4E14\u6CE8\u89E3\u7C7B\u578B\u548C\u5176\u7236\u7C7B\u6709\u5173\u8054
        */</span>
       <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token function">getDeclaredAnnotationsByType</span><span class="token punctuation">(</span>annotationClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token comment">// Neither directly nor indirectly present</span>
           <span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">Class</span> <span class="token operator">&amp;&amp;</span> <span class="token comment">// the element is a class</span>
           <span class="token class-name">AnnotationType</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>annotationClass<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInherited</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Inheritable</span>
           <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> superClass <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>superClass <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token comment">// Determine if the annotation is associated with the</span>
               <span class="token comment">// superclass</span>
             	 <span class="token comment">// \u5224\u65AD\u6CE8\u89E3\u7C7B\u578B\u548C\u7236\u7C7B\u662F\u5426\u6709\u5173\u8054 </span>
               result <span class="token operator">=</span> superClass<span class="token punctuation">.</span><span class="token function">getAnnotationsByType</span><span class="token punctuation">(</span>annotationClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
  	<span class="token comment">/**
  	 * Returns this element&#39;s annotation for the specified type if such an annotation is directly present, else null. 
  	 * \u8FD4\u56DE\u5F53\u524D\u5143\u7D20\u4E2D\u7684\u76F4\u63A5\u51FA\u73B0\u5728\u67D0\u4E2A\u6307\u5B9A\u6CE8\u89E3\uFF0C\u82E5\u4E0D\u5B58\u5728\uFF0C\u8FD4\u56DE null
  	 * This method ignores inherited annotations. (Returns null if no annotations are directly present on this element.)
  	 * \u6B64\u65B9\u6CD5\u4F1A\u5FFD\u7565\u7EE7\u627F\u7684\u6CE8\u89E3
  	 */</span>
  	<span class="token keyword">default</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">getDeclaredAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> annotationClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>annotationClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">// Loop over all directly-present annotations looking for a matching one</span>
         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Annotation</span> annotation <span class="token operator">:</span> <span class="token function">getDeclaredAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token keyword">if</span> <span class="token punctuation">(</span>annotationClass<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>annotation<span class="token punctuation">.</span><span class="token function">annotationType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                 <span class="token comment">// More robust to do a dynamic cast at runtime instead</span>
                 <span class="token comment">// of compile-time only.</span>
               	 <span class="token comment">// \u5728\u8FD0\u884C\u671F\u95F4\u4EE5\u66F4\u7A33\u5B9A\u7684\u65B9\u5F0F\u8FDB\u884C\u52A8\u6001\u8F6C\u6362\uFF0C\u4EE3\u66FF\u7F16\u8BD1\u671F\u95F4\u8FDB\u884C</span>
                 <span class="token keyword">return</span> annotationClass<span class="token punctuation">.</span><span class="token function">cast</span><span class="token punctuation">(</span>annotation<span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
  	
  	<span class="token comment">/**
  	 * Returns this element&#39;s annotation(s) for the specified type if such annotations are either directly present or indirectly present. This method ignores inherited annotations. If there are no specified annotations directly or indirectly present on this element, the return value is an array of length 0.
  	 * The difference between this method and getDeclaredAnnotation(Class) is that this method detects if its argument is a repeatable annotation type
  	 * \u4E0E getDeclaredAnnotation \u65B9\u6CD5\u4E0D\u540C\u7684\u662F\u6B64\u65B9\u6CD5\u4F1A\u68C0\u67E5\u4F5C\u4E3A\u53C2\u6570\u7684\u6CE8\u89E3\u662F\u5426\u53EF\u91CD\u590D
  	 * and if so, attempts to find one or more annotations of that type by &quot;looking through&quot; a container annotation if one is present.
  	 * \u5982\u679C\u53EF\u91CD\u590D\uFF0C\u5C1D\u8BD5\u627E\u5230\u4E00\u4E2A\u6216\u591A\u4E2A\u5BF9\u5E94\u7684\u6CE8\u89E3
  	 * The caller of this method is free to modify the returned array; it will have no effect on the arrays returned to other callers.
  	 */</span>
    <span class="token keyword">default</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getDeclaredAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> annotationClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>annotationClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token class-name">AnnotationSupport</span><span class="token punctuation">.</span>
              <span class="token function">getDirectlyAndIndirectlyPresent</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token function">getDeclaredAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                                              <span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">Annotation</span><span class="token operator">::</span><span class="token function">annotationType</span><span class="token punctuation">,</span>
                                                                       <span class="token class-name">Function</span><span class="token punctuation">.</span><span class="token function">identity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                       <span class="token punctuation">(</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span>second<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> first<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                       <span class="token class-name">LinkedHashMap</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                              annotationClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

    <span class="token comment">// \u8FD4\u56DE\u76F4\u63A5\u51FA\u73B0\u5728\u6B64\u5143\u7D20\u4E0A\u7684\u6240\u6709\u6CE8\u89E3\u53CA\u6CE8\u89E3\u5BF9\u5E94\u7684\u91CD\u590D\u6CE8\u89E3\uFF0C\u6B64\u65B9\u6CD5\u5C06\u5FFD\u7565\u7EE7\u627F\u7684\u6CE8\u89E3</span>
    <span class="token comment">// getDeclaredXXX \u90FD\u4F1A\u5FFD\u7565\u7EE7\u627F\u7684\u6CE8\u89E3</span>
    <span class="token class-name">Annotation</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getDeclaredAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br></div></div><br><h2 id="\u53C2\u8003" tabindex="-1">\u53C2\u8003 <a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a></h2><p><a href="https://pdai.tech/md/java/basic/java-basic-oop.html" target="_blank" rel="noopener noreferrer">pdai.tech</a></p><p><a href="https://blog.csdn.net/u010642004/article/details/50099913" target="_blank" rel="noopener noreferrer">java \u4E2D boolean \u7C7B\u578B\u5360\u51E0\u4E2A\u5B57\u8282</a></p><p><a href="https://www.cnblogs.com/Andya/p/14067618.html" target="_blank" rel="noopener noreferrer">JVM\u2014\u2014\u5B57\u7B26\u4E32\u5E38\u91CF\u6C60\u8BE6\u89E3</a></p><p><a href="https://tech.meituan.com/2014/03/06/in-depth-understanding-string-intern.html" target="_blank" rel="noopener noreferrer">\u6DF1\u5165\u89E3\u6790 String#intern</a></p><p><a href="https://segmentfault.com/a/1190000021898422" target="_blank" rel="noopener noreferrer">\u9762\u5411\u5BF9\u8C61\u7684\u4E09\u5927\u57FA\u672C\u7279\u5F81\u548C\u4E94\u5927\u57FA\u672C\u539F\u5219</a></p>`,234);function i(k,b,m,d,h,y){const n=t("Catalog");return o(),a("div",null,[u,p(n)])}var f=s(r,[["render",i]]);export{w as __pageData,f as default};
